{
  "intents": [
    {
      "intent": "address_change",
      "examples": [
        {
          "text": "can you update my address"
        },
        {
          "text": "change my address"
        },
        {
          "text": "change of address for client"
        },
        {
          "text": "I need an address change"
        },
        {
          "text": "I need to change address"
        },
        {
          "text": "I need to change mailing address"
        },
        {
          "text": "I need to change my address"
        },
        {
          "text": "I need to change my mailing address"
        },
        {
          "text": "I need to change our home address"
        },
        {
          "text": "I need to correct address"
        },
        {
          "text": "I need to talk to someone to update my address"
        },
        {
          "text": "I need to update address"
        },
        {
          "text": "I need to update a zip code"
        },
        {
          "text": "I need to update my address"
        },
        {
          "text": "I need to update the address for the policy holder"
        },
        {
          "text": "I need to update the owners address"
        },
        {
          "text": "my address needs to be updated"
        },
        {
          "text": "update my address"
        }
      ]
    },
    {
      "intent": "agent_change",
      "examples": [
        {
          "text": "agent C. agent change"
        },
        {
          "text": "agent change"
        },
        {
          "text": "agent of record change"
        },
        {
          "text": "change agent"
        },
        {
          "text": "change my registered representative"
        },
        {
          "text": "change of agent"
        },
        {
          "text": "change of agent of record"
        },
        {
          "text": "change of broker change of agent"
        },
        {
          "text": "change of dealer form change of registered representative"
        },
        {
          "text": "change of registered representative"
        },
        {
          "text": "change registered representative"
        },
        {
          "text": "change the agent"
        },
        {
          "text": "changing my registered representative"
        },
        {
          "text": "%HESITATION change of agent"
        },
        {
          "text": "my agent passed away"
        },
        {
          "text": "registered rep change"
        },
        {
          "text": "registered representative change"
        },
        {
          "text": "representative agent change"
        }
      ]
    },
    {
      "intent": "beneficiary_change",
      "examples": [
        {
          "text": "beneficiary change"
        },
        {
          "text": "change my beneficiary"
        },
        {
          "text": "%HESITATION beneficiary update"
        },
        {
          "text": "%HESITATION change change of beneficiaries"
        },
        {
          "text": "%HESITATION change of beneficiary"
        },
        {
          "text": "I need to change my beneficiaries"
        },
        {
          "text": "I need to update my beneficiary"
        },
        {
          "text": "The beneficiary on my policy needs to be updated."
        },
        {
          "text": "To make an update to my beneficiaries."
        },
        {
          "text": "To update my beneficiary elections"
        },
        {
          "text": "update beneficiary information"
        }
      ]
    },
    {
      "intent": "beneficiary_confirmation",
      "examples": [
        {
          "text": "beneficiary needing a copy"
        },
        {
          "text": "checking on beneficiaries"
        },
        {
          "text": "check on beneficiaries of my policy"
        },
        {
          "text": "confirm who present beneficiary is"
        },
        {
          "text": "I need beneficiary information"
        },
        {
          "text": "I need to check beneficiary"
        },
        {
          "text": "I need to check the beneficiary"
        },
        {
          "text": "I need to confirm beneficiary is"
        },
        {
          "text": "I need to confirm the beneficiary"
        },
        {
          "text": "I need to know who beneficiary is"
        },
        {
          "text": "I need to know who the beneficiary is"
        },
        {
          "text": "I need to verify the beneficiary"
        },
        {
          "text": "I need to verify the beneficiary on my policy"
        },
        {
          "text": "I need to verify the that the beneficiary is correct"
        },
        {
          "text": "I want to confirm the beneficiary designations"
        },
        {
          "text": "I want to verify beneficiary"
        },
        {
          "text": "want to confirm beneficiary"
        },
        {
          "text": "who is listed as beneficiary"
        },
        {
          "text": "who is listed as my beneficiary"
        },
        {
          "text": "who is my beneficiary"
        },
        {
          "text": "who is the beneficiary"
        }
      ]
    },
    {
      "intent": "billing_general",
      "examples": [
        {
          "text": "a billing"
        },
        {
          "text": "billing"
        },
        {
          "text": "billing billing I guess"
        },
        {
          "text": "billing department"
        },
        {
          "text": "billing details"
        },
        {
          "text": "billing for"
        },
        {
          "text": "billing information"
        },
        {
          "text": "billing receipt"
        },
        {
          "text": "billing request"
        },
        {
          "text": "I need billing details"
        },
        {
          "text": "I need billing information"
        },
        {
          "text": "I need information regarding my premium"
        },
        {
          "text": "I need premium information"
        },
        {
          "text": "i need to check on the bill"
        }
      ]
    },
    {
      "intent": "billing_questions",
      "examples": [
        {
          "text": "a question about a bill"
        },
        {
          "text": "a question about my bill"
        },
        {
          "text": "I don't understand my bill"
        },
        {
          "text": "I have a question about my bill"
        },
        {
          "text": "I have questions on my bill"
        },
        {
          "text": "question about a bill"
        },
        {
          "text": "question about my bill"
        },
        {
          "text": "question about my bill about my insurance"
        },
        {
          "text": "question on my bill"
        },
        {
          "text": "question on the bill"
        },
        {
          "text": "question regarding a bill"
        },
        {
          "text": "questions about my bill"
        },
        {
          "text": "questions on the bill I just received in the mail"
        },
        {
          "text": "we have billing questions please"
        }
      ]
    },
    {
      "intent": "bill_not_received",
      "examples": [
        {
          "text": "did not receive a bill"
        },
        {
          "text": "did not receive a bill for October 1 insurance"
        },
        {
          "text": "did not receive a bill for of policy number you XXXXXXXX"
        },
        {
          "text": "did not receive a bill for the premium do"
        },
        {
          "text": "I didn't receive the bill fort"
        },
        {
          "text": "I'm agent and my client did not receive the premium notice for the policy"
        },
        {
          "text": "I'm calling because I hadn't received the bill and I wanted to check on it"
        },
        {
          "text": "I'm not sure if I receive my bill"
        },
        {
          "text": "to receive my bill for this for November 1"
        }
      ]
    },
    {
      "intent": "change_draft_date",
      "examples": [
        {
          "text": "I'll change the draft date"
        },
        {
          "text": "I need to change my draft date"
        },
        {
          "text": "I need to change my draft day"
        },
        {
          "text": "I need you to take my premium from my account on a different day"
        },
        {
          "text": "I want to update the date for my auto draft"
        },
        {
          "text": "to get the bank draft date changed"
        }
      ]
    },
    {
      "intent": "claims",
      "examples": [
        {
          "text": "claims department"
        },
        {
          "text": "claims status representative"
        },
        {
          "text": "file a claim on my husband"
        },
        {
          "text": "hesitation to hesitation inform of hesitation my husbands passing"
        },
        {
          "text": "I am calling to start a claim"
        },
        {
          "text": "I'm calling to start a claim on this policy"
        },
        {
          "text": "I need to file a claim"
        },
        {
          "text": "I need to get a fax of a claim form"
        },
        {
          "text": "I need to know the amount of my claim"
        },
        {
          "text": "I need to make a beneficiary claim"
        },
        {
          "text": "I need to report a claim"
        },
        {
          "text": "I need to talk to someone about my uncles passing"
        },
        {
          "text": "Questions on a claimant statement"
        },
        {
          "text": "Requesting to start a claim for my wife"
        },
        {
          "text": "To speak to someone about my aunts death"
        },
        {
          "text": "to speak to someone about my husband's passing\""
        },
        {
          "text": "To start a claim on the insured"
        }
      ]
    },
    {
      "intent": "copy_of_bill",
      "examples": [
        {
          "text": "I need a invoice for my policy"
        },
        {
          "text": "I need a invoice for the policy"
        },
        {
          "text": "I need an invoice for my policy"
        },
        {
          "text": "I need an invoice for the policy"
        },
        {
          "text": "I need a payment notice"
        },
        {
          "text": "I need the invoice for a policy"
        },
        {
          "text": "I need the invoice for my policy"
        },
        {
          "text": "missing bill"
        },
        {
          "text": "receive the bill"
        },
        {
          "text": "We need an invoice for the policy"
        }
      ]
    },
    {
      "intent": "correspondence_address",
      "examples": [
        {
          "text": "I am sending correspondence"
        },
        {
          "text": "I need the address to mail a ten thirty five exchange"
        },
        {
          "text": "I need the address to send a form"
        },
        {
          "text": "I need the correspondence address"
        },
        {
          "text": "I need the general mailing address"
        },
        {
          "text": "I need to know where can mailed my 1035 document"
        },
        {
          "text": "I need to mail a form"
        },
        {
          "text": "I need to return a form"
        },
        {
          "text": "I need to send a letter"
        },
        {
          "text": "I want the 1035 exchange address"
        },
        {
          "text": "Where do I mail a request"
        },
        {
          "text": "Where do I mail forms"
        },
        {
          "text": "Where do I send 1035 exchange paperwork?"
        }
      ]
    },
    {
      "intent": "customer_service",
      "examples": [
        {
          "text": "agent please"
        },
        {
          "text": "automatic withdrawal from my checking account representative please agent"
        },
        {
          "text": "Can I speak to a representative please"
        },
        {
          "text": "could i speak with someone"
        },
        {
          "text": "Give me the operator"
        },
        {
          "text": "%HESITATION customer service"
        },
        {
          "text": "How do I get to a customer representative"
        },
        {
          "text": "I'd like to speak to a human"
        },
        {
          "text": "I'd like to talk to someone but evidently you're not getting it"
        },
        {
          "text": "I'd like to talk to the client service department"
        },
        {
          "text": "I don't need a form I need to talk with someone"
        },
        {
          "text": "I have questions about my premium"
        },
        {
          "text": "I have questions for a representative"
        },
        {
          "text": "I have questions on the policy"
        },
        {
          "text": "i like to talk to someone about my hesitation hesitation policy"
        },
        {
          "text": "I need a live person"
        },
        {
          "text": "I need assistance"
        },
        {
          "text": "I need customer service"
        },
        {
          "text": "I need help"
        },
        {
          "text": "I need help with an illustration"
        },
        {
          "text": "I need to discuss my policy"
        },
        {
          "text": "I need to speak to a representative regarding an ownership change form"
        },
        {
          "text": "I need to speak to a representative regarding the 1035 exchange mailing address"
        },
        {
          "text": "i need to speak to someone about a letter i received"
        },
        {
          "text": "I need to speak with a representative to see how to mail something"
        },
        {
          "text": "I need to speak with someone about the policy"
        },
        {
          "text": "I need to talk about the payment for monthly"
        },
        {
          "text": "I need to talk about with an i r s tax identification number yes"
        },
        {
          "text": "I need to talk to a specialist about a certain policy i was cut off"
        },
        {
          "text": "I need to talk to somebody about a letter i received"
        },
        {
          "text": "I need to talk to somebody about the letter i got to call your company"
        },
        {
          "text": "I need to talk to someone"
        },
        {
          "text": "I need to talk to someone about my bene change form"
        },
        {
          "text": "I need to talk to someone about my surrender value"
        },
        {
          "text": "I need to understand cash value"
        },
        {
          "text": "I speak to an agent"
        },
        {
          "text": "Is there a customer support area"
        },
        {
          "text": "I want a person do you understand that"
        },
        {
          "text": "I want to talk to a real person"
        },
        {
          "text": "i want to talk to someone about a payment notice i received yes"
        },
        {
          "text": "I want to talk to someone to update my mailing address"
        },
        {
          "text": "I would like to talk to a representative"
        },
        {
          "text": "Jesus Christ no please representative"
        },
        {
          "text": "life insurance talk to someone about my mother employee"
        },
        {
          "text": "rep now"
        },
        {
          "text": "representative I want to talk to a representative"
        },
        {
          "text": "representative please I need a representative"
        },
        {
          "text": "speak to a representative"
        },
        {
          "text": "talk to a representative"
        },
        {
          "text": "talk to representative about my life insurance"
        },
        {
          "text": "talk to somebody about my very about life insurance"
        }
      ]
    },
    {
      "intent": "death_claims",
      "examples": [
        {
          "text": "death claim status please"
        },
        {
          "text": "I am calling to start a death claim"
        },
        {
          "text": "I am checking the status of a death claim"
        },
        {
          "text": "i checked the status on the claim"
        },
        {
          "text": "I'm calling about a death claim"
        },
        {
          "text": "I'm calling regarding a policy for my mother who passed away is deceased"
        },
        {
          "text": "I'm the beneficiary of of of women who just passed away"
        },
        {
          "text": "I need information on a death claim that was previously reported"
        },
        {
          "text": "I need to report the death of an insured"
        },
        {
          "text": "I need to start a claim for a child rider"
        },
        {
          "text": "I was calling today about a claim on it for my wife passed away"
        },
        {
          "text": "kirk following up on a death claim thank heres this"
        },
        {
          "text": "My husband passed away"
        },
        {
          "text": "my mother passed away"
        },
        {
          "text": "my sister had passed away and i was just wondering if the policy works l located there"
        },
        {
          "text": "My wife passed so I need to start a claim on her"
        },
        {
          "text": "report the insureds passing"
        },
        {
          "text": "The insured passed away"
        },
        {
          "text": "The insured person died"
        },
        {
          "text": "The rider died"
        },
        {
          "text": "The rider passed away"
        },
        {
          "text": "yes hello my mother passed away i have to receive i have to receive insured"
        }
      ]
    },
    {
      "intent": "disbursement",
      "examples": [
        {
          "text": "borrow money against my policy"
        },
        {
          "text": "calling to borrow money from my policy"
        },
        {
          "text": "can i borrow on the policy"
        },
        {
          "text": "How can I take value out of my policy"
        },
        {
          "text": "I need a loan"
        },
        {
          "text": "I need to take a withdrawal"
        },
        {
          "text": "I need to take money out of my policy"
        },
        {
          "text": "lets take some money out"
        },
        {
          "text": "loan request from my policy"
        },
        {
          "text": "looking to take a cash withdrawal"
        },
        {
          "text": "this to withdrawal hesitation money"
        },
        {
          "text": "withdrawal from life insurance"
        },
        {
          "text": "withdrawal from my account"
        },
        {
          "text": "withdrawal request from my policy"
        }
      ]
    },
    {
      "intent": "duplicate_policy",
      "examples": [
        {
          "text": "calling for a copy of the policy"
        },
        {
          "text": "can you help me with a duplicate policy request"
        },
        {
          "text": "how do I obtain a copy of my policy"
        },
        {
          "text": "I need a copy of my policy"
        },
        {
          "text": "I need a duplicate policy"
        },
        {
          "text": "looking for a duplicate of my policy"
        },
        {
          "text": "request for a copy of my insurance policy"
        }
      ]
    },
    {
      "intent": "fax_number",
      "examples": [
        {
          "text": "I'll take the fax number please"
        },
        {
          "text": "I need the fax number"
        },
        {
          "text": "I need to fax a request"
        },
        {
          "text": "number to fax forms to"
        },
        {
          "text": "what number do I fax forms to"
        },
        {
          "text": "where can forms be faxed"
        }
      ]
    },
    {
      "intent": "form_questions",
      "examples": [
        {
          "text": "confusion on form"
        },
        {
          "text": "%HESITATION help filling out a form"
        },
        {
          "text": "%HESITATION questions about a form"
        },
        {
          "text": "I have questions on the form I just received in the mail"
        },
        {
          "text": "I have questions on this form"
        },
        {
          "text": "I need help with a bank form"
        },
        {
          "text": "I need help with a form"
        },
        {
          "text": "I need information on surrender forms"
        },
        {
          "text": "regarding paperwork I received in the mail"
        }
      ]
    },
    {
      "intent": "forms",
      "examples": [
        {
          "text": "agent change request form"
        },
        {
          "text": "because I need the pac form to be mailed"
        },
        {
          "text": "Can I have a trust form"
        },
        {
          "text": "change of ownership form"
        },
        {
          "text": "How do I print a form from the website"
        },
        {
          "text": "I'm requesting some new beneficiary forms to be emailed to me"
        },
        {
          "text": "I need a beneficiary change form"
        },
        {
          "text": "I need a change of beneficiary form"
        },
        {
          "text": "I need a form"
        },
        {
          "text": "I need a form to be fax"
        },
        {
          "text": "I need a form to change banking information"
        },
        {
          "text": "I need a form to change my bank draft"
        },
        {
          "text": "I need a form to change the beneficiary on that policy"
        },
        {
          "text": "I need a form to change the ownership"
        },
        {
          "text": "I need a form to have automatic payments taken out of my account"
        },
        {
          "text": "I need a form to set up premium payments"
        },
        {
          "text": "I need an application for change"
        },
        {
          "text": "I need a pac form mailed to the address of record"
        },
        {
          "text": "i need a partial surrender form"
        },
        {
          "text": "I need a surrender form"
        },
        {
          "text": "I need a surrender form faxed to me"
        },
        {
          "text": "I need a W. 9"
        },
        {
          "text": "I need forms to surrender"
        },
        {
          "text": "I need the pre authorized check form to be faxed"
        },
        {
          "text": "I need the the beneficiary change form"
        },
        {
          "text": "I need to change beneficiary"
        },
        {
          "text": "I need to change of beneficiary form"
        },
        {
          "text": "I need to change of ownership form"
        },
        {
          "text": "I need to change of want ownership form"
        },
        {
          "text": "I need to get an updated beneficiary form"
        },
        {
          "text": "I need to get a surrender form for this policy"
        },
        {
          "text": "I need to have you send it beneficiary change paperwork to me"
        },
        {
          "text": "I need to set up an automatic payment"
        },
        {
          "text": "I need to update my auto payment"
        },
        {
          "text": "I need to update my banking information"
        },
        {
          "text": "I need to update my debit card information"
        },
        {
          "text": "I need transfer of ownership form"
        },
        {
          "text": "I want a policy owners request for service form"
        },
        {
          "text": "I want to change of beneficiary form"
        },
        {
          "text": "I want you to send forms that are necessary to change my ownership of my policy"
        },
        {
          "text": "I was calling to get some form sent to me to surrender this policy"
        },
        {
          "text": "I would like a surrender form mailed to me"
        },
        {
          "text": "I would like a surrender form request"
        },
        {
          "text": "I would like to get a change of beneficiary request form"
        },
        {
          "text": "I would like to receive a change of beneficiary form"
        },
        {
          "text": "I would like to surrender I'd like to get the form to get a cash surrender"
        },
        {
          "text": "My customer needs a form to be faxed"
        },
        {
          "text": "need a bank draft form"
        },
        {
          "text": "need a beneficiary change form"
        },
        {
          "text": "need a beneficiary form"
        },
        {
          "text": "need a form to change beneficiary"
        },
        {
          "text": "need a form to change the beneficiary"
        },
        {
          "text": "need a surrender form for time insurance"
        },
        {
          "text": "need a surrender form mail"
        },
        {
          "text": "need beneficiary change form"
        },
        {
          "text": "need change of ownership form"
        },
        {
          "text": "need to request form to update the beneficiary"
        },
        {
          "text": "request a surrender form"
        },
        {
          "text": "request for service"
        },
        {
          "text": "requesting surrender form"
        },
        {
          "text": "surrender form request"
        },
        {
          "text": "the the ownership change form"
        },
        {
          "text": "to get a beneficiary change form"
        },
        {
          "text": "to request an owner change form"
        },
        {
          "text": "transfer of ownership form"
        },
        {
          "text": "transfer ownership paperwork"
        },
        {
          "text": "we need a surrender form"
        },
        {
          "text": "what I need to cash out"
        },
        {
          "text": "what's cash surrender form"
        }
      ]
    },
    {
      "intent": "general_questions",
      "examples": [
        {
          "text": "general information"
        },
        {
          "text": "general question"
        },
        {
          "text": "I have questions"
        },
        {
          "text": "I have some more questions"
        },
        {
          "text": "I need to ask questions today"
        },
        {
          "text": "yes I have questions"
        }
      ]
    },
    {
      "intent": "grace_notice",
      "examples": [
        {
          "text": "about a notice of policy grace period that i received"
        },
        {
          "text": "a grace period notice"
        },
        {
          "text": "a grace period notice i received"
        },
        {
          "text": "hesitation notice a policy grace period"
        },
        {
          "text": "i just got a grace period notice"
        },
        {
          "text": "i received a final notice of policy grace period"
        },
        {
          "text": "I received a grace notice"
        },
        {
          "text": "i received a grace period and notice"
        },
        {
          "text": "i received a grace period notice"
        },
        {
          "text": "i received a notice about policy grace"
        },
        {
          "text": "i received a notice of policy grace period letter"
        },
        {
          "text": "notice of policy grace"
        },
        {
          "text": "notice of policy grace period"
        },
        {
          "text": "notice of policy grace period received"
        },
        {
          "text": "received a grace period notice"
        },
        {
          "text": "receiving grace period notice"
        },
        {
          "text": "we received a final notice of policy grace period"
        },
        {
          "text": "yep receipt of grace period notice"
        }
      ]
    },
    {
      "intent": "illustration_request",
      "examples": [
        {
          "text": "can you mail me an illustration"
        },
        {
          "text": "can you send me an illustration"
        },
        {
          "text": "i life insurance quote"
        },
        {
          "text": "i like it inforce illustration"
        },
        {
          "text": "illustration request"
        },
        {
          "text": "I'm calling to request an inforce illustration"
        },
        {
          "text": "I need a new inforce assessment"
        },
        {
          "text": "I need an illustration"
        },
        {
          "text": "I need an illustration for a policy"
        },
        {
          "text": "I need an illustration request form"
        },
        {
          "text": "I need an illustration sheet"
        },
        {
          "text": "I need an updated illustration"
        },
        {
          "text": "I need a reprojection for my policy"
        },
        {
          "text": "I need on illustration"
        },
        {
          "text": "I need policy illustration"
        },
        {
          "text": "I need to get an inforce illustration"
        },
        {
          "text": "I would like a current illustration"
        },
        {
          "text": "like in inforce illustration"
        },
        {
          "text": "order an inforce illustration"
        },
        {
          "text": "to request an inforce proposal"
        }
      ]
    },
    {
      "intent": "investment_options",
      "examples": [
        {
          "text": "I need available funds for my policy"
        },
        {
          "text": "I need investment options"
        },
        {
          "text": "I need names of investment choices all names"
        },
        {
          "text": "I need the investment options"
        },
        {
          "text": "I need the v u l investment options"
        },
        {
          "text": "I need to be will investment options"
        },
        {
          "text": "I need to find investment options"
        },
        {
          "text": "investment options for policy"
        }
      ]
    },
    {
      "intent": "letter_received",
      "examples": [
        {
          "text": "about a letter i got in the mail"
        },
        {
          "text": "a letter i received"
        },
        {
          "text": "a letter i received in the mail"
        },
        {
          "text": "EFT letter"
        },
        {
          "text": "got a letter in the mail"
        },
        {
          "text": "hesitation question a letter i received"
        },
        {
          "text": "I got a letter"
        },
        {
          "text": "I got a letter in the mail"
        },
        {
          "text": "I got a letter in the mail and i don't know what to do with it"
        },
        {
          "text": "I got a notice from you"
        },
        {
          "text": "I just received a letter i need information"
        },
        {
          "text": "I'm calling with reference to a letter i just received"
        },
        {
          "text": "I'm enquiring about a a letter that i received in the mail"
        },
        {
          "text": "I need to discuss a letter i received in the mail"
        },
        {
          "text": "I received a letter"
        },
        {
          "text": "i received a letter i'm id like to respond"
        },
        {
          "text": "I received a letter in the mail"
        },
        {
          "text": "letter telling me my premium was past due"
        },
        {
          "text": "mmhm i got a letter in the mail"
        },
        {
          "text": "person letter received in the mail"
        },
        {
          "text": "questions about a letter we received"
        },
        {
          "text": "received a letter in the mail"
        },
        {
          "text": "regarding a letter that i received from your department"
        },
        {
          "text": "regarding the letter I received"
        },
        {
          "text": "regards to a letter that i got from the company"
        },
        {
          "text": "they have the life insurance policy i received a letter from your company"
        },
        {
          "text": "Time Union letter"
        },
        {
          "text": "to respond to a letter i received today"
        },
        {
          "text": "we received a letter from your company"
        }
      ]
    },
    {
      "intent": "licensing_commissions",
      "examples": [
        {
          "text": "I have a question regarding licensing"
        },
        {
          "text": "I have licensing questions"
        },
        {
          "text": "I need to speak with commissions"
        },
        {
          "text": "licensing and commission"
        },
        {
          "text": "Licensing and commissions please"
        },
        {
          "text": "my question is regarding commissions"
        },
        {
          "text": "Yes, my question is regarding licensing and commissions"
        }
      ]
    },
    {
      "intent": "living_benefits",
      "examples": [
        {
          "text": "Calling for living benefits"
        },
        {
          "text": "I am looking for living benefits"
        },
        {
          "text": "I need to check on a living benefit"
        },
        {
          "text": "Living benefits department please"
        },
        {
          "text": "To speak to someone in living benefits"
        }
      ]
    },
    {
      "intent": "mailing_address",
      "examples": [
        {
          "text": "I am needing the mailing address"
        },
        {
          "text": "I'll take the mailing address please"
        },
        {
          "text": "I need the address"
        },
        {
          "text": "I need the mailing address"
        },
        {
          "text": "I need the mailing address for a 1035 exchange"
        },
        {
          "text": "I need to know where to mail this bene change form"
        },
        {
          "text": "I need to send something"
        },
        {
          "text": "mailing address please"
        },
        {
          "text": "May I have the mailing address"
        },
        {
          "text": "Request mail address"
        },
        {
          "text": "Will you please give me the mailing address"
        }
      ]
    },
    {
      "intent": "main_menu",
      "examples": [
        {
          "text": "Can I get the main menu"
        },
        {
          "text": "Can I start over"
        },
        {
          "text": "Can you go back"
        },
        {
          "text": "Can you start again"
        },
        {
          "text": "Go back to the main menu"
        },
        {
          "text": "I need the main menu again"
        },
        {
          "text": "Main menu please"
        }
      ]
    },
    {
      "intent": "make_payment",
      "examples": [
        {
          "text": "can you accept a premium payment"
        },
        {
          "text": "hesitation to make a payment on the premium"
        },
        {
          "text": "I'm going to payment yep i like to pay my bill"
        },
        {
          "text": "I'm going to pay my monthly premium"
        },
        {
          "text": "I need to make a payment"
        },
        {
          "text": "i need to pay an invoice"
        },
        {
          "text": "I need to pay a premium"
        },
        {
          "text": "i need to pay invoice"
        },
        {
          "text": "i need to pay off a loan"
        },
        {
          "text": "i need to pay off the loan"
        },
        {
          "text": "I need to pay the bill"
        },
        {
          "text": "I need to repay a loan for one of my accounts"
        },
        {
          "text": "I pay my bill"
        },
        {
          "text": "I want to make a payment"
        },
        {
          "text": "i want to way my annual premium"
        },
        {
          "text": "I would like a one time payment"
        },
        {
          "text": "make a payment"
        },
        {
          "text": "make a payment on my policy"
        },
        {
          "text": "make premium payment"
        },
        {
          "text": "pay a life insurance"
        },
        {
          "text": "pay a monthly premium"
        },
        {
          "text": "payment please"
        },
        {
          "text": "pay my bill"
        },
        {
          "text": "pay my policy"
        },
        {
          "text": "pay my premium"
        },
        {
          "text": "pay on my account"
        },
        {
          "text": "pay past do premium"
        },
        {
          "text": "pay semi annual premium"
        },
        {
          "text": "pay the premium yep"
        },
        {
          "text": "policy payment"
        },
        {
          "text": "premium payment by phone"
        },
        {
          "text": "thank pay a bill"
        },
        {
          "text": "to make a premium payment"
        },
        {
          "text": "to make our premium payment"
        },
        {
          "text": "to pay a bill"
        },
        {
          "text": "to pay my bill"
        },
        {
          "text": "to pay my premium"
        },
        {
          "text": "to pay your bill"
        },
        {
          "text": "well i'm trying to make a payment"
        },
        {
          "text": "yep pay my bill"
        },
        {
          "text": "yes just make a payment"
        }
      ]
    },
    {
      "intent": "more_information",
      "examples": [
        {
          "text": "Can you tell me that information"
        },
        {
          "text": "I'll take that information now"
        },
        {
          "text": "I need more information"
        },
        {
          "text": "Information about what"
        },
        {
          "text": "more information please"
        },
        {
          "text": "What was that information"
        }
      ]
    },
    {
      "intent": "name_change",
      "examples": [
        {
          "text": "can you help with a name change"
        },
        {
          "text": "change of name for my policy"
        },
        {
          "text": "how do I update my name"
        },
        {
          "text": "I need to update my last name"
        },
        {
          "text": "I need to update the name on my account"
        },
        {
          "text": "my last name changed"
        }
      ]
    },
    {
      "intent": "no_further_assistance",
      "examples": [
        {
          "text": "I don't have any more questions"
        },
        {
          "text": "I don't need anything else on this policy"
        },
        {
          "text": "I have no further questions"
        },
        {
          "text": "I have what I need"
        },
        {
          "text": "I'm all set"
        },
        {
          "text": "No further help"
        },
        {
          "text": "Nothing else is needed today"
        },
        {
          "text": "nothing further is needed"
        },
        {
          "text": "Nothing, thank you"
        }
      ]
    },
    {
      "intent": "ownership_change",
      "examples": [
        {
          "text": "change ownership of policy"
        },
        {
          "text": "changing the owner to a trust"
        },
        {
          "text": "How do I update the owner info"
        },
        {
          "text": "i am looking to transfer the ownership"
        },
        {
          "text": "I need to change owners"
        },
        {
          "text": "I need to change ownership"
        },
        {
          "text": "I need to change the owner"
        },
        {
          "text": "I need to change the ownership"
        },
        {
          "text": "I need to change the payor"
        },
        {
          "text": "I need to update the owner on my policy"
        },
        {
          "text": "I need to update the ownership info"
        },
        {
          "text": "looking to update the ownership"
        },
        {
          "text": "ownership change"
        },
        {
          "text": "transferring the ownership of the policy to a trust"
        },
        {
          "text": "want to transfer owner"
        }
      ]
    },
    {
      "intent": "pac_request",
      "examples": [
        {
          "text": "How do I set up automatic payments"
        },
        {
          "text": "I need to change bank for payments"
        },
        {
          "text": "I need to change my checking information for my auto payment"
        },
        {
          "text": "I need to change what account my draft comes out of"
        },
        {
          "text": "i need to update bank account"
        },
        {
          "text": "I need to update my bank account"
        },
        {
          "text": "I need to update my checking account"
        },
        {
          "text": "I need to update my checking account used for payments"
        },
        {
          "text": "i need to update my making account for auto pay"
        },
        {
          "text": "I need to update the account that the premium is drafting from"
        },
        {
          "text": "I need to update the bank account for my draft"
        },
        {
          "text": "i need to update the bank on my account"
        },
        {
          "text": "i want to arrange for monthly automatic payments"
        },
        {
          "text": "i want to establish reoccurring quarterly payments"
        }
      ]
    },
    {
      "intent": "payment_address",
      "examples": [
        {
          "text": "find correct address to mail premium"
        },
        {
          "text": "I'll take the premium address"
        },
        {
          "text": "I need the address to send payments to"
        },
        {
          "text": "I need the premium address"
        },
        {
          "text": "I need to mail a payment"
        },
        {
          "text": "request payment address"
        },
        {
          "text": "The premium address please"
        },
        {
          "text": "whatever address you send a check to"
        }
      ]
    },
    {
      "intent": "policy_change",
      "examples": [
        {
          "text": "are we able to reduce the face amount"
        },
        {
          "text": "calling to lower the face amount"
        },
        {
          "text": "Can I update my benefits"
        },
        {
          "text": "change the life insurance death benefit"
        },
        {
          "text": "how do I lower the death benefit amount"
        },
        {
          "text": "i need to know if i can reduce the face amount"
        },
        {
          "text": "i need to know if we can reduce the face amount"
        },
        {
          "text": "i need to remove a rider"
        },
        {
          "text": "i want to apply for a face increase"
        },
        {
          "text": "I want to change the underwriting class"
        },
        {
          "text": "I want to lower my insurance policy"
        },
        {
          "text": "looking to lower the benefit amount"
        },
        {
          "text": "reduce the face value of policy"
        }
      ]
    },
    {
      "intent": "policy_questions",
      "examples": [
        {
          "text": "enquiring about a policy"
        },
        {
          "text": "i have a question about a policy"
        },
        {
          "text": "i have a question about the policy"
        },
        {
          "text": "i have question about a policy"
        },
        {
          "text": "I have questions on my policies"
        },
        {
          "text": "I have questions on my policy"
        },
        {
          "text": "I need details on my life insurance please"
        },
        {
          "text": "I need information on my husbands policy"
        },
        {
          "text": "I need policy information"
        },
        {
          "text": "I need some policy information"
        },
        {
          "text": "i need to ask questions on my policy"
        },
        {
          "text": "I need to know more about a life insurance policy for a client"
        },
        {
          "text": "insurance policy"
        },
        {
          "text": "just have a question about the policy"
        },
        {
          "text": "off i have a few questions i think i have a whole life policy"
        },
        {
          "text": "premium question"
        },
        {
          "text": "question about a policy"
        },
        {
          "text": "question about a very able life policy"
        },
        {
          "text": "question about the policy"
        },
        {
          "text": "question on a policy"
        },
        {
          "text": "question on the life policy"
        },
        {
          "text": "question on the policy"
        },
        {
          "text": "questions about life insurance"
        },
        {
          "text": "questions about life insurance live"
        },
        {
          "text": "questions on a life insurance"
        },
        {
          "text": "questions regarding life insurance"
        },
        {
          "text": "we have some policy questions"
        },
        {
          "text": "yeah i have questions about my hartford universal policy"
        }
      ]
    },
    {
      "intent": "policy_status",
      "examples": [
        {
          "text": "checking the status of to policy"
        },
        {
          "text": "check in status of policy"
        },
        {
          "text": "check on the policy status"
        },
        {
          "text": "check on the status of my policy he"
        },
        {
          "text": "check on the status of policy"
        },
        {
          "text": "check status of a policy"
        },
        {
          "text": "check status of my account"
        },
        {
          "text": "check status of policy"
        },
        {
          "text": "check the status of a policy"
        },
        {
          "text": "check the status of my account"
        },
        {
          "text": "I just need status of my policy"
        },
        {
          "text": "i need to find out the status of a policy"
        },
        {
          "text": "i need to know the status of my insurance"
        },
        {
          "text": "I need to know the status of my policy"
        },
        {
          "text": "so the status of the policy my policy"
        },
        {
          "text": "status of a life insurance policy"
        },
        {
          "text": "status of my policy"
        },
        {
          "text": "status of the policy"
        },
        {
          "text": "to find out the status of my policy"
        },
        {
          "text": "to see if a policy is enforced"
        },
        {
          "text": "verify policy"
        }
      ]
    },
    {
      "intent": "premium_amount_due",
      "examples": [
        {
          "text": "check on premium balance"
        },
        {
          "text": "How much is my bill"
        },
        {
          "text": "How much is my next premium"
        },
        {
          "text": "how much is my premium"
        },
        {
          "text": "verifying payment due"
        },
        {
          "text": "wanting to get the premium payment due"
        },
        {
          "text": "What is the modal premium amount"
        }
      ]
    },
    {
      "intent": "premium_due_date",
      "examples": [
        {
          "text": "check if the bill is due"
        },
        {
          "text": "checking to see when policy is due"
        },
        {
          "text": "find out when payment is due"
        },
        {
          "text": "I did not receive a notice of payment I want to know when the premium is two"
        },
        {
          "text": "I need to know when my policy premium is due"
        },
        {
          "text": "is a payment due"
        },
        {
          "text": "I want to know when my policy is due"
        },
        {
          "text": "see if premium is due"
        },
        {
          "text": "The insured wants to no about billing when the next bill is coming out"
        },
        {
          "text": "to see when the premium is due"
        },
        {
          "text": "What is my paid to date?"
        },
        {
          "text": "what is the next premium due date"
        },
        {
          "text": "When can I pay my premium next"
        },
        {
          "text": "when does the bill need to be paid"
        },
        {
          "text": "when is the next premium due date"
        },
        {
          "text": "when is the payment do"
        }
      ]
    },
    {
      "intent": "premium_receipt",
      "examples": [
        {
          "text": "checking to see if payment was received"
        },
        {
          "text": "check on my payment"
        },
        {
          "text": "check on payment for policy"
        },
        {
          "text": "check to see if a payment was received"
        },
        {
          "text": "check to see if premium payment was made"
        },
        {
          "text": "check to see if the check was received"
        },
        {
          "text": "confirm annual premium receipt"
        },
        {
          "text": "Confirm premium payment"
        },
        {
          "text": "did you receive the premium"
        },
        {
          "text": "I'm checking on a payment for a premium"
        },
        {
          "text": "i need to check if a premium payment was received"
        },
        {
          "text": "I need to check on a payment"
        },
        {
          "text": "i need to know if you got my premium payment"
        },
        {
          "text": "i need to see a for premium payment was received"
        },
        {
          "text": "I need to see if my premium was received"
        },
        {
          "text": "I want know when my premium was paid"
        },
        {
          "text": "make sure premium was received"
        },
        {
          "text": "need to see if premium was received"
        },
        {
          "text": "payment confirmation"
        },
        {
          "text": "see if my policy check was received"
        },
        {
          "text": "see if payment was received"
        },
        {
          "text": "see if the check was received yep"
        },
        {
          "text": "to my premium payment go through"
        },
        {
          "text": "to see if my payment has been received"
        },
        {
          "text": "to see if my payment was received"
        },
        {
          "text": "to see if my policy payment has been received"
        },
        {
          "text": "to see if payment was received"
        },
        {
          "text": "to see if the check was received"
        },
        {
          "text": "to see if the payment was received"
        },
        {
          "text": "to see if you receive the premium which is due this month"
        },
        {
          "text": "verify if a payment was received"
        },
        {
          "text": "verify premium was received"
        }
      ]
    },
    {
      "intent": "privacy_notice",
      "examples": [
        {
          "text": "how do I opt out for the privacy notice"
        },
        {
          "text": "I have questions on the privacy notice I received"
        },
        {
          "text": "I received your privacy notice"
        },
        {
          "text": "I want to opt out for the privacy notice"
        },
        {
          "text": "questions on this privacy notice"
        }
      ]
    },
    {
      "intent": "reinstate_request",
      "examples": [
        {
          "text": "i need to apply for reinstatement"
        },
        {
          "text": "reinstatement of laps the policy"
        },
        {
          "text": "reinstatement of last policy"
        },
        {
          "text": "reinstatement of laughed policy"
        },
        {
          "text": "to reinstate a policy"
        }
      ]
    },
    {
      "intent": "repeat",
      "examples": [
        {
          "text": "Can you repeat that"
        },
        {
          "text": "can you say that again"
        },
        {
          "text": "hello"
        },
        {
          "text": "I can't hear a thing"
        },
        {
          "text": "I didn't hear you"
        },
        {
          "text": "I don't understand that"
        },
        {
          "text": "I have no idea what you said"
        },
        {
          "text": "I'm sorry I didn't understand"
        },
        {
          "text": "I'm sorry what"
        },
        {
          "text": "pardon me"
        },
        {
          "text": "repeat"
        },
        {
          "text": "say that again"
        },
        {
          "text": "what was that"
        }
      ]
    },
    {
      "intent": "statement_request",
      "examples": [
        {
          "text": "a statement of the policy"
        },
        {
          "text": "check an annual statement"
        },
        {
          "text": "copy of the statement"
        },
        {
          "text": "get the annual policy statement"
        },
        {
          "text": "hesitation i need a statement"
        },
        {
          "text": "i need a copy of my annual report"
        },
        {
          "text": "i need a statement for my policy"
        },
        {
          "text": "i need the annual statement"
        },
        {
          "text": "need a copy of my annual statement"
        },
        {
          "text": "obtain policy statement annual statement"
        },
        {
          "text": "request a copy of the statement"
        },
        {
          "text": "requesting copy of recent statement"
        },
        {
          "text": "the policy holder statement"
        },
        {
          "text": "would like my annual statement"
        }
      ]
    },
    {
      "intent": "status_of_request",
      "examples": [
        {
          "text": "a form was supposed to be being mailed"
        },
        {
          "text": "cash surrender check status"
        },
        {
          "text": "check in to see if it has been set up to have the electronic bank draft"
        },
        {
          "text": "check on beneficiary change"
        },
        {
          "text": "check on the beneficiary change"
        },
        {
          "text": "check on the status of request"
        },
        {
          "text": "check status of a claim"
        },
        {
          "text": "check status of a request"
        },
        {
          "text": "check status of a surrender"
        },
        {
          "text": "check status of loan"
        },
        {
          "text": "check the status of a beneficiary change"
        },
        {
          "text": "check the status of a loan request"
        },
        {
          "text": "check the status of a transaction"
        },
        {
          "text": "check the status of beneficiary change request"
        },
        {
          "text": "check the status of my cancellation"
        },
        {
          "text": "check the status of my claim"
        },
        {
          "text": "check the status of the claim"
        },
        {
          "text": "follow up on a partial surrender"
        },
        {
          "text": "follow up on a request"
        },
        {
          "text": "Have you received my EFT form"
        },
        {
          "text": "I need to check the status of beneficiary is"
        },
        {
          "text": "I need to know the status of the hesitation my beneficiary check"
        },
        {
          "text": "status of a beneficiary update"
        },
        {
          "text": "status of an illustration request"
        },
        {
          "text": "status of a request"
        },
        {
          "text": "status of a withdrawal request"
        },
        {
          "text": "status of client request"
        },
        {
          "text": "status of my surrender"
        },
        {
          "text": "status of policy change"
        },
        {
          "text": "status of request for recent status for request or surrender and cancellation paperwork"
        },
        {
          "text": "status of request for service"
        },
        {
          "text": "status of request submitted previously"
        },
        {
          "text": "status of surrender request"
        },
        {
          "text": "status of updating beneficiary"
        },
        {
          "text": "status of your request"
        },
        {
          "text": "status on my surrender"
        },
        {
          "text": "status status of a refund check"
        },
        {
          "text": "to check the status of a broker dealer change request"
        },
        {
          "text": "to check the status of a change of beneficiary form"
        }
      ]
    },
    {
      "intent": "surrender_request",
      "examples": [
        {
          "text": "42 cancel insurance"
        },
        {
          "text": "calling to cancel the insurance policy"
        },
        {
          "text": "canceling my insurance"
        },
        {
          "text": "cancel insurance policy"
        },
        {
          "text": "cancel policy"
        },
        {
          "text": "cancel term life policy"
        },
        {
          "text": "cash in the policy"
        },
        {
          "text": "cash policy out"
        },
        {
          "text": "cash to cash my insurance"
        },
        {
          "text": "%HESITATION cancel my policy"
        },
        {
          "text": "%HESITATION cash out"
        },
        {
          "text": "I am considering discontinuing my policy"
        },
        {
          "text": "I'm calling about canceling out this policy"
        },
        {
          "text": "I'm calling to find out about closing a policy"
        },
        {
          "text": "i need to cancel a policy"
        },
        {
          "text": "i need to cancel insurance policy"
        },
        {
          "text": "I need to terminate a policy"
        },
        {
          "text": "I want to cash in this policy"
        },
        {
          "text": "I want to surrender the policy"
        },
        {
          "text": "I wish to cancel my policy"
        },
        {
          "text": "liquidating a policy"
        },
        {
          "text": "surrender and cancel my policy policy fax"
        },
        {
          "text": "talk want to cash out of policy"
        },
        {
          "text": "to cancel my policy"
        },
        {
          "text": "to cash out my cash value"
        },
        {
          "text": "to cash out my life insurance policy"
        }
      ]
    },
    {
      "intent": "tax_questions",
      "examples": [
        {
          "text": "a tax form xxxx r"
        },
        {
          "text": "how to obtain a copy of a tax document"
        },
        {
          "text": "I need a tax document xxxx or"
        },
        {
          "text": "I need copies of xxxx r"
        },
        {
          "text": "to see if the surrender was taxed"
        },
        {
          "text": "when was the 1099 mailed"
        }
      ]
    },
    {
      "intent": "trade_request",
      "examples": [
        {
          "text": "change distribution of investment"
        },
        {
          "text": "change investment on policy"
        },
        {
          "text": "change investment options on very able universal life"
        },
        {
          "text": "i need to change the investment in the account"
        },
        {
          "text": "I need to make a fund change"
        },
        {
          "text": "I need to move money"
        },
        {
          "text": "I want to change my sub accounts"
        },
        {
          "text": "life insurance re balance"
        },
        {
          "text": "sub accounts change investments change"
        },
        {
          "text": "update investment options for life insurance policy"
        },
        {
          "text": "variable life fund change"
        },
        {
          "text": "yep change investment options"
        }
      ]
    },
    {
      "intent": "Values",
      "examples": [
        {
          "text": "account balance"
        },
        {
          "text": "checking life insurance values"
        },
        {
          "text": "check on amount face value of policy"
        },
        {
          "text": "check on cash surrender value"
        },
        {
          "text": "check on cash values of a life insurance policy"
        },
        {
          "text": "check on the face value of my policy"
        },
        {
          "text": "check values"
        },
        {
          "text": "determined cash values of a policy"
        },
        {
          "text": "determining accumulation value"
        },
        {
          "text": "find out cash value of insurance policy"
        },
        {
          "text": "find out the surrender value"
        },
        {
          "text": "find out the value of my policy"
        },
        {
          "text": "find out the value of the policy"
        },
        {
          "text": "If I pass away what will my beneficiary get"
        },
        {
          "text": "I just want to know the value of the policy"
        },
        {
          "text": "I just want to see what the value of that policy is right now"
        },
        {
          "text": "I'm looking for the ending account value"
        },
        {
          "text": "I need a policy account value"
        },
        {
          "text": "I need cash values"
        },
        {
          "text": "I need current values"
        },
        {
          "text": "I need my death benefit amount"
        },
        {
          "text": "I need the current cash value"
        },
        {
          "text": "I need to cash surrender value"
        },
        {
          "text": "I need to get policy values for our clients life insurance policy"
        },
        {
          "text": "I need to get the surrender value of my policy"
        },
        {
          "text": "I need to know if there's a cash value to the policy"
        },
        {
          "text": "I need to know the cash value on that policy"
        },
        {
          "text": "I want at check on the value"
        },
        {
          "text": "I want to find out cash value"
        },
        {
          "text": "I want to find out the value of the death benefit on the insurance policy"
        },
        {
          "text": "I want to find out whether there's any cash surrender value on that policy"
        },
        {
          "text": "I want to know the value of the policy now"
        },
        {
          "text": "I want to know the value of the policy to this date"
        },
        {
          "text": "I want to know what the cash values of a policy"
        },
        {
          "text": "I want to know what the current cash surrender value is"
        },
        {
          "text": "I want to see the cash value"
        },
        {
          "text": "I would like to find out the cash value on this policy"
        },
        {
          "text": "I would like to find out the value of my account"
        },
        {
          "text": "I would like to know the cash value of the policy to date"
        },
        {
          "text": "I would like to know the values of the contract"
        },
        {
          "text": "I would like to see what cash value I have"
        },
        {
          "text": "I would to get the cash value of my policy"
        },
        {
          "text": "need cash value of the policy"
        },
        {
          "text": "to find out if this policy has cash value"
        },
        {
          "text": "to get current value of account cash value of account"
        },
        {
          "text": "to get updated values"
        },
        {
          "text": "to know my value for my policy"
        },
        {
          "text": "to see cash value"
        },
        {
          "text": "to see if this policy has any cash value"
        },
        {
          "text": "to see what my surrender value would be"
        },
        {
          "text": "What is my cash surrender"
        },
        {
          "text": "What is my face amount"
        },
        {
          "text": "withdrawal cash value"
        }
      ]
    },
    {
      "intent": "verification_of_coverage",
      "examples": [
        {
          "text": "confirmation of coverage"
        },
        {
          "text": "i need a verification of my coverage"
        },
        {
          "text": "looking to verify my benefits"
        },
        {
          "text": "to verify coverage"
        },
        {
          "text": "to verify our coverage"
        },
        {
          "text": "verification of life insurance"
        },
        {
          "text": "verify verify coverage"
        }
      ]
    },
    {
      "intent": "website_support",
      "examples": [
        {
          "text": "access to online account"
        },
        {
          "text": "help logging in online"
        },
        {
          "text": "i cant access my account"
        },
        {
          "text": "i cant access my account online"
        },
        {
          "text": "I have a problem with the website logging in"
        },
        {
          "text": "I'm calling with website access questions"
        },
        {
          "text": "I'm having trouble logging into my account"
        },
        {
          "text": "I'm not able to access my policy on the website"
        },
        {
          "text": "I'm not able to log in"
        },
        {
          "text": "I'm trying to access my account online"
        },
        {
          "text": "I need my password reset"
        },
        {
          "text": "I need the website where I can get information from the website"
        },
        {
          "text": "i would like to access my account"
        },
        {
          "text": "log on issues"
        },
        {
          "text": "online account is disabled"
        },
        {
          "text": "Website support please"
        }
      ]
    },
    {
      "intent": "wont_provide",
      "examples": [
        {
          "text": "I don't release that type of information"
        },
        {
          "text": "I'm not giving you that"
        },
        {
          "text": "I'm not providing that"
        },
        {
          "text": "no I don't give that"
        },
        {
          "text": "You cant have that information"
        }
      ]
    }
  ],
  "entities": [
    {
      "entity": "call_reason_type",
      "values": [
        {
          "type": "synonyms",
          "value": "death benefit",
          "synonyms": [
            "Death Benefit Amount"
          ]
        },
        {
          "type": "synonyms",
          "value": "premium amount",
          "synonyms": [
            "Premium Amount"
          ]
        }
      ],
      "fuzzy_match": false
    },
    {
      "entity": "delivery_method",
      "values": [
        {
          "type": "synonyms",
          "value": "fax",
          "synonyms": [
            "facsimile",
            "facsimiles",
            "faxed",
            "faxing"
          ]
        },
        {
          "type": "synonyms",
          "value": "mail",
          "synonyms": [
            "address on record",
            "mailing"
          ]
        },
        {
          "type": "synonyms",
          "value": "website",
          "synonyms": [
            "web",
            "web site"
          ]
        }
      ]
    },
    {
      "entity": "delivery_type",
      "values": [
        {
          "type": "synonyms",
          "value": "overnight",
          "synonyms": [
            "express"
          ]
        },
        {
          "type": "synonyms",
          "value": "standard",
          "synonyms": [
            "normal"
          ]
        }
      ],
      "fuzzy_match": false
    },
    {
      "entity": "formType",
      "values": [
        {
          "type": "synonyms",
          "value": "agent change form",
          "synonyms": [
            "change of agent form"
          ]
        },
        {
          "type": "synonyms",
          "value": "application for change or reinstatement",
          "synonyms": [
            "application for change",
            "application to reinstate",
            "change form",
            "form for changing policy benefit amount",
            "form to reinstate policy",
            "reinstatement form"
          ]
        },
        {
          "type": "synonyms",
          "value": "beneficiary change form",
          "synonyms": [
            "bene change form",
            "change of beneficiary request form",
            "change of bene form",
            "form to change beneficiary",
            "form to update beneficiary"
          ]
        },
        {
          "type": "synonyms",
          "value": "form 712",
          "synonyms": [
            "712 form",
            "seven twelve form"
          ]
        },
        {
          "type": "synonyms",
          "value": "fund transfer allocation form",
          "synonyms": [
            "fund change form",
            "fund selection form",
            "investment change form",
            "investment form",
            "investment transfer form"
          ]
        },
        {
          "type": "synonyms",
          "value": "name and address change form",
          "synonyms": [
            "address change form",
            "name change form"
          ]
        },
        {
          "type": "synonyms",
          "value": "policyowners request for service form",
          "synonyms": [
            "form for a copy of the policy",
            "form for a duplicate policy",
            "loan form",
            "pors",
            "withdrawal form"
          ]
        },
        {
          "type": "synonyms",
          "value": "pre authorization check plan form",
          "synonyms": [
            "automatic draft form",
            "automatic payment form",
            "auto payment form",
            "bank draft form",
            "bank information form",
            "banking information form",
            "draft authorization form",
            "EFT form",
            "form for auto draft",
            "form for automatic payments",
            "form to set up a draft",
            "monthly draft form",
            "pac form",
            "pack form",
            "pre authorized check form",
            "quarterly draft form"
          ]
        },
        {
          "type": "synonyms",
          "value": "surrender request form",
          "synonyms": [
            "cancellation form",
            "forms to surrender",
            "form to cash out",
            "form to surrender",
            "surrender form",
            "surrender paperwork"
          ]
        },
        {
          "type": "synonyms",
          "value": "transfer of ownership form",
          "synonyms": [
            "change of owner form",
            "change of ownership form",
            "form to change owner",
            "form to change ownership",
            "form to change the owner",
            "form to change the ownership",
            "form to update owner",
            "owner change form",
            "ownership change form",
            "transfer of owner form",
            "transfer of ownership form"
          ]
        },
        {
          "type": "synonyms",
          "value": "w9 form",
          "synonyms": [
            "W. 9",
            "W. 9 form",
            "W. nine form"
          ]
        }
      ]
    },
    {
      "entity": "letter_type",
      "values": [
        {
          "type": "synonyms",
          "value": "EFT",
          "synonyms": [
            "EFT letter",
            "EFT mailing",
            "Time Union",
            "Time Union letter",
            "Time Union Mailing"
          ]
        }
      ]
    },
    {
      "entity": "mailing_address_type",
      "values": [
        {
          "type": "synonyms",
          "value": "correspondence",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "premium",
          "synonyms": [
            "payment",
            "payments",
            "premiums"
          ]
        }
      ],
      "fuzzy_match": false
    },
    {
      "entity": "misc",
      "values": [
        {
          "type": "synonyms",
          "value": "I do",
          "synonyms": []
        }
      ]
    },
    {
      "entity": "no",
      "values": [
        {
          "type": "synonyms",
          "value": "no_high",
          "synonyms": [
            "all set",
            "can't think of anything",
            "doh",
            "do not need",
            "don't need",
            "Don't repeat it",
            "don't think so",
            "gnaw",
            "i am good",
            "i do not",
            "i don't",
            "i'm done",
            "i'm good",
            "incorrect",
            "it is not",
            "it isn't",
            "i would not",
            "i wouldn't",
            "low",
            "mow",
            "nah",
            "naw",
            "negative",
            "neither",
            "no",
            "none",
            "none of this",
            "nope",
            "not at this time",
            "not correct",
            "no thanks",
            "no thank you",
            "nothing at this time",
            "not needed",
            "not now",
            "not really",
            "not this time",
            "not today",
            "now"
          ]
        },
        {
          "type": "synonyms",
          "value": "no_low",
          "synonyms": [
            "don't",
            "know",
            "nada",
            "negatory",
            "never",
            "new",
            "nick's",
            "nine of the above",
            "nix",
            "non",
            "not",
            "other",
            "wrong"
          ]
        }
      ]
    },
    {
      "entity": "options",
      "values": [
        {
          "type": "synonyms",
          "value": "option 1",
          "synonyms": [
            "1st",
            "first",
            "first one",
            "one",
            "option one"
          ]
        },
        {
          "type": "synonyms",
          "value": "option 2",
          "synonyms": [
            "2nd",
            "2nd one",
            "option to",
            "option too",
            "option two",
            "second",
            "second one",
            "two"
          ]
        }
      ]
    },
    {
      "entity": "role",
      "values": [
        {
          "type": "synonyms",
          "value": "agent",
          "synonyms": [
            "adviser",
            "advisor",
            "ascent",
            "financial advisor",
            "servicing agent",
            "writing agent"
          ]
        },
        {
          "type": "synonyms",
          "value": "agent assistant",
          "synonyms": [
            "agent assist",
            "agent assistance",
            "agent assisting",
            "agents assistance",
            "agent's assistant",
            "agents assistant",
            "assistant",
            "assistant to agent",
            "assistant to the agent"
          ]
        },
        {
          "type": "synonyms",
          "value": "agent representative",
          "synonyms": [
            "behalf in the agent",
            "behalf mail agent",
            "behalf of agent",
            "behalf of an agent",
            "behalf of in the agent",
            "behalf of of an agent",
            "behalf of the agent",
            "behalf the agent",
            "calling for agent",
            "calling for the agent",
            "half of agent",
            "half of an agent",
            "half of the agent"
          ]
        },
        {
          "type": "synonyms",
          "value": "family member",
          "synonyms": [
            "brother",
            "daughter",
            "dependent",
            "family",
            "father",
            "husband",
            "mother",
            "parent",
            "relative",
            "sister",
            "son",
            "spouse",
            "wife"
          ]
        },
        {
          "type": "synonyms",
          "value": "general agent",
          "synonyms": [
            "back office",
            "broker",
            "broker dealer"
          ]
        },
        {
          "type": "synonyms",
          "value": "not agent",
          "synonyms": [
            "agent no",
            "behalf of myself",
            "calling upon myself",
            "client",
            "customer",
            "for myself",
            "myself",
            "not an agent",
            "personal",
            "self"
          ]
        },
        {
          "type": "synonyms",
          "value": "other role",
          "synonyms": [
            "attorney",
            "attorneys office",
            "beneficiary",
            "edward jones",
            "executor",
            "funeral",
            "funeral home",
            "insured",
            "justin employee",
            "law firm",
            "russell employee",
            "third party"
          ]
        },
        {
          "type": "synonyms",
          "value": "policyowner",
          "synonyms": [
            "my insurance",
            "my life insurance",
            "my own",
            "my policy",
            "owner",
            "owners",
            "policy hold",
            "policy holder",
            "policy holders",
            "policy older",
            "policy owner",
            "policyowners"
          ]
        },
        {
          "type": "synonyms",
          "value": "premium payor",
          "synonyms": [
            "payer",
            "paying the premium",
            "payor",
            "premium",
            "premium paid",
            "premium payer",
            "premium player"
          ]
        },
        {
          "type": "synonyms",
          "value": "prudential employee",
          "synonyms": [
            "credential employee",
            "potential employee",
            "prudential",
            "pru employee",
            "pru person"
          ]
        },
        {
          "type": "synonyms",
          "value": "trustee",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "touchtone",
      "values": [
        {
          "type": "synonyms",
          "value": "five",
          "synonyms": [
            "5",
            "five"
          ]
        },
        {
          "type": "synonyms",
          "value": "four",
          "synonyms": [
            "4",
            "four"
          ]
        },
        {
          "type": "synonyms",
          "value": "one",
          "synonyms": [
            "1",
            "one"
          ]
        },
        {
          "type": "synonyms",
          "value": "three",
          "synonyms": [
            "3",
            "three"
          ]
        },
        {
          "type": "synonyms",
          "value": "two",
          "synonyms": [
            "2",
            "two"
          ]
        },
        {
          "type": "synonyms",
          "value": "zero",
          "synonyms": [
            "0",
            "zero"
          ]
        }
      ]
    },
    {
      "entity": "vgTimeOut",
      "values": [
        {
          "type": "synonyms",
          "value": "vgwPostResponseTimeout",
          "synonyms": []
        }
      ],
      "fuzzy_match": false
    },
    {
      "entity": "yes",
      "values": [
        {
          "type": "synonyms",
          "value": "yes_high",
          "synonyms": [
            "correct",
            "right",
            "sure thing",
            "that is correct",
            "that's correct",
            "yea",
            "yeah",
            "yep",
            "yes",
            "you are right",
            "you got it",
            "you know it",
            "yup"
          ]
        },
        {
          "type": "synonyms",
          "value": "yes_low",
          "synonyms": [
            "aye",
            "ok",
            "okay",
            "sure"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "api_version": {
      "major_version": "v2",
      "minor_version": "2018-11-08"
    }
  },
  "dialog_nodes": [
    {
      "type": "standard",
      "title": "API call to validate address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_94_1591027550083",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_100_1591027550092",
      "previous_sibling": "node_95_1591027550092"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_100_1591027550092",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_103_1591027550093"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_101_1591027550093"
    },
    {
      "type": "standard",
      "title": "Check retries",
      "output": {},
      "parent": "node_2_1555355201520_1",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_10_1556666448968",
      "previous_sibling": "node_1_1560536717615"
    },
    {
      "type": "standard",
      "title": "Thank you for calling - Good bye - Forced Turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you for calling, goodbye"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_3_1606729245551",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "endConversation": true
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_10_1556742815467",
      "previous_sibling": "node_1_1589888185679"
    },
    {
      "type": "standard",
      "title": "Are you the Agent Assistant?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"If you are the agent assistant say yes or press 1. Otherwise, say no, or press two.\"\n:\n\"Are you the Agent Assistant?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_8_1590383688936",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_10_1559266487355",
      "previous_sibling": "node_9_1559266384280"
    },
    {
      "type": "standard",
      "title": "Are you the Agent Assistant?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Are you the Agent Assistant?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1555357693947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_10_1559266487355_1",
      "previous_sibling": "node_9_1559266384280_1"
    },
    {
      "type": "standard",
      "title": "Persist - Premium Payor after Agent prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Payor"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "role": "payor",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(premium payor)",
      "dialog_node": "node_10_1574456324274",
      "previous_sibling": "node_8_1574456243857"
    },
    {
      "type": "standard",
      "title": "Caller on line - Transfer",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1576786662607",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "$timeoutWarning == false",
      "dialog_node": "node_10_1576787013011"
    },
    {
      "type": "standard",
      "title": "Self Service Eligibility",
      "parent": "node_7_1592497465455",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_10_1589304475474"
    },
    {
      "type": "standard",
      "title": "Beneficiary Change form recognized",
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "bene_change"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1589412024149"
      },
      "conditions": "$formType != null && $formType.contains('bene_change') || #beneficiary_change || @formType:(beneficiary change form)",
      "dialog_node": "node_10_1590061520518"
    },
    {
      "type": "standard",
      "title": "Surrender form recognized",
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "surr_request"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "@formType:(surrender request form) || $formType.contains(\"surr_request\")",
      "dialog_node": "node_10_1590061527666",
      "previous_sibling": "node_9_1590061525510"
    },
    {
      "type": "standard",
      "title": "Timeout Warning",
      "parent": "node_1_1590079880241",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1576786662607"
      },
      "conditions": "$timeoutWarning == true",
      "dialog_node": "node_10_1590081949297"
    },
    {
      "type": "standard",
      "title": "Route to Auth based on Role",
      "output": {
        "generic": []
      },
      "parent": "node_1_1556050074520",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_10_1590394093339",
      "previous_sibling": "node_13_1556228833790"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_1_1590406942380",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_10_1590406942386",
      "previous_sibling": "node_2_1590406942385"
    },
    {
      "type": "folder",
      "title": "Auth flow - Individual",
      "parent": "node_7_1556051821371",
      "conditions": "false",
      "dialog_node": "node_10_1590414646214",
      "previous_sibling": "node_1_1590396609855"
    },
    {
      "type": "standard",
      "title": "Owner is Individual",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590396609855",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ownerType == \"individual\"",
      "dialog_node": "node_10_1590414852604"
    },
    {
      "type": "standard",
      "title": "If Company or Trust - ask if authorised",
      "output": {
        "generic": []
      },
      "parent": "node_6_1590406908895",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ownerType == \"company\" || $ownerType == \"trust\"",
      "dialog_node": "node_10_1590584285970",
      "previous_sibling": "node_6_1591368370216"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1590585843913",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1590585843913"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_10_1590585843913",
      "previous_sibling": "node_9_1590585843913"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1591009799116",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591009799116"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_10_1591009799116",
      "previous_sibling": "node_9_1591009799116"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_10_1591012613381",
      "previous_sibling": "node_9_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on success - agent/assistant ?",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591015619687",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_10_1591015619693",
      "previous_sibling": "node_7_1591015619693"
    },
    {
      "type": "standard",
      "title": "Agent - move to agent SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_10_1591015619693",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591015773199"
      },
      "conditions": "$role == \"agent\"",
      "dialog_node": "node_10_1591026238461"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_9_1591026800363",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591026800363"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_10_1591026800363"
    },
    {
      "type": "standard",
      "title": "Yes / Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591102327648",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590048783906"
      },
      "conditions": "@yes || #repeat ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_10_1591102327656",
      "previous_sibling": "node_9_1591102327656"
    },
    {
      "type": "standard",
      "title": "Next on Failure - ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1591268884327",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "ownerSsn4Valid": "U"
        }
      },
      "conditions": "false",
      "dialog_node": "node_10_1591268884334",
      "previous_sibling": "node_9_1591268884334"
    },
    {
      "type": "standard",
      "title": "Agent Assistant Role",
      "output": {
        "generic": []
      },
      "parent": "node_9_1559266384280",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1559266644551"
      },
      "conditions": "@role:(agent assistant)",
      "dialog_node": "node_10_1591867286897"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_671_1590403531494",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_644_1590400220532"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_10_1592224782305",
      "previous_sibling": "node_673_1590403531500"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_86_1590416125193",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_70_1590415973915"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_10_1592226915159",
      "previous_sibling": "node_88_1590416125197"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_75_1591012628281",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_70_1591012628281"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_10_1592303182918",
      "previous_sibling": "node_77_1591012628281"
    },
    {
      "type": "standard",
      "title": "Continue",
      "parent": "node_1_1558377837377",
      "conditions": "true",
      "dialog_node": "node_10_1592318307046"
    },
    {
      "type": "standard",
      "title": "All other products",
      "parent": "node_6_1592935820993",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_10_1592943749300",
      "previous_sibling": "node_1_1592943377084"
    },
    {
      "type": "standard",
      "title": "Repeat - Billing, Fixed Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1601310783761",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1592952149485"
      },
      "conditions": "#repeat",
      "dialog_node": "node_10_1593101103682",
      "previous_sibling": "node_3_1601310783766"
    },
    {
      "type": "standard",
      "title": "Values:  Flexible Products (Play Message), Jump to Authenticated Further Assistance",
      "parent": "node_5_1590062783383",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_10_1593115330489",
      "previous_sibling": "node_5_1595345327718"
    },
    {
      "type": "standard",
      "title": "Beneficiary Change Form: Play Message, Jump to Delivery Options",
      "parent": "node_4_1589414474113",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1589412157955"
      },
      "conditions": "true",
      "dialog_node": "node_10_1593116071965",
      "previous_sibling": "node_21_1593116044102"
    },
    {
      "type": "standard",
      "title": "Draft Authorization Form:  Jump to Delivery Options",
      "parent": "node_3_1592505251728",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1589412157955"
      },
      "conditions": "true",
      "dialog_node": "node_10_1593116230543",
      "previous_sibling": "node_22_1593116076293"
    },
    {
      "type": "standard",
      "title": "Yes, provide details on how to print the form from the website",
      "parent": "node_1_1600195364618",
      "context": {
        "deliveryMethod": "website"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1589412157955"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_10_1600205032896",
      "previous_sibling": "node_5_1600205055079"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_30_1602663539106",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "#repeat",
      "dialog_node": "node_10_1601473271629",
      "previous_sibling": "node_32_1602663539117"
    },
    {
      "type": "standard",
      "title": "Continue conversation to set fixed values to create",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1590062927463",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_10_1601921920439",
      "previous_sibling": "node_7_1590080187557"
    },
    {
      "type": "standard",
      "title": "Claimant / Claim - Jump to claims",
      "parent": "node_2_1555355201520_1",
      "conditions": "#claims || #death_claims || @deceased",
      "dialog_node": "node_10_1602228468110",
      "previous_sibling": "node_7_1555355882808"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1602664776461",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_10_1602664854116",
      "previous_sibling": "node_8_1602664841087"
    },
    {
      "type": "standard",
      "title": "Next - authenticate",
      "parent": "node_2_1603793715648",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "false",
      "dialog_node": "node_10_1603794012836",
      "previous_sibling": "node_1_1603975739025"
    },
    {
      "type": "folder",
      "title": "Group Life Disambiguation",
      "parent": "node_9_1603728506935",
      "conditions": "$dialogPath == \"groupLife\"",
      "dialog_node": "node_10_1603828318032"
    },
    {
      "type": "standard",
      "title": "No - Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'> Sorry. </prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603975739025",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1606390065834"
      },
      "conditions": "anything_else",
      "dialog_node": "node_10_1603975888028",
      "previous_sibling": "node_3_1603975870326"
    },
    {
      "type": "standard",
      "title": "Special EFT Mailing",
      "parent": "node_6_1603978874732",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$letter_type == \"EFT\"",
      "dialog_node": "node_10_1604315845982",
      "previous_sibling": "node_6_1603978325492"
    },
    {
      "type": "standard",
      "title": "Premium Receipt API call to check last premium received",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1592957857327",
      "context": {
        "action": {
          "route": "API",
          "method": "lastPayment"
        }
      },
      "conditions": "true",
      "dialog_node": "node_10_1604675096141"
    },
    {
      "type": "standard",
      "title": "No - Reprompt",
      "parent": "node_1_1603975739025",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1603975888028"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_10_1605874001923"
    },
    {
      "type": "standard",
      "title": "Fund Allocation Transfer Request Form",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> It sounds like you want a fund transfer form.  Is that right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "fund_transfer"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#forms && @formType:(fund transfer allocation form)",
      "dialog_node": "node_10_1606372827226",
      "previous_sibling": "node_7_1606372741713"
    },
    {
      "type": "standard",
      "title": "Form Type - Transfer of Ownership",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "transfer_owner"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "node_10_1606465258327",
      "previous_sibling": "node_4_1606465125893"
    },
    {
      "type": "folder",
      "title": "Forms",
      "parent": "node_9_1606287393915",
      "conditions": "true",
      "dialog_node": "node_10_1606917781041"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_100_1591027550092",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_104_1591027550093"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_102_1591027550093",
      "previous_sibling": "node_101_1591027550093"
    },
    {
      "type": "standard",
      "title": "Next on success - collect owner Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_94_1591027550083",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_71_1591026800363"
      },
      "conditions": "false",
      "dialog_node": "node_103_1591027550093",
      "previous_sibling": "node_100_1591027550092"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_94_1591027550083",
      "context": {
        "authStatus": {
          "streetAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_104_1591027550093",
      "previous_sibling": "node_103_1591027550093"
    },
    {
      "type": "standard",
      "title": "1.3. Servicing Agent - Collect Agent Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_105_1591027824941",
      "previous_sibling": "node_60_1591026800363"
    },
    {
      "type": "standard",
      "title": "Input agent Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_105_1591027824941",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_106_1591027824946"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_106_1591027824946",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_111_1591027824946"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_107_1591027824946"
    },
    {
      "type": "standard",
      "title": "2. Company - Collect compnay TIN4",
      "output": {
        "generic": []
      },
      "parent": "node_74_1590580615244",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_108_1590581526115",
      "previous_sibling": "node_2_1590585843907"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_106_1591027824946",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_115_1591027824946"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_108_1591027824946",
      "previous_sibling": "node_107_1591027824946"
    },
    {
      "type": "standard",
      "title": "Input company TIN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of company’s Tax Identification Number\"\n:\n\"What is the last 4 digits of the company’s tax ID number\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_108_1590581526115",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_109_1590581526121"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_106_1591027824946",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_115_1591027824946"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_109_1591027824946",
      "previous_sibling": "node_108_1591027824946"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_109_1590581526121",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_114_1590581526121"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_110_1590581526121"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_109_1590581526121",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_118_1590581526121"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_111_1590581526121",
      "previous_sibling": "node_110_1590581526121"
    },
    {
      "type": "standard",
      "title": "API call to validate agent zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_105_1591027824941",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_111_1591027824946",
      "previous_sibling": "node_106_1591027824946"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> If you're the agent, or calling on behalf of an agent... say yes, or press one.  Otherwise, say no, or press two. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActEnableSpeechBargeIn"
          },
          {
            "command": "vgwActEnableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1556666448968",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_7_1555355882808"
      },
      "conditions": "true",
      "dialog_node": "node_11_1556666448970"
    },
    {
      "type": "standard",
      "title": "Yes Agent Assistant - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent Assistant"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1559266487355",
      "context": {
        "role": "agent assistant",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@yes ||   (@touchtone:one && input.text == @touchtone.literal) || @role:(agent assistant)",
      "dialog_node": "node_11_1559266644551",
      "previous_sibling": "node_1_1591867420685"
    },
    {
      "type": "standard",
      "title": "Yes Agent Assistant - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent Assistant"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1559266487355_1",
      "context": {
        "role": "agent assistant",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "(@role:(agent assistant) || @yes || (@touchtone:one && input.text == @touchtone.literal)) && !#customer_service",
      "dialog_node": "node_11_1559266644551_1"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1574456324274",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_11_1574456324282"
    },
    {
      "type": "standard",
      "title": "Disambiguation Example",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589432821868",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#mailing_address",
      "dialog_node": "node_11_1589433562596",
      "previous_sibling": "node_13_1555360064390"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590406942386",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1590576676094"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_11_1590406942386"
    },
    {
      "type": "standard",
      "title": "Next on success - auth done",
      "output": {
        "generic": []
      },
      "parent": "node_2_1590585843907",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590406908895"
      },
      "conditions": "false",
      "dialog_node": "node_11_1590585843913",
      "previous_sibling": "node_8_1590585843913"
    },
    {
      "type": "standard",
      "title": "Next on success - auth done",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591009799116",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590406908895"
      },
      "conditions": "false",
      "dialog_node": "node_11_1591009799116",
      "previous_sibling": "node_8_1591009799116"
    },
    {
      "type": "standard",
      "title": "Next on success - Auth Done",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_80_1591012670881"
      },
      "conditions": "false",
      "dialog_node": "node_11_1591012613381",
      "previous_sibling": "node_8_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Agent Id (Alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1591015619687",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591016704068"
      },
      "conditions": "false",
      "dialog_node": "node_11_1591015619693",
      "previous_sibling": "node_10_1591015619693"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1591026800363",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_15_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_11_1591026800363",
      "previous_sibling": "node_10_1591026800363"
    },
    {
      "type": "standard",
      "title": "Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591155506648",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_11_1591269802085",
      "previous_sibling": "node_1_1591268884327"
    },
    {
      "type": "standard",
      "title": "VG variable examples (managed by SOE)",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589432821868",
      "context": {
        "DATE_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $DATES_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $DATES_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfMaxCount": "8",
              "dtmfMinCount": "4",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "SSN4_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $SSNTIN_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "4",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "SSN9_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $SSNTIN_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "9",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "AGENTID_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $AGENTID_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $POLICYNO_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "10",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "GENERAL_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "ZIPCODE_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $ZIPCODE_GRAMMAR ?>",
                "word_confidence": false,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfMaxCount": "9",
              "dtmfMinCount": "5",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "POLICYNO_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $POLICYNO_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $POLICYNO_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ],
        "STREETNO_VG_CONFIG": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $STREETNO_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfMaxCount": "10",
              "dtmfMinCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "false",
      "dialog_node": "node_11_1592232106804",
      "previous_sibling": "node_11_1589433562596"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1591015619693",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591015619693"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_11_1592305045988",
      "previous_sibling": "node_9_1591015619693"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior - Billing, Flexible Products, Past PTD",
      "parent": "node_5_1592957857357",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_11_1601311357604"
    },
    {
      "type": "standard",
      "title": "General Agent",
      "output": {},
      "parent": "node_9_1559266384280_1",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1559266652039"
      },
      "conditions": "@role:(general agent)",
      "dialog_node": "node_11_1602658849427",
      "previous_sibling": "node_9_1602230786854"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_109_1590581526121",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_118_1590581526121"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_112_1590581526121",
      "previous_sibling": "node_111_1590581526121"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_111_1591027824946",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_114_1591027824946"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_112_1591027824946"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_111_1591027824946",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_115_1591027824946"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_113_1591027824946",
      "previous_sibling": "node_112_1591027824946"
    },
    {
      "type": "standard",
      "title": "API call to validate company TIN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_108_1590581526115",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_114_1590581526121",
      "previous_sibling": "node_109_1590581526121"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_105_1591027824941",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_114_1591027824946",
      "previous_sibling": "node_111_1591027824946"
    },
    {
      "type": "standard",
      "title": "Valid TIN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_114_1590581526121",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_117_1590581526121"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_115_1590581526121"
    },
    {
      "type": "standard",
      "title": "Next on failure - last payment date",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_105_1591027824941",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentZipValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_83_1591027451458"
      },
      "conditions": "false",
      "dialog_node": "node_115_1591027824946",
      "previous_sibling": "node_114_1591027824946"
    },
    {
      "type": "standard",
      "title": "Main Menu Prompt",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "false",
      "digress_in": "not_available",
      "dialog_node": "node_1_1555354306104",
      "digress_out": "allow_all",
      "previous_sibling": "node_3_1561666536036"
    },
    {
      "type": "folder",
      "title": "Customer Identification",
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_1_1556050074520",
      "previous_sibling": "node_8_1590383688936"
    },
    {
      "type": "standard",
      "title": "API Error - Forced turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><voice-transformation type='Custom' rate='25%'>Sorry, I can't process your request at this time.  One moment while I connect you with a customer service representative.</voice-transformation></speak>  "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_1_1589391970365",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "finalState",
        "finalState": "ES"
      },
      "metadata": {},
      "conditions": "input.text == \"API_ERROR\"",
      "dialog_node": "node_1_1558377837377",
      "previous_sibling": "node_5_1589391603288"
    },
    {
      "type": "standard",
      "title": "Yes Agent - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1559266384280",
      "context": {
        "role": "agent",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@yes ||  (@touchtone:one && input.text == @touchtone.literal) || @role:agent",
      "dialog_node": "node_1_1559265693354",
      "previous_sibling": "node_10_1591867286897"
    },
    {
      "type": "standard",
      "title": "Yes Agent - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1559266384280_1",
      "context": {
        "role": "agent",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "(@role:agent || @yes || (@touchtone:one && input.text == @touchtone.literal)) && !#customer_service",
      "dialog_node": "node_1_1559265693354_1"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1556228833792",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1559303319470"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1555355882808",
      "disabled": true,
      "metadata": {},
      "dialog_node": "node_1_1559312629330"
    },
    {
      "type": "folder",
      "title": "Agent Authentication",
      "metadata": {},
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_1_1559335045836",
      "previous_sibling": "node_2_1557320487159"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_13_1559266652039",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "true",
      "dialog_node": "node_1_1560279761623"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_2_1555355201520_1",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1560536717615",
      "previous_sibling": "node_8_1555356438487"
    },
    {
      "type": "standard",
      "title": "Check retries",
      "output": {},
      "parent": "node_9_1559266384280_1",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1562765850934",
      "previous_sibling": "node_7_1602658148590"
    },
    {
      "type": "standard",
      "title": "Is your call regarding Licensing or Commissions?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Is your call regarding Licensing or Commissions?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_8_1590383688936",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_1_1563500798686",
      "previous_sibling": "node_10_1559266487355"
    },
    {
      "type": "standard",
      "title": "Is your call regarding Licensing or Commissions?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Is your call regarding Licensing or Commissions?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1555357693947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_1_1563500798686_1",
      "previous_sibling": "node_8_1559265922539"
    },
    {
      "type": "standard",
      "title": "Check retries - Are you the AA?",
      "output": {},
      "parent": "node_10_1559266487355_1",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1577197142669",
      "previous_sibling": "node_18_1602662736832"
    },
    {
      "type": "standard",
      "title": "Claims Disambiguation",
      "output": {},
      "parent": "node_4_1555355227863_1",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1579015294774",
      "previous_sibling": "node_18_1578343808129"
    },
    {
      "type": "standard",
      "title": "Caller is not Owner, Payor, or Pru EE",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "otherRole",
        "authStatus": {
          "ownerSsn9Valid": "U"
        }
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "@no || #wont_provide ||   @role:(other role) || (@touchtone:four && input.text == @touchtone.literal) ||      @role:(family member) || @role:trustee",
      "dialog_node": "node_1_1580493738428",
      "previous_sibling": "node_6_1556226493314"
    },
    {
      "type": "folder",
      "title": "Self Service Eligibility",
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_1_1589303681224",
      "previous_sibling": "node_1_1559335045836"
    },
    {
      "type": "standard",
      "title": "Overnight Delivery",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1589363543131",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1589263815170"
      },
      "conditions": "@delivery_type:overnight || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_1_1589363658574",
      "previous_sibling": "node_2_1589363629859"
    },
    {
      "type": "standard",
      "title": "Retry - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589391970365",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "anything_else",
      "dialog_node": "node_1_1589391843650",
      "previous_sibling": "node_1_1558377837377"
    },
    {
      "type": "folder",
      "title": "Common Digressions",
      "conditions": "anything_else",
      "digress_in": "returns",
      "dialog_node": "node_1_1589391970365",
      "previous_sibling": "node_3_1606729245551"
    },
    {
      "type": "standard",
      "title": "How else can I help ?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Is there anything else I can help with today?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_3_1606729245551",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "menu"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_1_1589428576947",
      "previous_sibling": "node_10_1556742815467"
    },
    {
      "type": "standard",
      "title": "Disambiguate standard/overnight",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"Please say standard delivery, or press 1. Overnight delivery, or press 2.\"\n:\n\"Is this for standard. or overnight delivery?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_18_1555361256167",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0,
        "persistResponse": {
          "question": "finalState",
          "finalState": "D"
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1589431469478",
      "previous_sibling": "node_38_1589275164768"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              },
              {
                "text": "Did you need that repeated?"
              },
              {
                "text": "Want me to repeat that?"
              }
            ],
            "response_type": "text",
            "selection_policy": "random"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1589263815170",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1589445623643"
    },
    {
      "type": "standard",
      "title": "VALID_PHONE_FORMAT - Ask, Was that PHONE_NUMBER?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<prosody rate='8%'> Was that [PHONE_NUMBER]?  Please say yes, or press 1.  Say no, or press 2. </prosody>\"\n:\n\"<prosody rate='8%'> Was that [PHONE_NUMBER]? </prosody>\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_6_1589459152125",
      "conditions": "input.text == \"VALID_PHONE_FORMAT\"",
      "dialog_node": "node_1_1589459289804"
    },
    {
      "type": "standard",
      "title": "Welcome message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<voice-transformation type=\"Custom\" rate=\"30%\">Thank you for calling Life Services.<break time='250ms'/> This call will be monitored or recorded for quality assurance.\" </voice-transformation> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1561666536036",
      "context": {
        "maxTries": 1,
        "ttsDelay": "true",
        "maxCSRTries": 0,
        "payment_counter": 0,
        "retryCSRcounter": 0,
        "main_utterances_list": []
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "false",
      "dialog_node": "node_1_1589545257503",
      "previous_sibling": "node_2_1561665977180"
    },
    {
      "type": "standard",
      "title": "Are you an agent, Agent Assistant?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Are you an agent or Agent Assistant?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_3_1589534554860",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1589550998895"
    },
    {
      "type": "standard",
      "title": "Payment - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_9_1589560826369",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589534554860"
      },
      "conditions": "#make_payment",
      "dialog_node": "node_1_1589560750767",
      "previous_sibling": "node_6_1589454843556"
    },
    {
      "type": "standard",
      "title": "Repeat ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              },
              {
                "text": "Did you need that repeated?"
              },
              {
                "text": "Want me to repeat that?"
              }
            ],
            "response_type": "text",
            "selection_policy": "random"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_6_1589263755473",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1589570535025"
    },
    {
      "type": "standard",
      "title": "Call reason unknown - Ask again",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I understand you want customer service.  I just need a little more information.  The more you say, the better.  Please tell me more about why you're calling today. </prosody>  "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1556655996383",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "reason",
        "callReason": true,
        "callReasonAsked": true
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_8_1606388289693"
      },
      "conditions": "$callReason == false",
      "dialog_node": "node_1_1589813093101",
      "previous_sibling": "node_5_1591101651947"
    },
    {
      "type": "standard",
      "title": "Transfer to Live CSR - Forced turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><voice-transformation type='Custom' rate='25%'>One moment while I connect you with a customer service representative.</voice-transformation></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_3_1606729245551",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "transfer": true
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_1_1589888185679"
    },
    {
      "type": "standard",
      "title": "continue",
      "output": {
        "generic": []
      },
      "parent": "node_3_1578420993906",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1576787025351"
      },
      "conditions": "true",
      "dialog_node": "node_1_1589893710346"
    },
    {
      "type": "standard",
      "title": "Form Type Disambiguation Plus Retry",
      "output": {},
      "parent": "node_9_1590061435498",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1590061394509",
      "previous_sibling": "node_1_1592510759272"
    },
    {
      "type": "standard",
      "title": "VG Timeout with timeoutWarning",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1606387038107",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "input.text == \"vgwPostResponseTimeout\"",
      "dialog_node": "node_1_1590079880241",
      "previous_sibling": "node_8_1590083939879"
    },
    {
      "type": "standard",
      "title": "vgwPostResponseTimeout - Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry.  I didn't catch anything."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1590079880241",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "mainMenuTimeout": true
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "input.text == \"vgwPostResponseTimeout\"",
      "dialog_node": "node_1_1590083633774",
      "previous_sibling": "node_10_1590081949297"
    },
    {
      "type": "standard",
      "title": "Start Policy Owner Auth",
      "output": {
        "generic": []
      },
      "parent": "node_7_1556051821371",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_1_1590396609855"
    },
    {
      "type": "standard",
      "title": "3.1. Common - Collect Insured DOB (alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_5_1590580064997",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_1_1590406942380",
      "previous_sibling": "node_119_1590581781459"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_586_1590399193955",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_54_1590415836020"
      },
      "conditions": "false",
      "dialog_node": "node_1_1590576885940",
      "previous_sibling": "node_17_1590415136089"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_54_1590415836020",
      "context": {
        "authStatus": {
          "zipCodeValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_1_1590577459548",
      "previous_sibling": "node_2_1590579307983"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590399308639",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1590401650875"
      },
      "conditions": "false",
      "dialog_node": "node_1_1590578744992",
      "previous_sibling": "node_623_1590399352302"
    },
    {
      "type": "standard",
      "title": "Authorized on behalf of company?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak or enter your response using the phone key pad. Do you have authorization from your company to receive information on this policy?\"\n:\n\"I see you're calling on behalf of a company.  Do you have authorization from your company to receive information on this policy? \" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_10_1590584285970",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "companyAuthorized",
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1590583536450"
    },
    {
      "type": "standard",
      "title": "Persist Continue - Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1590583877224",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590763174183"
      },
      "conditions": "true",
      "dialog_node": "node_1_1590585536499"
    },
    {
      "type": "standard",
      "title": "Owner is Trust",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1590396609855",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ownerType == \"trust\"",
      "dialog_node": "node_1_1590760175721",
      "previous_sibling": "node_3_1590580251254"
    },
    {
      "type": "folder",
      "title": "Auth flow - Trust",
      "parent": "node_7_1556051821371",
      "conditions": "false",
      "dialog_node": "node_1_1591009799109",
      "previous_sibling": "node_74_1590580615244"
    },
    {
      "type": "folder",
      "title": "Auth flow - Payor",
      "parent": "node_2_1557320487159",
      "conditions": "false",
      "dialog_node": "node_1_1591012613372",
      "previous_sibling": "node_6_1591012278264"
    },
    {
      "type": "standard",
      "title": "Agent Assistant Auth Flow",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591015308628",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1591015619687"
      },
      "conditions": "false",
      "dialog_node": "node_1_1591015398084",
      "previous_sibling": "node_6_1591015369081"
    },
    {
      "type": "standard",
      "title": "1. Agent/Assistant - Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_1_1591015619687"
    },
    {
      "type": "standard",
      "title": "Agent Assistant - move to agent SSN9",
      "output": {
        "generic": []
      },
      "parent": "node_10_1591015619693",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1591023058883"
      },
      "conditions": "$role == \"agent assistant\"",
      "dialog_node": "node_1_1591026352346",
      "previous_sibling": "node_10_1591026238461"
    },
    {
      "type": "standard",
      "title": "Next on success - Route to auth",
      "output": {
        "generic": []
      },
      "parent": "node_13_1556228833790",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1590394093339"
      },
      "conditions": "false",
      "dialog_node": "node_1_1591100417579",
      "previous_sibling": "node_182_1590392094444"
    },
    {
      "type": "standard",
      "title": "Collect Owner SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591155506648",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_1_1591268884327"
    },
    {
      "type": "standard",
      "title": "Yes - Trustee is company",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591368370216",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1590584285970"
      },
      "conditions": "$trusteeIsCompany == true",
      "dialog_node": "node_1_1591368531503"
    },
    {
      "type": "standard",
      "title": "Agent Role",
      "parent": "node_10_1559266487355",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1559265693354"
      },
      "conditions": "@role:agent",
      "dialog_node": "node_1_1591867420685"
    },
    {
      "type": "standard",
      "title": "Delivery Options Announced (Plus Retry)",
      "output": {},
      "parent": "node_7_1589412157955",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1591886910288",
      "previous_sibling": "node_5_1592510933866"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_623_1590399352302",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_566_1590399193946"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_1_1592225004156",
      "previous_sibling": "node_4_1590400551499"
    },
    {
      "type": "standard",
      "title": "Invalid SSN - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1591268884334",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591268884334"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_1_1592301904538",
      "previous_sibling": "node_8_1591268884334"
    },
    {
      "type": "standard",
      "title": "Draft Authorization Form",
      "output": {},
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$formType != null && $formType.contains(\"bank_authorization\")",
      "dialog_node": "node_1_1592505251721",
      "previous_sibling": "node_1_1592586667901"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior:  formType",
      "parent": "node_9_1590061435498",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat || @repeat",
      "dialog_node": "node_1_1592510759272",
      "previous_sibling": "node_1_1600712889887"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership Form",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$formType != null && $formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "node_1_1592586667901",
      "previous_sibling": "node_5_1589412024149"
    },
    {
      "type": "standard",
      "title": "Death Benefit",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591102234106",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590048783906"
      },
      "conditions": "@call_reason_type:(death benefit)",
      "dialog_node": "node_1_1592841095322",
      "previous_sibling": "node_7_1591102234116"
    },
    {
      "type": "standard",
      "title": "Anything else - evaluate conditions ",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591102234106",
      "context": {},
      "conditions": "anything_else",
      "dialog_node": "node_1_1592920288528",
      "previous_sibling": "node_5_1592841145771"
    },
    {
      "type": "standard",
      "title": "Flexible Premium Products",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1592935820993",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$productType == \"Flexible Premium Benefit Life\" || $productType == \"Universal Life\" ||    $productType == \"Variable Universal\"",
      "dialog_node": "node_1_1592943377084",
      "previous_sibling": "node_3_1592935915169"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products: API to check the paid to date ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1592943377084",
      "context": {
        "action": {
          "route": "API",
          "method": "billing"
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1592957857327"
    },
    {
      "type": "standard",
      "title": "Fax Delivery Confirmation Message ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> The form has been prepared and is ready to be faxed.  Let me connect you with a customer service representative who will finish processing this request.  Please stay on the line.  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_2_1589475954222",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "pendingTransaction": false
      },
      "conditions": "$deliveryMethod == \"fax\"",
      "dialog_node": "node_1_1593193068105",
      "previous_sibling": "node_6_1602862273547"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior:  Transfer of Ownership Form: Play Message",
      "parent": "node_3_1592586667911",
      "metadata": {},
      "conditions": "#customer_service || #main_menu ||   (@touchtone:zero && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_1_1594691118067"
    },
    {
      "type": "standard",
      "title": "VALID_PHONE_FORMAT, Check retries, Was that PHONE_NUMBER?",
      "output": {},
      "parent": "node_3_1589459673680",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1595013277068"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior ",
      "parent": "node_5_1590062752127",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1595345179069"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Products: PTD is in the past (transfer to CSR)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1604681399172",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$futurePtd == false",
      "dialog_node": "node_1_1596132848315",
      "previous_sibling": "node_2_1592952149485"
    },
    {
      "type": "standard",
      "title": "Provide Website Form Details Based on caller role",
      "parent": "node_7_1589412157955",
      "context": {
        "question": "webInfo",
        "deliveryMethod": "website"
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$deliveryMethod == \"website\" || @delivery_method:website",
      "dialog_node": "node_1_1600191693062",
      "previous_sibling": "node_3_1589457362375"
    },
    {
      "type": "standard",
      "title": "Play Website Form Message, Caller Role is \"Agent\"",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> When accessing forms from the website, logging in is not required. To access forms, visit w. w. w. dot, <break time='200ms'></break> agent <break time='200ms'></break> hyphen <break time='200ms'></break> Servicing .com. To download and print forms, locate the menu in the upper right hand corner.  Then select View and Print forms. <break time='550ms'></break> From the company name drop down list, select the appropriate company name. <break time='550ms'></break> Then select the state the policy was issued in. <break time='500ms'></break> Next, select either Variable or non Variable for the product type, and click on the select button. <break time='500ms'></break> Forms available for your policy will display and you will have the option to download or print your form.  <break time='550ms'></break> To hear this again, say repeat.  Otherwise I'll continue. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1600191693062",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$role == \"agent\" || $role == \"agent assistant\"",
      "dialog_node": "node_1_1600192545704"
    },
    {
      "type": "standard",
      "title": "Provide Website Form Details, Caller Role is \"Policyowner\" ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> When accessing forms from the website, logging in is not required. To access forms, visit w. w. w. dot, <break time='200ms'></break> policy owner <break time='200ms'></break> hyphen <break time='200ms'></break> Services .com. To download and print forms, locate the menu in the upper right hand corner.  Then select View and Print forms. <break time='550ms'></break> From the company name drop down list, select the appropriate company name. <break time='550ms'></break> Then select the state the policy was issued in. <break time='500ms'></break> Next, select either Variable or non Variable for the product type, and click on the select button. <break time='500ms'></break> Forms available for your policy will display and you will have the option to download or print your form.  <break time='550ms'></break> To hear this again, say repeat.  Otherwise I'll continue. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1600191693062",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$role == \"policyowner\" || $role == \"clientEmployee\"",
      "dialog_node": "node_1_1600192949921",
      "previous_sibling": "node_1_1600192545704"
    },
    {
      "type": "standard",
      "title": "Jump to Authenticated Further Assistance",
      "parent": "node_50_1601665363085",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_1_1600193223687"
    },
    {
      "type": "standard",
      "title": "Forms not available via DigitCSR, but ARE available on the web",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> When viewing or printing forms, logging into the website is not required.  Would you like instructions on how to print this form from our website? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1600712889887",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1600195364618",
      "previous_sibling": "node_7_1600713003797"
    },
    {
      "type": "standard",
      "title": "Agent Change Form recognized.  Set formType to agent_change.",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "agent_change"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_4_1600370246633"
      },
      "conditions": "@formType:(agent change form) || $formType.contains(\"agent_change\")",
      "dialog_node": "node_1_1600370039559",
      "previous_sibling": "node_10_1590061527666"
    },
    {
      "type": "standard",
      "title": "Forms not available via DigitCSR, but ARE available on the web Check Role",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1590061435498",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$formType.contains(\"agent_change\") || $formType.contains(\"fund_transfer\") || $formType.contains(\"name_change\") || $formType.contains(\"pors\")",
      "dialog_node": "node_1_1600712889887",
      "previous_sibling": "node_8_1600198455475"
    },
    {
      "type": "standard",
      "title": "Caller is not Owner, Payor, or Pru EE",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "otherRole",
        "authStatus": {
          "ownerSsn9Valid": "U"
        }
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "@no || #wont_provide ||      @role:(other role) || (@touchtone:four && input.text == @touchtone.literal) ||   @role:(family member) || @role:trustee",
      "dialog_node": "node_1_1600852604163",
      "previous_sibling": "node_19_1556228833792"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior -Billing, Fixed Products, Future PTD",
      "parent": "node_2_1592952149485",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_1_1601310783761"
    },
    {
      "type": "standard",
      "title": "Set Request for Claims",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1578343769338",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "claims"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_15_1578343769350"
      },
      "conditions": "true",
      "dialog_node": "node_1_1601658526346"
    },
    {
      "type": "standard",
      "title": "Continue conversation to set billing to create ForceNoInputTurn ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_2_1592952149485",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_1_1601920780636",
      "previous_sibling": "node_2_1592952648660"
    },
    {
      "type": "standard",
      "title": "Agent Representative",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1559266487355"
      },
      "conditions": "@role:(agent representative) && !#customer_service",
      "dialog_node": "node_1_1602506150894",
      "previous_sibling": "node_9_1602227439656"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Is your call regarding Licensing or Commissions?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1563500798686_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_2_1563500953745"
      },
      "conditions": "false",
      "dialog_node": "node_1_1602847903836",
      "previous_sibling": "node_3_1563500958095_1"
    },
    {
      "type": "standard",
      "title": "Special EFT Mailing - input prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> We recently mailed you a letter that indicates your policy is unfortunately drafting After the policy due date.  As a result, your policy is entering a grace-period every month.  Before I connect you with a Customer Service Representative, who can answer questions and update your policy, lets review the options in the letter.  <break time='350ms'></break> Option 1, change the draftdate to a day, equal to, ore before, the policy due date.  <break time='350ms'></break> Ore option 2, make a one time payment to pay your policy a month in advance, allowing you to keep your current draftdate. <break time='350ms'></break> , please tell me which option interests you.  <break time='700ms'></break>   To hear that again say, repeat.  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1604315845982",
      "context": {},
      "conditions": "true",
      "dialog_node": "node_1_1603138045898",
      "previous_sibling": "node_1_1603400636387"
    },
    {
      "type": "standard",
      "title": "Set Request for Special Time Union EFT Mailing",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1604315845982",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "stuEft"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1603400636387"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior Digression ",
      "parent": "node_8_1603728589682",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1603729107875"
    },
    {
      "type": "standard",
      "title": "Jump to Transfer Misrouted Call",
      "parent": "node_8_1603728589682",
      "conditions": "true",
      "dialog_node": "node_1_1603729123454",
      "previous_sibling": "node_1_1603729107875"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior Digression ",
      "parent": "node_7_1603826498853",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_1_1603827204521"
    },
    {
      "type": "standard",
      "title": "Next - Confirm Letter Request",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>You have a question regarding a letter you received, is thatt right? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1603793715648",
      "context": {
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "node_1_1603975739025",
      "previous_sibling": "node_7_1603793882728"
    },
    {
      "type": "standard",
      "title": "Agent Assistant - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent Assistant"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "agent assistant",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(agent assistant)",
      "dialog_node": "node_1_1604388150181",
      "previous_sibling": "node_3_1603870080163"
    },
    {
      "type": "standard",
      "title": "Check for PTD of null",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1592957857356",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$billingNotAvailable == true",
      "dialog_node": "node_1_1604518214858"
    },
    {
      "type": "standard",
      "title": "Premium Receipt API call to check last premium received - copy1",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1592951391954",
      "context": {
        "action": {
          "route": "API",
          "method": "lastPayment"
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1604681399172"
    },
    {
      "type": "standard",
      "title": "API call - Mail address complete",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1589445695435",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "mailingAddress"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_1_1606367389387"
    },
    {
      "type": "folder",
      "title": "Default Menu Options",
      "parent": "node_1_1555354306104",
      "conditions": "true",
      "dialog_node": "node_1_1606387038107",
      "previous_sibling": "node_2_1603793715648"
    },
    {
      "type": "standard",
      "title": "Final State = Function Complete",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1606388379258",
      "context": {
        "finalState": "FC"
      },
      "conditions": "$pendingTransaction != null && $pendingTransaction != true",
      "dialog_node": "node_1_1606388495133",
      "previous_sibling": "node_6_1606388462386"
    },
    {
      "type": "standard",
      "title": "Transaction Type - Premium Receipt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "premium_receipt"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$transactionType == \"premium_receipt\"",
      "dialog_node": "node_1_1606462549252",
      "previous_sibling": "node_2_1606458547860"
    },
    {
      "type": "standard",
      "title": "Continue",
      "parent": "node_3_1606741007443",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1589888185689"
      },
      "conditions": "true",
      "dialog_node": "node_1_1606741080188"
    },
    {
      "type": "standard",
      "title": "Call reason unknown - Ask (no DTMF) - NOT USED",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I understand you want customer service.  I just need a little more information.  The more you say, the better.  Please tell me more about why you're calling today. </prosody>  "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1556655996383",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "reason"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "$callReason == false && false",
      "dialog_node": "node_1_1606746868481",
      "previous_sibling": "node_1_1589813093101"
    },
    {
      "type": "standard",
      "title": "Not Authenticated - auth flow",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1589893073742",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "true",
      "dialog_node": "node_1_1606828401359",
      "previous_sibling": "node_2_1606828456649"
    },
    {
      "type": "standard",
      "title": "Customer Service - goto Auth check",
      "parent": "node_7_1606303758827",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_1_1606911980980",
      "previous_sibling": "node_15_1589546773577"
    },
    {
      "type": "standard",
      "title": "Customer Service - goto Auth check",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1606287850796",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_1_1606912756894",
      "previous_sibling": "node_3_1589570535040"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_114_1590581526121",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_118_1590581526121"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_116_1590581526121",
      "previous_sibling": "node_115_1590581526121"
    },
    {
      "type": "standard",
      "title": "2.1. Servicing Agent - Collect Agent Street Number (Alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_116_1591027977087",
      "previous_sibling": "node_105_1591027824941"
    },
    {
      "type": "standard",
      "title": "Next on success - Insured SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_108_1590581526115",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_75_1590580615250"
      },
      "conditions": "false",
      "dialog_node": "node_117_1590581526121",
      "previous_sibling": "node_114_1590581526121"
    },
    {
      "type": "standard",
      "title": "Input agent street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of Agent’s street address. \"\n:\n\"What is the numerical portion of the Agent's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_116_1591027977087",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_117_1591027977101"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Insured SSN4 (alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_108_1590581526115",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "ownerSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_119_1590581781459"
      },
      "conditions": "false",
      "dialog_node": "node_118_1590581526121",
      "previous_sibling": "node_117_1590581526121"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_117_1591027977101",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_122_1591027977101"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_118_1591027977101"
    },
    {
      "type": "standard",
      "title": "3. Company/Trust - Collect Insured SSN4 (Alternate Auth)",
      "output": {
        "generic": []
      },
      "parent": "node_5_1590580064997",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_119_1590581781459"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_117_1591027977101",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_126_1591027977101"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_119_1591027977101",
      "previous_sibling": "node_118_1591027977101"
    },
    {
      "type": "standard",
      "title": "Input Insured SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of Insured's social security number.\"\n:\n\"What is the last 4 digits of the Insured’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_119_1590581781459",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_120_1590581781466"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_117_1591027977101",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_126_1591027977101"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_120_1591027977101",
      "previous_sibling": "node_119_1591027977101"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_120_1590581781466",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_125_1590581781466"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_121_1590581781466"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Let's try <phoneme alphabet='ibm' ph='.1DIs.0In.2stEd'>this instead</phoneme><break time='500ms'></break>, </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1556666448968",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_12_1556666448970",
      "previous_sibling": "node_11_1556666448970"
    },
    {
      "type": "standard",
      "title": "No - Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1559266487355",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_12_1559266647359",
      "previous_sibling": "node_11_1559266644551"
    },
    {
      "type": "standard",
      "title": "No",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1559266487355_1",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1559265922539"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_12_1559266647359_1",
      "previous_sibling": "node_14_1602662673709"
    },
    {
      "type": "standard",
      "title": "Persist - Prudential Employee after Agent prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Prudential Employee"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "role": "clientEmployee",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(prudential employee)",
      "dialog_node": "node_12_1574456358938",
      "previous_sibling": "node_10_1574456324274"
    },
    {
      "type": "standard",
      "title": "Standard Delivery",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Response for Standard Delivery"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1589433562596",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "delivery_type": null
      },
      "conditions": "@delivery_type:standard ||   $delivery_type == \"standard\"",
      "dialog_node": "node_12_1589433562600"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1590406942386",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1590577867834"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_12_1590406942386",
      "previous_sibling": "node_11_1590406942386"
    },
    {
      "type": "standard",
      "title": "@no - ask again",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry.  I want to be sure.   Are you authorized on behalf of the company to receive information on this policy?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_1_1590583536450",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_12_1590583877215",
      "previous_sibling": "node_29_1590584854367"
    },
    {
      "type": "standard",
      "title": "Next on failure - street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1590585843907",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_586_1590399193955"
      },
      "conditions": "false",
      "dialog_node": "node_12_1590585843913",
      "previous_sibling": "node_11_1590585843913"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1591009799116",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "insuredSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590406942380"
      },
      "conditions": "false",
      "dialog_node": "node_12_1591009799116",
      "previous_sibling": "node_11_1591009799116"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Last Payment Date",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1591012613381",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_47_1591012628281"
      },
      "conditions": "false",
      "dialog_node": "node_12_1591012613381",
      "previous_sibling": "node_11_1591012613381"
    },
    {
      "type": "standard",
      "title": "2. Only Agent - Collect Agent SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_12_1591015773199",
      "previous_sibling": "node_1_1591015619687"
    },
    {
      "type": "standard",
      "title": "Next on success - agent address",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591026800363",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_60_1591026800363"
      },
      "conditions": "false",
      "dialog_node": "node_12_1591026800363",
      "previous_sibling": "node_9_1591026800363"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the insured's date of birth.\"\n:\n\"Starting with the month, please say the insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_11_1591269802085",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_12_1591269802093"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1591015773204",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1591015773204"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_12_1592305090707",
      "previous_sibling": "node_20_1591015773204"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path  - - Billing, Flexible Products, Past PTD",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1601311357604",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_12_1601311357612"
    },
    {
      "type": "standard",
      "title": "Continue Conversation to Delivery Options",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_48_1601665110204",
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_5_1590062752127"
      },
      "conditions": "true",
      "dialog_node": "node_12_1601921920462"
    },
    {
      "type": "standard",
      "title": "Some Other Role",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1602661903313",
      "context": {
        "role": "otherRole"
      },
      "conditions": "@role:(other role)",
      "dialog_node": "node_12_1602659093878",
      "previous_sibling": "node_2_1602248141667"
    },
    {
      "type": "standard",
      "title": "Confirm Special Mailing EFT Option Request",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? $input_prompt ?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1604315845982",
      "context": {
        "retryCounter": 0
      },
      "conditions": "false",
      "dialog_node": "node_12_1604314464251",
      "previous_sibling": "node_1_1603138045898"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_120_1590581781466",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_129_1590581781466"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_122_1590581781466",
      "previous_sibling": "node_121_1590581781466"
    },
    {
      "type": "standard",
      "title": "API call to validate agent address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_116_1591027977087",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_122_1591027977101",
      "previous_sibling": "node_117_1591027977101"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_120_1590581781466",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_129_1590581781466"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_123_1590581781466",
      "previous_sibling": "node_122_1590581781466"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_122_1591027977101",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_125_1591027977101"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_123_1591027977101"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_122_1591027977101",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_126_1591027977101"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_124_1591027977101",
      "previous_sibling": "node_123_1591027977101"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_119_1590581781459",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_125_1590581781466",
      "previous_sibling": "node_120_1590581781466"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Agent Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_116_1591027977087",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_127_1591027994393"
      },
      "conditions": "false",
      "dialog_node": "node_125_1591027977101",
      "previous_sibling": "node_122_1591027977101"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_125_1590581781466",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_128_1590581781466"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_126_1590581781466"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_116_1591027977087",
      "context": {
        "authStatus": {
          "agentAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_126_1591027977101",
      "previous_sibling": "node_125_1591027977101"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_125_1590581781466",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_129_1590581781466"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_127_1590581781466",
      "previous_sibling": "node_126_1590581781466"
    },
    {
      "type": "standard",
      "title": "2.2. Servicing Agent - Collect Agent Zip code (Alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_127_1591027994393",
      "previous_sibling": "node_116_1591027977087"
    },
    {
      "type": "standard",
      "title": "Next on success - Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_119_1590581781459",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590406942380"
      },
      "conditions": "false",
      "dialog_node": "node_128_1590581781466",
      "previous_sibling": "node_125_1590581781466"
    },
    {
      "type": "standard",
      "title": "Input agent Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_127_1591027994393",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_128_1591027994400"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_119_1590581781459",
      "context": {
        "authStatus": {
          "insuredSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_129_1590581781466",
      "previous_sibling": "node_128_1590581781466"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_128_1591027994400",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_133_1591027994400"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_129_1591027994400"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_128_1591027994400",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_137_1591027994400"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_130_1591027994400",
      "previous_sibling": "node_129_1591027994400"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_128_1591027994400",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_137_1591027994400"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_131_1591027994400",
      "previous_sibling": "node_130_1591027994400"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1589432821868",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_13_1555360064390",
      "previous_sibling": "node_5_1589432841952"
    },
    {
      "type": "standard",
      "title": "May I have the owners full SSN",
      "output": {
        "generic": []
      },
      "parent": "node_1_1556050074520",
      "context": {
        "input_prompt": "May I have the Social Security, or Tax ID number for the Policy Owner please?",
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_13_1556228833790",
      "previous_sibling": "node_2_1556050145112"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1556666448968",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1556666448970"
      },
      "conditions": "true",
      "dialog_node": "node_13_1556666448970",
      "previous_sibling": "node_12_1556666448970"
    },
    {
      "type": "standard",
      "title": "Yes GA or BOA - Persist Role",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "General Agent or Back Office"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1559265922539",
      "context": {
        "role": "generalAgentOrBackOffice",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal) ||  @role:(general agent)",
      "dialog_node": "node_13_1559266652039"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_12_1574456358938",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_13_1574456358953"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?\n"
              },
              {
                "text": "Did you want to hear that again?"
              },
              {
                "text": "Want me to repeat that?"
              }
            ],
            "response_type": "text",
            "selection_policy": "random"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1555355230304",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_13_1589546773572"
    },
    {
      "type": "standard",
      "title": "yes - Persist",
      "output": {
        "generic": []
      },
      "parent": "node_12_1590583877215",
      "context": {
        "authenticated": true,
        "companyAuthorized": true
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_29_1590584854367"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_13_1590583877224"
    },
    {
      "type": "standard",
      "title": "3.2. Agent/Assistant - Collect Agent Street Number",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_13_1590693378598",
      "previous_sibling": "node_34_1591016704068"
    },
    {
      "type": "standard",
      "title": "2. Payor - Collect Owner SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_13_1591012613381",
      "previous_sibling": "node_2_1591012613381"
    },
    {
      "type": "standard",
      "title": "Input Agent SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of the agent's social security number.\"\n:\n\"What are the last four digits of the Agent’s social security number\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_12_1591015773199",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_13_1591015773204"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_12_1591269802093",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_16_1591269802094"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_13_1591269802094"
    },
    {
      "type": "standard",
      "title": "Invalid SSN9 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_41_1591023058889",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_36_1591023058889"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_13_1592305130907",
      "previous_sibling": "node_43_1591023058889"
    },
    {
      "type": "standard",
      "title": "Main Menu Reroute   - Billing, Flexible Products, Past PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1601311357604",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_13_1601311357612",
      "previous_sibling": "node_12_1601311357612"
    },
    {
      "type": "standard",
      "title": "Customer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1602661903313",
      "metadata": {},
      "conditions": "(@role:(not agent) || @role:trustee) && !#customer_service",
      "dialog_node": "node_13_1602660530649",
      "previous_sibling": "node_12_1602659093878"
    },
    {
      "type": "standard",
      "title": "Yes - Transfer",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_12_1604314464251",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_13_1604314464251",
      "previous_sibling": "node_14_1604314464251"
    },
    {
      "type": "standard",
      "title": "Special EFT Mailing - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Please select an option.  Option 1, change the draftdate to a day, equal to, ore before, the policy due date.  <break time='350ms'></break> Ore option 2, make a one time payment to pay your policy a month in advance, allowing you to keep your current draftdate. <break time='350ms'></break>.  To hear that again, say repeat.  Otherwise, please tell me which option interests you.  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActEnableSpeechBargeIn"
          },
          {
            "command": "vgwActEnableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1604315845982",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_3_1603138142995"
      },
      "conditions": "false",
      "dialog_node": "node_13_1605698438852",
      "previous_sibling": "node_12_1604314464251"
    },
    {
      "type": "standard",
      "title": "API call to validate agent zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_127_1591027994393",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_133_1591027994400",
      "previous_sibling": "node_128_1591027994400"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_133_1591027994400",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_136_1591027994400"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_134_1591027994400"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_133_1591027994400",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_137_1591027994400"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_135_1591027994400",
      "previous_sibling": "node_134_1591027994400"
    },
    {
      "type": "standard",
      "title": "No I dont have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_97_1590389564144",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1591099336007"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_136_1590389564151",
      "previous_sibling": "node_98_1590389564151"
    },
    {
      "type": "standard",
      "title": "Next on success - last payment date",
      "output": {
        "generic": []
      },
      "parent": "node_127_1591027994393",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_83_1591027451458"
      },
      "conditions": "false",
      "dialog_node": "node_136_1591027994400",
      "previous_sibling": "node_133_1591027994400"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_127_1591027994393",
      "context": {
        "authStatus": {
          "agentZipValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_137_1591027994400",
      "previous_sibling": "node_136_1591027994400"
    },
    {
      "type": "standard",
      "title": "Confirm SSN",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<speak version='1.0'> Was the owner's social security number <say-as interpret-as='digits'>[OWNER_FULL_SSN]</say-as> ?   If correct, say yes or press one.  If incorrect say no or press 2.</speak>\"\n:\n\"<speak version='1.0'> Was that <say-as interpret-as='digits'>[OWNER_FULL_SSN]</say-as> ? </speak>\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_97_1590389564144",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_138_1590389936838",
      "previous_sibling": "node_136_1590389564151"
    },
    {
      "type": "standard",
      "title": "Yes Valid SSN - Api Call - Forced Turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you, one moment. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_138_1590389936838",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_139_1590389936847"
    },
    {
      "type": "standard",
      "title": "Continue - API Call to validate SSN",
      "output": {
        "generic": []
      },
      "parent": "node_139_1590389936847",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_182_1590392094444"
      },
      "conditions": "true",
      "dialog_node": "node_140_1590389936847"
    },
    {
      "type": "standard",
      "title": "Yes / Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_13_1555360064390",
      "context": {},
      "metadata": {},
      "conditions": "@yes || #repeat ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_14_1555360221124",
      "previous_sibling": "node_15_1555360292318"
    },
    {
      "type": "standard",
      "title": "No",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1559265922539",
      "context": {},
      "metadata": {},
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_14_1559266654496",
      "previous_sibling": "node_22_1602663356082"
    },
    {
      "type": "standard",
      "title": "Yes_Claims ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1555355227863_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "finalState": "DC",
        "claimsTransfer": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#death_claims || @deceased",
      "dialog_node": "node_14_1578343769338"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_7_1606303758827",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "true",
      "dialog_node": "node_14_1589546773577",
      "previous_sibling": "node_1_1606911980980"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and Owner has SSN",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590414852604",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1590399308639"
      },
      "conditions": "$policyNumberValid == true && $ownerHasSsn == true",
      "dialog_node": "node_14_1590414721657",
      "previous_sibling": "node_5_1590408401296"
    },
    {
      "type": "standard",
      "title": "Input agent street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of Agent’s street address. \"\n:\n\"What is the numerical portion of the Agent's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_13_1590693378598",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_14_1590693378598"
    },
    {
      "type": "standard",
      "title": "Input Owner SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of the owner's social security number.\"\n:\n\"What is the last 4 digits of the owner’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_13_1591012613381",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_14_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_13_1591015773204",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_18_1591015773204"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_14_1591015773204"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_12_1591269802093",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_20_1591269802094"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_14_1591269802094",
      "previous_sibling": "node_13_1591269802094"
    },
    {
      "type": "standard",
      "title": "Invalid agent Id - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_29_1591015935168",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1591015935168"
      },
      "conditions": "input.text == \"INVALID_AGENT_ID\"",
      "dialog_node": "node_14_1592305163288",
      "previous_sibling": "node_31_1591015935168"
    },
    {
      "type": "folder",
      "title": "Other Roles",
      "parent": "node_10_1559266487355_1",
      "conditions": "true",
      "dialog_node": "node_14_1602662673709",
      "previous_sibling": "node_3_1602507843297"
    },
    {
      "type": "standard",
      "title": "No - Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Sorry. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_12_1604314464251",
      "context": {
        "sm_eft_option": null
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1605698438852"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_14_1604314464251"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_13_1555360064390",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "@no ||    (@touchtone:two && input.text == @touchtone.literal) || @vgTimeOut",
      "dialog_node": "node_15_1555360292318"
    },
    {
      "type": "standard",
      "title": "Persist Data ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1578343769338",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "reason"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_15_1578343769350",
      "previous_sibling": "node_1_1601658526346"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_7_1606303758827",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1555355230304"
      },
      "conditions": "@yes ||    (@touchtone:one && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_15_1589546773577"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and SSN missing",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590414852604",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590406942380"
      },
      "conditions": "anything_else",
      "dialog_node": "node_15_1590414995266",
      "previous_sibling": "node_14_1590414721657"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_14_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1590693378598"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_15_1590693378598"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_14_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1591012613381"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_15_1591012613381"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_13_1591015773204",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1591015773204"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_15_1591015773204",
      "previous_sibling": "node_14_1591015773204"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect agent address (Alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1591026800363",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_116_1591027977087"
      },
      "conditions": "false",
      "dialog_node": "node_15_1591026800363",
      "previous_sibling": "node_12_1591026800363"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_12_1591269802093",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_20_1591269802094"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_15_1591269802094",
      "previous_sibling": "node_14_1591269802094"
    },
    {
      "type": "standard",
      "title": "Invalid agent Id - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_40_1591016704079",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1591016704079"
      },
      "conditions": "input.text == \"INVALID_AGENT_ID\"",
      "dialog_node": "node_15_1592305195750",
      "previous_sibling": "node_42_1591016704079"
    },
    {
      "type": "standard",
      "title": "Policy Owner",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1602662673709",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1574456243857"
      },
      "conditions": "@role:policyowner",
      "dialog_node": "node_15_1602662673728"
    },
    {
      "type": "standard",
      "title": "Claim Transfer Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'>One moment while I connect you with a claim representative.</prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_15_1578343769350",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_16_1578343769350",
      "previous_sibling": "node_2_1601658596823"
    },
    {
      "type": "standard",
      "title": "Overnight Delivery ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Response for Express Delivery"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1589433562596",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "delivery_type": null
      },
      "conditions": "@delivery_type:overnight || $delivery_type == \"overnight\"",
      "dialog_node": "node_16_1589433562601",
      "previous_sibling": "node_12_1589433562600"
    },
    {
      "type": "standard",
      "title": "Input street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of your street address. \"\n:\n\"What is the numerical portion of the owner's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_586_1590399193955",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_16_1590415136082"
    },
    {
      "type": "standard",
      "title": "no or anything else - Persist",
      "output": {
        "generic": []
      },
      "parent": "node_12_1590583877215",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "authenticated": false,
        "companyAuthorized": false
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_16_1590583877224",
      "previous_sibling": "node_13_1590583877224"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_14_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1590693378598"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_16_1590693378598",
      "previous_sibling": "node_15_1590693378598"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_14_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1591012613381"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_16_1591012613381",
      "previous_sibling": "node_15_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_13_1591015773204",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1591015773204"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_16_1591015773204",
      "previous_sibling": "node_15_1591015773204"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_11_1591269802085",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_16_1591269802094",
      "previous_sibling": "node_12_1591269802093"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1590693378598",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_14_1590693378598"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_16_1592305230982",
      "previous_sibling": "node_21_1590693378598"
    },
    {
      "type": "standard",
      "title": "Check retries - Was that PHONE NUMBER?",
      "output": {},
      "parent": "node_1_1589459289804",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_16_1601928952420",
      "previous_sibling": "node_5_1589459669813"
    },
    {
      "type": "standard",
      "title": "Some Other Role",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1602662673709",
      "context": {
        "role": "otherRole"
      },
      "conditions": "@role:(other role)",
      "dialog_node": "node_16_1602662673728",
      "previous_sibling": "node_15_1602662673728"
    },
    {
      "type": "standard",
      "title": "Check retries",
      "output": {},
      "parent": "node_1_1603138045898",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1605698438852"
      },
      "conditions": "true",
      "dialog_node": "node_16_1605698832101",
      "previous_sibling": "node_26_1605699359014"
    },
    {
      "type": "standard",
      "title": "Persist - Policyowner",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Owner"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "policyowner",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:policyowner || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_17_1556228833792"
    },
    {
      "type": "standard",
      "title": "Play Message for Previous Node",
      "output": {},
      "parent": "node_16_1578343769350",
      "conditions": "true",
      "dialog_node": "node_17_1578343769350"
    },
    {
      "type": "standard",
      "title": "API call to validate address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_586_1590399193955",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_17_1590415136089",
      "previous_sibling": "node_16_1590415136082"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1590693378598",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1590693378598"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_17_1590693378598",
      "previous_sibling": "node_16_1590693378598"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1591012613381",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_17_1591012613381",
      "previous_sibling": "node_16_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_16_1591269802094",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1591269802094"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_17_1591269802094"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1590693378598",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_25_1590693378598"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_17_1592305269159",
      "previous_sibling": "node_32_1590693378598"
    },
    {
      "type": "standard",
      "title": "REPEAT - Billing, Flexible Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1601311202419",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1592957857357"
      },
      "conditions": "#repeat",
      "dialog_node": "node_17_1593114691347",
      "previous_sibling": "node_9_1601311202439"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Was that [PHONE_NUMBER?  Please say yes, or press 1.  Say no, or press 2.  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $DATES_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $DATES_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time_dob ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfMaxCount": "8",
              "dtmfMinCount": "4",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_16_1601928952420",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_5_1589459669813"
      },
      "conditions": "true",
      "dialog_node": "node_17_1601928952445"
    },
    {
      "type": "standard",
      "title": "Customer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1602662673709",
      "metadata": {},
      "conditions": "(@role:(not agent) || @role:trustee) && !#customer_service",
      "dialog_node": "node_17_1602662673728",
      "previous_sibling": "node_16_1602662673728"
    },
    {
      "type": "standard",
      "title": "No Invalid SSN",
      "output": {
        "generic": []
      },
      "parent": "node_138_1590389936838",
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_179_1590391784477",
      "previous_sibling": "node_139_1590389936847"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry.  I still didn't get that. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_179_1590391784477",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1591099336007"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_180_1590391784483"
    },
    {
      "type": "standard",
      "title": "Reprompt SSN",
      "output": {
        "generic": []
      },
      "parent": "node_179_1590391784477",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_97_1590389564144"
      },
      "conditions": "anything_else",
      "dialog_node": "node_181_1590391784483",
      "previous_sibling": "node_180_1590391784483"
    },
    {
      "type": "standard",
      "title": "Correspondence Mailing Address",
      "output": {
        "generic": []
      },
      "parent": "node_3_1555355225070",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@mailing_address_type:correspondence",
      "dialog_node": "node_18_1555361256167",
      "previous_sibling": "node_6_1555355836587"
    },
    {
      "type": "standard",
      "title": "Persist - Premium Payor",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Payor"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "payor",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(premium payor) ||   (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_18_1556228833792",
      "previous_sibling": "node_17_1556228833792"
    },
    {
      "type": "standard",
      "title": "Check retries",
      "output": {},
      "parent": "node_2_1556288584201",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_18_1556669739797",
      "previous_sibling": "node_7_1556899354941"
    },
    {
      "type": "standard",
      "title": "Living Benefits",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1555355227863_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "finalState": "LB",
        "livingBenefitTransfer": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#living_benefits",
      "dialog_node": "node_18_1578343808129",
      "previous_sibling": "node_14_1578343769338"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_17_1590415136089",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590576885940"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_18_1590415136090"
    },
    {
      "type": "standard",
      "title": "API call to validate agent SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_12_1591015773199",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_18_1591015773204",
      "previous_sibling": "node_13_1591015773204"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1591269802094",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_20_1591269802094"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_18_1591269802094",
      "previous_sibling": "node_17_1591269802094"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1591026800363",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1591026800363"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_18_1592305969487",
      "previous_sibling": "node_11_1591026800363"
    },
    {
      "type": "standard",
      "title": "REPEAT - Billing, Flexible Products, Past PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1601311357604",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1592957857357"
      },
      "conditions": "#repeat",
      "dialog_node": "node_18_1593114996182",
      "previous_sibling": "node_13_1601311357612"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_10_1559266487355_1",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_18_1602662736832",
      "previous_sibling": "node_12_1559266647359_1"
    },
    {
      "type": "standard",
      "title": "API call to validate SSN",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_13_1556228833790",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn9"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_182_1590392094444",
      "previous_sibling": "node_97_1590389564144"
    },
    {
      "type": "standard",
      "title": "Multiple Policies - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_182_1590392094444",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "$multiplePolicies == true",
      "dialog_node": "node_184_1590392094450"
    },
    {
      "type": "standard",
      "title": "SSN Found - Success",
      "output": {
        "generic": []
      },
      "parent": "node_182_1590392094444",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1591100417579"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_188_1590392094450",
      "previous_sibling": "node_184_1590392094450"
    },
    {
      "type": "standard",
      "title": "Persist - Prudential Employee",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Prudential Employee"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "clientEmployee",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(prudential employee) || (@touchtone:three && input.text == @touchtone.literal)",
      "dialog_node": "node_19_1556228833792",
      "previous_sibling": "node_18_1556228833792"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tPlease choose one of the following.  Say Policy owner, or press 1. Payer. or 2. Prudential Employee. or 3. <break time='250ms'></break> If you are none of these, say No. or press 4.  \n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActEnableSpeechBargeIn"
          },
          {
            "command": "vgwActEnableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_18_1556669739797",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_4_1556226486649"
      },
      "conditions": "true",
      "dialog_node": "node_19_1556669739798"
    },
    {
      "type": "standard",
      "title": "Persist Data ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1578343808129",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "reason"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_19_1578343808141",
      "previous_sibling": "node_3_1601658709965"
    },
    {
      "type": "standard",
      "title": "API call to validate agent address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_13_1590693378598",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_19_1590693378598",
      "previous_sibling": "node_14_1590693378598"
    },
    {
      "type": "standard",
      "title": "API call to validate owner SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_13_1591012613381",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_19_1591012613381",
      "previous_sibling": "node_14_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_18_1591015773204",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_21_1591015773204"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_19_1591015773204"
    },
    {
      "type": "standard",
      "title": "Next on success - ",
      "output": {
        "generic": []
      },
      "parent": "node_11_1591269802085",
      "conditions": "false",
      "dialog_node": "node_19_1591269802094",
      "previous_sibling": "node_16_1591269802094"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_66_1591026800363",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_61_1591026800363"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_19_1592306063825",
      "previous_sibling": "node_68_1591026800363"
    },
    {
      "type": "standard",
      "title": "REPEAT:  Values:  Flexible Products (Play Message)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1595345327718",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1590062783383"
      },
      "conditions": "#repeat",
      "dialog_node": "node_19_1593115294298",
      "previous_sibling": "node_7_1595345327738"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry, I still didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1556669739797",
      "metadata": {},
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_20_1556669739798",
      "previous_sibling": "node_19_1556669739798"
    },
    {
      "type": "standard",
      "title": "Claim Transfer Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'>One moment while I connect you with a benefit specialist. </prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1578343808141",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_20_1578343808141",
      "previous_sibling": "node_4_1601658808865"
    },
    {
      "type": "standard",
      "title": "If Individual - auth done",
      "output": {
        "generic": []
      },
      "parent": "node_6_1590406908895",
      "context": {
        "authenticated": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590763174183"
      },
      "conditions": "anything_else",
      "dialog_node": "node_20_1590584381970",
      "previous_sibling": "node_10_1590584285970"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_19_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590693378598"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_20_1590693378598"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_19_1591012613381",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1591012613381"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_20_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1591015773204",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1591015773204"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_20_1591015773204",
      "previous_sibling": "node_19_1591015773204"
    },
    {
      "type": "standard",
      "title": "Next on Failure - ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1591269802085",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "conditions": "false",
      "dialog_node": "node_20_1591269802094",
      "previous_sibling": "node_19_1591269802094"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_111_1591027824946",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_106_1591027824946"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_20_1592306095118",
      "previous_sibling": "node_113_1591027824946"
    },
    {
      "type": "standard",
      "title": "REPEAT:  Values:  Fixed Products (Play Message)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1595345179069",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1590062752127"
      },
      "conditions": "#repeat",
      "dialog_node": "node_20_1593115318052",
      "previous_sibling": "node_3_1595345179088"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1602662736832",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_20_1602662736850",
      "previous_sibling": "node_37_1602670292434"
    },
    {
      "type": "standard",
      "title": "SSN not found  - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The social security or tax ID does not match our records."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_182_1590392094444",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1591099336007"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_202_1590392094450",
      "previous_sibling": "node_188_1590392094450"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1556669739797",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1556669739798"
      },
      "conditions": "true",
      "dialog_node": "node_21_1556669739798",
      "previous_sibling": "node_20_1556669739798"
    },
    {
      "type": "standard",
      "title": "Play Message for Previous Node",
      "output": {},
      "parent": "node_20_1578343808141",
      "conditions": "true",
      "dialog_node": "node_21_1578343808141"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1590693378598",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1590693378598"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_21_1590693378598",
      "previous_sibling": "node_20_1590693378598"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_21_1591012613381",
      "previous_sibling": "node_20_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_12_1591015773199",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_21_1591015773204",
      "previous_sibling": "node_18_1591015773204"
    },
    {
      "type": "standard",
      "title": "Collect owner Street Number",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591155506648",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_21_1591270076785",
      "previous_sibling": "node_11_1591269802085"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_122_1591027977101",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_117_1591027977101"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_21_1592306118560",
      "previous_sibling": "node_124_1591027977101"
    },
    {
      "type": "standard",
      "title": "REPEAT:  Beneficiary Change Form: Play Message ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1589414474113",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1589414474113"
      },
      "conditions": "#repeat",
      "dialog_node": "node_21_1593116044102"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior:  Provide website details (Agent)",
      "parent": "node_1_1600192545704",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat || @repeat",
      "dialog_node": "node_21_1600460689470"
    },
    {
      "type": "standard",
      "title": "NEW Are you an agent, agent assistant, or calling on behalf of an agent & Reason for call - NEW",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_2_1555355201520_1",
      "previous_sibling": "node_5_1589432821868"
    },
    {
      "type": "standard",
      "title": "May I have the policy number",
      "output": {
        "generic": []
      },
      "parent": "node_1_1556050074520",
      "context": {
        "input_prompt": "May I have the policy number?",
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_2_1556050145112"
    },
    {
      "type": "standard",
      "title": "Client ID Found - NEW",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> \n\tPlease say if you are the owner, premium payor, or Prudential Employee. \n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "input.text == \"VALID_POLICYNUMBER\"",
      "digress_in": "does_not_return",
      "dialog_node": "node_2_1556288584201",
      "previous_sibling": "node_24_1556230123945"
    },
    {
      "type": "folder",
      "title": "Payor Authentication",
      "metadata": {},
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_2_1557320487159",
      "previous_sibling": "node_7_1556051821371"
    },
    {
      "type": "standard",
      "title": "No",
      "output": {
        "generic": []
      },
      "parent": "node_9_1559266384280",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1559266487355"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1559265700600",
      "previous_sibling": "node_1_1559265693354"
    },
    {
      "type": "standard",
      "title": "No",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1559266384280_1",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1559266487355"
      },
      "conditions": "@no ||       (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1559265700600_1",
      "previous_sibling": "node_2_1602661903313"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1556228833792",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_2_1559303542120"
    },
    {
      "type": "standard",
      "title": "Role Detected",
      "output": {},
      "parent": "node_2_1555355201520_1",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "(@role:agent || @role:(agent assistant)  || @role:(general agent)) && !#customer_service",
      "dialog_node": "node_2_1559319878910",
      "digress_out": "allow_all",
      "previous_sibling": "node_1_1602506150894"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": []
      },
      "parent": "node_3_1561666536036",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589545257503"
      },
      "conditions": "true",
      "dialog_node": "node_2_1561665977180",
      "previous_sibling": "node_5_1589198182878"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>If you are the agent, say yes or press 1.  Otherwise, say no, or press two. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1562765850934",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_1_1559265693354"
      },
      "conditions": "true",
      "dialog_node": "node_2_1562765850937"
    },
    {
      "type": "standard",
      "title": "Yes - Direct Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1563500798686",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "finalState": "LC",
        "commissionTransfer": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "@yes ||    (@touchtone:one && input.text == @touchtone.literal) || #licensing_commissions",
      "dialog_node": "node_2_1563500953745"
    },
    {
      "type": "standard",
      "title": "Yes - Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1563500798686_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "finalState": "LC",
        "commissionTransfer": true
      },
      "metadata": {},
      "conditions": "@yes || #licensing_commissions || (@touchtone:one && input.text == @touchtone.literal) || @licensing_commissions",
      "dialog_node": "node_2_1563500953745_1",
      "previous_sibling": "node_5_1605854626898"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>If you are the agent assistant, say yes or press 1.  Otherwise, say no, or press two. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1577197142669",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_11_1559266644551"
      },
      "conditions": "true",
      "dialog_node": "node_2_1577197142681"
    },
    {
      "type": "standard",
      "title": "Delivery Method Detected?",
      "parent": "node_1_1555354306104",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_8_1606313710328"
      },
      "conditions": "@delivery_method",
      "dialog_node": "node_2_1589219067678",
      "previous_sibling": "node_3_1589534554860"
    },
    {
      "type": "standard",
      "title": "Standard Delivery",
      "parent": "node_7_1589363543131",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1589263755473"
      },
      "conditions": "@delivery_type:standard ||   (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1589363629859"
    },
    {
      "type": "standard",
      "title": "Main Menu - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_9_1589560826369",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_2_1589391558135",
      "digress_out": "allow_all"
    },
    {
      "type": "standard",
      "title": "1st try",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry. I didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589391843650",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "conditions": "$retryCounter < $maxTries",
      "dialog_node": "node_2_1589391843658"
    },
    {
      "type": "standard",
      "title": "No - Good bye",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589428576947",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1556742815467"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1589428576956"
    },
    {
      "type": "standard",
      "title": "standard delivery",
      "output": {},
      "parent": "node_1_1589431469478",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_25_1589275033796"
      },
      "conditions": "@delivery_type:standard ||   (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1589431469488"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_4_1606303509068",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "true",
      "dialog_node": "node_2_1589445623658",
      "previous_sibling": "node_2_1606913067532"
    },
    {
      "type": "standard",
      "title": "No",
      "parent": "node_6_1589459152125",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1589475954222"
      },
      "conditions": "@no",
      "dialog_node": "node_2_1589460529909",
      "previous_sibling": "node_1_1589459289804"
    },
    {
      "type": "standard",
      "title": "Delivery Confirmation Messages",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Please wait while I work on your request.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_7_1589412157955",
      "context": {
        "vgwConversationResponseTimeout": 25000
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "false",
      "dialog_node": "node_2_1589475954222",
      "previous_sibling": "node_4_1594992646094"
    },
    {
      "type": "standard",
      "title": "No  - Customer Identication",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589550998895",
      "context": {
        "makePayment": "one-time payment"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556050145112"
      },
      "conditions": "@no || @role:policyowner || @role:(premium payor) ||       (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1589550998900",
      "previous_sibling": "node_3_1589550998900"
    },
    {
      "type": "standard",
      "title": "Fax Number - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_9_1589560826369",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1555355230304"
      },
      "conditions": "#fax_number",
      "dialog_node": "node_2_1589560797529",
      "previous_sibling": "node_1_1589560750767"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_2_1606287850796",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "true",
      "dialog_node": "node_2_1589570535040",
      "previous_sibling": "node_1_1606912756894"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589888185679",
      "context": {
        "action": {
          "info": {
            "endConversation": true
          },
          "route": "OPT_OUT",
          "method": "transferToAgent"
        },
        "transferred": true
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_2_1589888185689",
      "previous_sibling": "node_3_1606741007443"
    },
    {
      "type": "standard",
      "title": "Death Benefit",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "As of (MMDDYYYY -Current Date), you have a death benefit of ($ -Face Amount)."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1591101651947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@call_reason_type:(death benefit) ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1590048783906"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Please tell me, what form do you need today. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": true,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1590061394509",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_10_1590061520518"
      },
      "conditions": "true",
      "dialog_node": "node_2_1590061394526"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the Insured's date of birth.\"\n:\n\"Starting with the month, please say the Insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_1_1590406942380",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_2_1590406942385"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_586_1590399193955",
      "context": {
        "authStatus": {
          "streetAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_2_1590577589453",
      "previous_sibling": "node_1_1590576885940"
    },
    {
      "type": "standard",
      "title": "Next on success - owner flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_54_1590415836020",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590406908895"
      },
      "conditions": "false",
      "dialog_node": "node_2_1590579307983",
      "previous_sibling": "node_86_1590416125193"
    },
    {
      "type": "standard",
      "title": "1.2. Company - Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_74_1590580615244",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_2_1590585843907",
      "previous_sibling": "node_75_1590580615250"
    },
    {
      "type": "standard",
      "title": "Transfer to Live CSR",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1589813093107",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_2_1590681303963"
    },
    {
      "type": "standard",
      "title": "SSN already entered",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590760175721",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591009799116"
      },
      "conditions": "$ownerSsn9Valid == true",
      "dialog_node": "node_2_1590760175726"
    },
    {
      "type": "standard",
      "title": "1. Trust - Collect Insured SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591009799109",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_2_1591009799116"
    },
    {
      "type": "standard",
      "title": "1. Payor - Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_2_1591012613381"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the insured's date of birth.\"\n:\n\"Starting with the month, please say the insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_1_1591015619687",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_2_1591015619693"
    },
    {
      "type": "folder",
      "title": "Auth Flow - Servicing Agent - NOT USED",
      "parent": "node_1_1559335045836",
      "conditions": "false",
      "dialog_node": "node_2_1591026800356",
      "previous_sibling": "node_3_1591015533769"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_2_1590048783906",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_2_1591102188051"
    },
    {
      "type": "standard",
      "title": "Anything else - evaluate conditions",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591101651947",
      "context": {},
      "conditions": "anything_else",
      "dialog_node": "node_2_1591102535656",
      "previous_sibling": "node_6_1590048783906"
    },
    {
      "type": "standard",
      "title": "Input Owner SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of the owner's social security number.\"\n:\n\"What is the last 4 digits of the owner’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_1_1591268884327",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_2_1591268884334"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_81_1590580615250",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_76_1590580615250"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_2_1592225131845",
      "previous_sibling": "node_83_1590580615250"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1591269802094",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591269802093"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_2_1592302028422",
      "previous_sibling": "node_18_1591269802094"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1592510759272",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1592510759300"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership Form: Check for \"Payor\" role.",
      "output": {},
      "parent": "node_1_1592586667901",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "node_2_1592586667911"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Products:  PTD today or a future date (Play Message)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "We last received a premium payment on [PREMIUM_RECEIVED_DATE], in the amount of [PREMIUM_RECEIVED_AMOUNT]  <break time='200ms'></break> Your [MODE] premium in the amount of  [PX_AMOUNT] <break time='200ms'></break> is  due on  [PX_DUE_DATE] <break time='200ms'></break> <prosody rate='8%'> To hear that again, say repeat.  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1604681399172",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "billing",
        "transactionType": "",
        "pendingTransaction": false,
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$futurePtd == true",
      "dialog_node": "node_2_1592952149485",
      "previous_sibling": "node_4_1604517445422"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Products, PTD is in the future: Jump to \"Authenticated Further Assistance\"",
      "output": {},
      "parent": "node_2_1592952149485",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1601920780636"
      },
      "conditions": "true",
      "dialog_node": "node_2_1592952648660",
      "previous_sibling": "node_1_1601310783761"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products: PTD is in the future or less than 30 days past due",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1604675096141",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ptdCurrent == true",
      "dialog_node": "node_2_1592957857356"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership Form: Play Message, Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1594691118067",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1594691118081"
    },
    {
      "type": "standard",
      "title": "Yes, phone number was already provided.  DigiCSR will not reask.",
      "parent": "node_4_1594992646094",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1589475954222"
      },
      "conditions": "$phoneNumber == true",
      "dialog_node": "node_2_1594992515150"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1595345179069",
      "context": {
        "optOut": true,
        "finalState": "O",
        "vgwPostResponseTimeoutCount": 7000
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1595345179088"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Products:  Jump to \"Transfer to live CSR\"",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1596132848315",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_2_1596132848327"
    },
    {
      "type": "standard",
      "title": "Jump to Add call notes",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          }
        ]
      },
      "parent": "node_1_1593193068105",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1606741007443"
      },
      "conditions": "true",
      "dialog_node": "node_2_1597348409486",
      "previous_sibling": "node_66_1601666883784"
    },
    {
      "type": "standard",
      "title": "Yes - reprompt",
      "output": {
        "generic": []
      },
      "parent": "node_2_1556288584201",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1556669739798"
      },
      "conditions": "@yes",
      "dialog_node": "node_2_1600853801826",
      "previous_sibling": "node_1_1580493738428"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path - Billing, Fixed Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1601310783761",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1601310783766"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_26_1602663417687",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1559265922539"
      },
      "conditions": "#repeat",
      "dialog_node": "node_2_1601473123430",
      "previous_sibling": "node_28_1602663417701"
    },
    {
      "type": "standard",
      "title": "Set Request for Claims to Complete ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_15_1578343769350",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "claims"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_16_1578343769350"
      },
      "conditions": "true",
      "dialog_node": "node_2_1601658596823"
    },
    {
      "type": "standard",
      "title": "Some Other Role",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "role": "otherRole"
      },
      "conditions": "@role:(other role)",
      "dialog_node": "node_2_1602228945623",
      "previous_sibling": "node_12_1574456358938"
    },
    {
      "type": "standard",
      "title": "Policy Owner",
      "parent": "node_2_1602661903313",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1574456243857"
      },
      "conditions": "@role:policyowner",
      "dialog_node": "node_2_1602248141667"
    },
    {
      "type": "folder",
      "title": "Other Roles",
      "parent": "node_9_1559266384280_1",
      "conditions": "true",
      "dialog_node": "node_2_1602661903313",
      "previous_sibling": "node_11_1602658849427"
    },
    {
      "type": "standard",
      "title": "Continue Conversation",
      "parent": "node_5_1603212550751",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1592497465455"
      },
      "conditions": "true",
      "dialog_node": "node_2_1603213706688"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603729107875",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1603729107879"
    },
    {
      "type": "standard",
      "title": "Letter Received",
      "output": {
        "generic": []
      },
      "parent": "node_1_1555354306104",
      "context": {
        "callReason": true,
        "transactionType": "letter"
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#letter_received",
      "dialog_node": "node_2_1603793715648",
      "previous_sibling": "node_9_1606287393915"
    },
    {
      "type": "standard",
      "title": "Anything else - authenticated Live CSR",
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "anything_else",
      "dialog_node": "node_2_1603800629022",
      "previous_sibling": "node_7_1589412157955"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603827204521",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1603827204554"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1604388150181",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_2_1604388150183"
    },
    {
      "type": "standard",
      "title": "API call - Mail address complete",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589570535025",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "mailingAddress"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_2_1606287850796"
    },
    {
      "type": "standard",
      "title": "API call - Mail address complete",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1589447115313",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "mailingAddress"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_2_1606367434331"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership form ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to change the ownership, is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "transfer_of_ownership"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "(#forms &&  @formType:(transfer of ownership form)) || #ownership_change",
      "dialog_node": "node_2_1606369660093",
      "previous_sibling": "node_8_1606313710328"
    },
    {
      "type": "standard",
      "title": "Form Request Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to receive a form.  Is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": "()",
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#forms",
      "dialog_node": "node_2_1606370314698",
      "previous_sibling": "node_3_1606370407064"
    },
    {
      "type": "standard",
      "title": "w9 form - Redirect ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "w9"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#forms && @formType:(w9 form)",
      "dialog_node": "node_2_1606370522049",
      "previous_sibling": "node_3_1606373436509"
    },
    {
      "type": "standard",
      "title": "Name or Address Change form",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> It sounds like you want a change of name and address form.  Is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "name_change"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "(#forms &&  @formType:(name and address change form)) || #address_change || #name_change",
      "dialog_node": "node_2_1606373127436",
      "previous_sibling": "node_10_1606372827226"
    },
    {
      "type": "standard",
      "title": "Nonfunctional Requests End Call Processing",
      "parent": "node_5_1606388379258",
      "conditions": "true",
      "dialog_node": "node_2_1606388507377",
      "previous_sibling": "node_1_1606388495133"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'> The more you say the better. For example, you can say, I need to update my beneficiary!  Or, I need to hear values! <break time='350ms'></break>  Please tell me why your calling today.   </prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "deleted_variable1": "<? context.remove('role') ?>",
        "deleted_variable2": "<? context.remove('policyNumberValid') ?>",
        "vgwActionSequence": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_8_1606388289693"
      },
      "conditions": "false",
      "dialog_node": "node_2_1606390065834",
      "previous_sibling": "node_1_1606387038107"
    },
    {
      "type": "standard",
      "title": "Transaction Type - Values",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "values"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$transactionType == \"values\"",
      "dialog_node": "node_2_1606458547860",
      "previous_sibling": "node_5_1606458224102"
    },
    {
      "type": "standard",
      "title": "Self Service Eligible",
      "parent": "node_10_1589304475474",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1595448860582"
      },
      "conditions": "$selfServiceEligible == true",
      "dialog_node": "node_2_1606720480024"
    },
    {
      "type": "standard",
      "title": "Not Eligible",
      "parent": "node_10_1589304475474",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_2_1606720544810",
      "previous_sibling": "node_2_1606720480024"
    },
    {
      "type": "standard",
      "title": "Call reason - Timeout Warning",
      "output": {
        "generic": []
      },
      "parent": "node_1_1606746868481",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1576786662607"
      },
      "conditions": "$timeoutWarning == true",
      "dialog_node": "node_2_1606746868484"
    },
    {
      "type": "standard",
      "title": "Not Authenticated and Call reason already asked",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1589893073742",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$authenticated == false && $callReasonAsked == true",
      "dialog_node": "node_2_1606828456649",
      "previous_sibling": "node_7_1606747871421"
    },
    {
      "type": "standard",
      "title": "Customer Service - goto Auth check",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1606303509068",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_2_1606913067532",
      "previous_sibling": "node_3_1589445623658"
    },
    {
      "type": "standard",
      "title": "Role Identification - Input Prompt",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1595448860582"
      },
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_22_1590085182953",
      "previous_sibling": "node_1_1555354306104"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_13_1590693378598",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1590693378598"
      },
      "conditions": "false",
      "dialog_node": "node_22_1590693378598",
      "previous_sibling": "node_19_1590693378598"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_13_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591012613381"
      },
      "conditions": "false",
      "dialog_node": "node_22_1591012613381",
      "previous_sibling": "node_19_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect agent id",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_12_1591015773199",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1591015935158"
      },
      "conditions": "false",
      "dialog_node": "node_22_1591015773204",
      "previous_sibling": "node_21_1591015773204"
    },
    {
      "type": "standard",
      "title": "Input street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of your street address. \"\n:\n\"What is the numerical portion of the owner's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_21_1591270076785",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_22_1591270076790"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_133_1591027994400",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_128_1591027994400"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_22_1592306142301",
      "previous_sibling": "node_135_1591027994400"
    },
    {
      "type": "standard",
      "title": "REPEAT:  Draft Authorization Form:  Play Message",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1592505251728",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1592505251728"
      },
      "conditions": "#repeat",
      "dialog_node": "node_22_1593116076293"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_21_1600460689470",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_22_1600460689483"
    },
    {
      "type": "folder",
      "title": "Other Roles",
      "parent": "node_8_1559265922539",
      "conditions": "true",
      "dialog_node": "node_22_1602663356082",
      "previous_sibling": "node_13_1559266652039"
    },
    {
      "type": "standard",
      "title": "Role Detected - Agent Assistant ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1590085182953",
      "context": {
        "role": "agent assistant"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1559266644551"
      },
      "conditions": "@role:(agent assistant)",
      "dialog_node": "node_23_1590085182962",
      "previous_sibling": "node_27_1590085182962"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_13_1590693378598",
      "context": {
        "authStatus": {
          "agentAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_23_1590693378598",
      "previous_sibling": "node_22_1590693378598"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Insured DOB (alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_13_1591012613381",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "ownerSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1591012613381"
      },
      "conditions": "false",
      "dialog_node": "node_23_1591012613381",
      "previous_sibling": "node_22_1591012613381"
    },
    {
      "type": "standard",
      "title": "3. Agent/Assistant - Collect Agent Id",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_23_1591015935158",
      "previous_sibling": "node_35_1591023058883"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_22_1591270076790",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_26_1591270076790"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_23_1591270076790"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_89_1591027451464",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_84_1591027451464"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_23_1592306167302",
      "previous_sibling": "node_91_1591027451464"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_21_1600460689470",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_23_1600460689483",
      "previous_sibling": "node_22_1600460689483"
    },
    {
      "type": "standard",
      "title": "Policy Owner",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1602663356082",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1574456243857"
      },
      "conditions": "@role:policyowner",
      "dialog_node": "node_23_1602663356093"
    },
    {
      "type": "standard",
      "title": "Client ID Found - Confirm Role - NEW",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> \n\tPlease say if you are the owner, premium payor, or Prudential Employee. \n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "input.text == \"VALID_SSN\"",
      "digress_in": "does_not_return",
      "dialog_node": "node_24_1556230123945",
      "previous_sibling": "node_2_1555355201520_1"
    },
    {
      "type": "standard",
      "title": "3.3. Agent/Assistant - Collect agent Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_24_1590693378598",
      "previous_sibling": "node_13_1590693378598"
    },
    {
      "type": "standard",
      "title": "2. Trust - Collect trust TIN4",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591009799109",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_24_1591009799116",
      "previous_sibling": "node_2_1591009799116"
    },
    {
      "type": "standard",
      "title": "3. Payor - Collect Insured DOB (Alternate Auth)",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_24_1591012613381",
      "previous_sibling": "node_13_1591012613381"
    },
    {
      "type": "standard",
      "title": "Input Agent Id",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"May I have the Agent’s ID?\"\n:\n\"May I have the Agent’s ID?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $AGENTID_VG_CONFIG ?>"
      },
      "parent": "node_23_1591015935158",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "agentId"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentId"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_24_1591015935168"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_22_1591270076790",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1591270076790"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_24_1591270076790",
      "previous_sibling": "node_23_1591270076790"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_100_1591027550092",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_95_1591027550092"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_24_1592306195195",
      "previous_sibling": "node_102_1591027550093"
    },
    {
      "type": "standard",
      "title": "Repeat Menu ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I can fax or mail the form to the address we have on record.  Which do you prefer?  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_21_1600460689470",
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "#repeat || @repeat",
      "dialog_node": "node_24_1600460689483",
      "previous_sibling": "node_23_1600460689483"
    },
    {
      "type": "standard",
      "title": "Some Other Role",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1602663356082",
      "context": {
        "role": "otherRole"
      },
      "conditions": "@role:(other role)",
      "dialog_node": "node_24_1602663356093",
      "previous_sibling": "node_23_1602663356093"
    },
    {
      "type": "standard",
      "title": "General Correspondence Standard Delivery",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Please mail your correspondence to Wilton reassurance Life Company of NY..  PO Box. 3 0 5 1 5, Nashville, TN \n<break time='400ms'/> 3 7 2 3 0, dash.  5 0 1 5."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1555361256167",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@delivery_type:standard ||      $delivery_type == \"standard\"",
      "dialog_node": "node_25_1589275033796"
    },
    {
      "type": "standard",
      "title": "Input agent Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_24_1590693378598",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_25_1590693378598"
    },
    {
      "type": "standard",
      "title": "Input trust TIN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of Trust’s Tax Identification Number\"\n:\n\"What is the last 4 digits of the Trust’s tax ID number\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_24_1591009799116",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_25_1591009799116"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the Insured's date of birth.\"\n:\n\"Starting with the month, please say the Insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_24_1591012613381",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_25_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_24_1591015935168",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_29_1591015935168"
      },
      "conditions": "input.text == \"VALID_AGENT_ID_FORMAT\"",
      "dialog_node": "node_25_1591015935168"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1591270076790",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1591270076790"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_25_1591270076790",
      "previous_sibling": "node_24_1591270076790"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_77_1591026800363",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_72_1591026800363"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_25_1592306225191",
      "previous_sibling": "node_79_1591026800363"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior:  Provide website details (Owner)",
      "parent": "node_1_1600192949921",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat || @repeat",
      "dialog_node": "node_25_1600460747252"
    },
    {
      "type": "standard",
      "title": "Customer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1602663356082",
      "metadata": {},
      "conditions": "(@role:(not agent) || @role:trustee) && !#customer_service",
      "dialog_node": "node_25_1602663356093",
      "previous_sibling": "node_24_1602663356093"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_25_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1590693378598"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_26_1590693378598"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_25_1591009799116",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1591009799116"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_26_1591009799116"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_25_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1591012613381"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_26_1591012613381"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_24_1591015935168",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1591015935168"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_26_1591015935168",
      "previous_sibling": "node_25_1591015935168"
    },
    {
      "type": "standard",
      "title": "API call to validate address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_21_1591270076785",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_26_1591270076790",
      "previous_sibling": "node_22_1591270076790"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1600460747252",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_26_1600460747260"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_8_1559265922539",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_26_1602663417687",
      "previous_sibling": "node_14_1559266654496"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_1_1603138045898",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_26_1605699359014",
      "previous_sibling": "node_6_1603138140019"
    },
    {
      "type": "standard",
      "title": "Role Detected- Agent ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1590085182953",
      "context": {
        "role": "agent"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1559265693354"
      },
      "conditions": "@role:agent",
      "dialog_node": "node_27_1590085182962",
      "previous_sibling": "node_35_1590085182962"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_25_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_36_1590693378598"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_27_1590693378598",
      "previous_sibling": "node_26_1590693378598"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_25_1591009799116",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591009799116"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_27_1591009799116",
      "previous_sibling": "node_26_1591009799116"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_25_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591012613381"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_27_1591012613381",
      "previous_sibling": "node_26_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1591015935168",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1591015935168"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_27_1591015935168",
      "previous_sibling": "node_26_1591015935168"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_26_1591270076790",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_29_1591270076790"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_27_1591270076790"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1600460747252",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_27_1600460747260",
      "previous_sibling": "node_26_1600460747260"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1605699359014",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_27_1605699359016"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1590693378598",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_36_1590693378598"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_28_1590693378598",
      "previous_sibling": "node_27_1590693378598"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1591009799116",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591009799116"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_28_1591009799116",
      "previous_sibling": "node_27_1591009799116"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1591012613381",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_28_1591012613381",
      "previous_sibling": "node_27_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1591270076790",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1591270076790"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_28_1591270076790",
      "previous_sibling": "node_27_1591270076790"
    },
    {
      "type": "standard",
      "title": "Repeat Menu ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_25_1600460747252",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1600192949921"
      },
      "conditions": "#repeat || @repeat",
      "dialog_node": "node_28_1600460747260",
      "previous_sibling": "node_27_1600460747260"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1602663417687",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_28_1602663417701",
      "previous_sibling": "node_40_1602670586057"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1605699359014",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_28_1605699359016",
      "previous_sibling": "node_27_1605699359016"
    },
    {
      "type": "standard",
      "title": "Disambiguate Standard/Overnight",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Is this for standard delivery or overnight delivery?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_11_1589433562596",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "node_29_1589433562601",
      "previous_sibling": "node_16_1589433562601"
    },
    {
      "type": "standard",
      "title": "Persist - Policyowner after Agent prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Owner"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1590085182953",
      "context": {
        "role": "policyowner",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:policyowner",
      "dialog_node": "node_29_1590085182962",
      "previous_sibling": "node_23_1590085182962"
    },
    {
      "type": "standard",
      "title": "Yes - persist",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590583536450",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "authenticated": true,
        "companyAuthorized": true
      },
      "metadata": {},
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_29_1590584854367"
    },
    {
      "type": "standard",
      "title": "API call to validate agent Id",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_AGENT_ID",
                "value": {
                  "input": {
                    "text": "VALID_AGENT_ID"
                  }
                }
              },
              {
                "label": "INVALID_AGENT_ID",
                "value": {
                  "input": {
                    "text": "INVALID_AGENT_ID"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_23_1591015935158",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentId"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_29_1591015935168",
      "previous_sibling": "node_24_1591015935168"
    },
    {
      "type": "standard",
      "title": "Next on success - ",
      "output": {
        "generic": []
      },
      "parent": "node_21_1591270076785",
      "conditions": "false",
      "dialog_node": "node_29_1591270076790",
      "previous_sibling": "node_26_1591270076790"
    },
    {
      "type": "standard",
      "title": "Repeat Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1605699359014",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1603138045898"
      },
      "conditions": "#repeat || @repeat",
      "dialog_node": "node_29_1605699359016",
      "previous_sibling": "node_28_1605699359016"
    },
    {
      "type": "standard",
      "title": "Standard delivery",
      "output": {
        "generic": []
      },
      "parent": "node_29_1589433562601",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1589433562600"
      },
      "conditions": "@delivery_type:standard ||   (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_30_1589433562601"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_29_1590085182962",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556050145112"
      },
      "conditions": "true",
      "dialog_node": "node_30_1590085182962"
    },
    {
      "type": "standard",
      "title": "Input policy number",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"Please say the policy number.\"\n:\n$input_prompt \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $POLICYNO_VG_CONFIG ?>"
      },
      "parent": "node_2_1556050145112",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "policyNumber"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "policyNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_30_1590386357066"
    },
    {
      "type": "standard",
      "title": "Persist Continue - auth done",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_29_1590584854367",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590763174183"
      },
      "conditions": "true",
      "dialog_node": "node_30_1590584854373"
    },
    {
      "type": "standard",
      "title": "API call to validate agent zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_24_1590693378598",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_30_1590693378598",
      "previous_sibling": "node_25_1590693378598"
    },
    {
      "type": "standard",
      "title": "API call to validate trust TIN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_24_1591009799116",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_30_1591009799116",
      "previous_sibling": "node_25_1591009799116"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_24_1591012613381",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_30_1591012613381",
      "previous_sibling": "node_25_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid Agent Id - Success",
      "output": {
        "generic": []
      },
      "parent": "node_29_1591015935168",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_32_1591015935168"
      },
      "conditions": "input.text == \"VALID_AGENT_ID\"",
      "dialog_node": "node_30_1591015935168"
    },
    {
      "type": "standard",
      "title": "Next on failure - ",
      "output": {
        "generic": []
      },
      "parent": "node_21_1591270076785",
      "context": {
        "authStatus": {
          "streetAddressValid": "U"
        }
      },
      "conditions": "false",
      "dialog_node": "node_30_1591270076790",
      "previous_sibling": "node_29_1591270076790"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_1_1563500798686_1",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_30_1602663539106",
      "previous_sibling": "node_2_1563500953745_1"
    },
    {
      "type": "standard",
      "title": "Overnight delivery",
      "output": {
        "generic": []
      },
      "parent": "node_29_1589433562601",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_16_1589433562601"
      },
      "conditions": "@delivery_type:overnight || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_31_1589433562601",
      "previous_sibling": "node_30_1589433562601"
    },
    {
      "type": "standard",
      "title": "Persist - Premium Payor after Agent prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Payor"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1590085182953",
      "context": {
        "role": "payor",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(premium payor)",
      "dialog_node": "node_31_1590085182962",
      "previous_sibling": "node_29_1590085182962"
    },
    {
      "type": "standard",
      "title": "Valid Policy Format - confirm",
      "output": {
        "generic": []
      },
      "parent": "node_30_1590386357066",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_64_1590388169702"
      },
      "conditions": "input.text == \"VALID_POLICYNUMBER_FORMAT\"",
      "dialog_node": "node_31_1590386357076"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_30_1590693378598",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1590693378598"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_31_1590693378598"
    },
    {
      "type": "standard",
      "title": "Valid TIN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_30_1591009799116",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1591009799116"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_31_1591009799116"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_30_1591012613381",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1591012613381"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_31_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_29_1591015935168",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_33_1591015935168"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_31_1591015935168",
      "previous_sibling": "node_30_1591015935168"
    },
    {
      "type": "standard",
      "title": "Collect owner Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591155506648",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_31_1591270116623",
      "previous_sibling": "node_21_1591270076785"
    },
    {
      "type": "standard",
      "title": "2. Mailing Address",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "question": null,
        "callReason": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#mailing_address || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1555355225070",
      "previous_sibling": "node_5_1555355230304"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1559319878910",
      "context": {
        "role": "agent"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1559265693354"
      },
      "conditions": "@role:agent",
      "dialog_node": "node_3_1559320297443"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1560536717615",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_3_1560536717618",
      "previous_sibling": "node_3_1602664776461"
    },
    {
      "type": "standard",
      "title": "Welcome - Initialize & Persist conversationId",
      "output": {
        "generic": []
      },
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "conversationId"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "welcome",
      "dialog_node": "node_3_1561666536036"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1562765850934",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1559266487355"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_3_1562765850937",
      "previous_sibling": "node_2_1562765850937"
    },
    {
      "type": "standard",
      "title": "Anything else",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1563500798686",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556050145112"
      },
      "conditions": "true",
      "dialog_node": "node_3_1563500958095",
      "previous_sibling": "node_2_1563500953745"
    },
    {
      "type": "standard",
      "title": "Anything else - continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1563500798686_1",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_3_1563500958095_1",
      "previous_sibling": "node_30_1602663539106"
    },
    {
      "type": "standard",
      "title": "Timeout - Persist Data",
      "output": {
        "generic": []
      },
      "parent": "node_9_1576786662607",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "finalState",
        "finalState": "TO"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_3_1578420993906",
      "previous_sibling": "node_10_1576787013011"
    },
    {
      "type": "standard",
      "title": "Premium Payment Address",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589292336750",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1555355836587"
      },
      "conditions": "@mailing_address_type:premium || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589292416511"
    },
    {
      "type": "standard",
      "title": "Yes ",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589428576947",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589428576956",
      "previous_sibling": "node_2_1589428576956"
    },
    {
      "type": "standard",
      "title": "Overnight delivery",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589431469478",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_38_1589275164768"
      },
      "conditions": "@delivery_type:overnight || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589431469488",
      "previous_sibling": "node_2_1589431469488"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_4_1606303509068",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1589263815170"
      },
      "conditions": "@yes ||  (@touchtone:one && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_3_1589445623658"
    },
    {
      "type": "standard",
      "title": "Mail Option Recognized (Paul, what action is needed here?)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1589412157955",
      "context": {
        "question": "deliveryMethod",
        "deliveryMethod": "mail"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1594992646094"
      },
      "conditions": "$deliveryMethod == \"mail\" || @delivery_method:mail || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589457362375",
      "previous_sibling": "node_9_1589457357742"
    },
    {
      "type": "standard",
      "title": "No",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1589459289804",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589459673680"
    },
    {
      "type": "standard",
      "title": "4. Payments",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "question": null,
        "callReason": true
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#make_payment ||  (@touchtone:four && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589534554860",
      "previous_sibling": "node_4_1555355227863_1"
    },
    {
      "type": "standard",
      "title": "Yes Agent",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589550998895",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@yes ||             (@touchtone:one && input.text == @touchtone.literal) || @role:agent ||  @role:(agent assistant)",
      "dialog_node": "node_3_1589550998900"
    },
    {
      "type": "standard",
      "title": "Claims - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_9_1589560826369",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1555355227863"
      },
      "conditions": "#claims",
      "dialog_node": "node_3_1589560928951",
      "previous_sibling": "node_2_1589560797529"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_2_1606287850796",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1589263755473"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1589570535040"
    },
    {
      "type": "standard",
      "title": "Authentication Check",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "anything_else",
      "dialog_node": "node_3_1589893073742",
      "previous_sibling": "node_2_1606390065834"
    },
    {
      "type": "standard",
      "title": "vgwPostResponseTimeout",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589391970365",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589391843650"
      },
      "conditions": "input.text == \"vgwPostResponseTimeout\"",
      "dialog_node": "node_3_1590066122488",
      "previous_sibling": "node_9_1576786662607"
    },
    {
      "type": "standard",
      "title": "2. Individual - Collect Owner SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590414646214",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_3_1590399308639",
      "previous_sibling": "node_9_1590401650875"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_2_1590406942385",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1590577867834"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_3_1590406942385",
      "previous_sibling": "node_4_1590406942386"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590406942380",
      "context": {
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_3_1590577867834",
      "previous_sibling": "node_8_1590576676094"
    },
    {
      "type": "standard",
      "title": "Owner is Company",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590396609855",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ownerType == \"company\"",
      "dialog_node": "node_3_1590580251254",
      "previous_sibling": "node_10_1590414852604"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the Insured's date of birth.\"\n:\n\"Starting with the month, please say the Insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_2_1590585843907",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_3_1590585843913"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and Owner has SSN",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590760175721",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1591009799116"
      },
      "conditions": "$policyNumberValid == true && $ownerHasSsn == true",
      "dialog_node": "node_3_1590760175726",
      "previous_sibling": "node_2_1590760175726"
    },
    {
      "type": "standard",
      "title": "Input Insured SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of Insured's social security number.\"\n:\n\"What is the last 4 digits of the Insured’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_2_1591009799116",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_3_1591009799116"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the insured's date of birth.\"\n:\n\"Starting with the month, please say the insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_2_1591012613381",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_3_1591012613381"
    },
    {
      "type": "folder",
      "title": "Auth Flow - Agent/Agent Assistant",
      "parent": "node_1_1559335045836",
      "conditions": "false",
      "dialog_node": "node_3_1591015533769",
      "previous_sibling": "node_6_1591015308628"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591015619693",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1591015619693"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_3_1591015619693"
    },
    {
      "type": "standard",
      "title": "1.1. Servicing Agent - Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_3_1591026800363"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_13_1556228833790",
      "context": {
        "authStatus": {
          "ownerSsn9Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_3_1591099336007",
      "previous_sibling": "node_1_1591100417579"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591102188051",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1591102234106"
      },
      "conditions": "@no ||   (@touchtone:two && input.text == @touchtone.literal) || @vgTimeOut",
      "dialog_node": "node_3_1591102188059"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591268884334",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1591268884334"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_3_1591268884334"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1590585843913",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1590585843913"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_3_1592225238207",
      "previous_sibling": "node_10_1590585843913"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_26_1591270076790",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1591270076790"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_3_1592302151429",
      "previous_sibling": "node_28_1591270076790"
    },
    {
      "type": "standard",
      "title": "Draft Authorization Form:  Play Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> <break time='100ms'></break> A draft authorization form is required when starting a monthly, ore quarterly automatic bankdraft; the authorization form is also required when updating bank, ore account deetails for an existing draft.   <break time='550ms'></break>  To avoid delays in processing, please review all instructions located on the draft  authorization form.  Each request must include a blank <break time='175ms'></break> pre printed voided check, <break time='100ms'></break>  or a pre printed savings deposit slip. <break time='450ms'></break> Please note, policies in grace must be paid in full before submitting the draft authorization form. <break time='550ms'></break> To hear that again, please say repeat. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1592505251721",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "true",
      "dialog_node": "node_3_1592505251728"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1592510759272",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_3_1592510759300",
      "previous_sibling": "node_2_1592510759300"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership Form: Play Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<prosody rate='8%'> Will beneficiary designations also be changing? Please say yes, or press 1.  Say no, or press 2.  </prosody>\"\n:\n\"<prosody rate='8%'> When changing owners; adding ore changing Contingent owners, Ay transfer of ownership form is required. <break time='250ms'></break> To avoid a delay in processing, please read the important instructions located on the transfer of ownership Form.  <break time='250ms'></break> Will the beneficiary designations also be changing? </prosody>\"  \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1592586667901",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "node_3_1592586667911",
      "previous_sibling": "node_2_1592586667911"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Premium Products",
      "parent": "node_6_1592935820993",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$productType == \"Group Ordinary\" || $productType == \"Level term, Renewable term\" ||     $productType == \"Ordinary\" ||  $productType == \"Traditional\" ||     $productType == \"Whole Life\"",
      "dialog_node": "node_3_1592935915169"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products:  PTD is a future date (Play Message)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Flexible premium products must have sufficient value to cover the monthly deductions.  Making your planned periodic payments may not be sufficient to keep your coverage in force.  Please review the terms of your policy, as well as your Policyholder Statement each year to determine if an adjustment to your planned periodic premium is nesessary. <break time='300ms'></break>\n</prosody> We last received a premium payment on [PREMIUM_RECEIVED_DATE], in the amount of [PREMIUM_RECEIVED_AMOUNT]  <break time='200ms'></break> Your planned periodic premium is billed [MODE] in the amount of  [PX_AMOUNT] and is next due on  [PX_DUE_DATE]  <break time='200ms'></break><prosody rate='8%'> To hear that again, say repeat. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_2_1592957857356",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "billing",
        "transactionType": "",
        "pendingTransaction": false,
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$ptdCurrent == true",
      "dialog_node": "node_3_1592957857357",
      "previous_sibling": "node_5_1601921234575"
    },
    {
      "type": "standard",
      "title": "Transfer of Ownership Form: Play Message, Main Menu Rerout",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1594691118067",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_3_1594691118081",
      "previous_sibling": "node_2_1594691118081"
    },
    {
      "type": "standard",
      "title": "Main Menu Rerout (Play Values, Fixed Products)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1595345179069",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_3_1595345179088",
      "previous_sibling": "node_2_1595345179088"
    },
    {
      "type": "standard",
      "title": "Yes - reprompt",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1557512076649"
      },
      "conditions": "@yes",
      "dialog_node": "node_3_1600853900388",
      "previous_sibling": "node_1_1600852604163"
    },
    {
      "type": "standard",
      "title": "Main Menu Reroute - Billing, Fixed Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1601310783761",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_3_1601310783766",
      "previous_sibling": "node_2_1601310783766"
    },
    {
      "type": "standard",
      "title": "Set Request for Living Benefits",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1578343808129",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "livingBenefits"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_19_1578343808141"
      },
      "conditions": "true",
      "dialog_node": "node_3_1601658709965"
    },
    {
      "type": "standard",
      "title": "Jump to Authenticated Further Assistance",
      "parent": "node_4_1592926153057",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_3_1601669853097"
    },
    {
      "type": "standard",
      "title": "Continue Conversation to Delivery Options",
      "parent": "node_5_1601913687643",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1589412157955"
      },
      "conditions": "true",
      "dialog_node": "node_3_1601917377118"
    },
    {
      "type": "standard",
      "title": "Continue Conversation to Delivery Options",
      "output": {},
      "parent": "node_45_1601664678539",
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_2_1592952149485"
      },
      "conditions": "true",
      "dialog_node": "node_3_1601920780665"
    },
    {
      "type": "standard",
      "title": "Agent Representative",
      "output": {},
      "parent": "node_10_1559266487355_1",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1559265922539"
      },
      "conditions": "   @role:(agent representative)",
      "dialog_node": "node_3_1602507843297",
      "previous_sibling": "node_5_1602249024934"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_1_1560536717615",
      "conditions": "#customer_service ||   (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_3_1602664776461"
    },
    {
      "type": "standard",
      "title": "Option 2 (Make a one time payment)",
      "parent": "node_1_1603138045898",
      "context": {
        "input_prompt": "<prosody rate='8%'> You're interested in making a one time payment.  Allowing you to keep your current draftdate.  Is thatt right?  </prosody>",
        "sm_eft_option": "two",
        "reasonOverride": "Time Union Special EFT Mailing.  Caller wants to make a one time payment"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1604314464251"
      },
      "conditions": "@options:(option 2) || (@touchtone:two && input.text == @touchtone.literal) || #make_payment",
      "dialog_node": "node_3_1603138142995"
    },
    {
      "type": "standard",
      "title": "Main Menu Rerout ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603729107875",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_3_1603729107879",
      "previous_sibling": "node_2_1603729107879"
    },
    {
      "type": "standard",
      "title": "Main Menu Rerout ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603827204521",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_3_1603827204554",
      "previous_sibling": "node_2_1603827204554"
    },
    {
      "type": "standard",
      "title": "Agent - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "agent",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:agent",
      "dialog_node": "node_3_1603870080163",
      "previous_sibling": "node_2_1600853801826"
    },
    {
      "type": "standard",
      "title": "Yes - continue auth",
      "output": {
        "generic": []
      },
      "parent": "node_1_1603975739025",
      "context": {
        "letter_type": "none"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1603794012836"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1603975870326",
      "previous_sibling": "node_10_1605874001923"
    },
    {
      "type": "standard",
      "title": "Agent Assistant - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent Assistant"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "agent assistant",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(agent assistant)",
      "dialog_node": "node_3_1604388279497",
      "previous_sibling": "node_5_1603870370483"
    },
    {
      "type": "standard",
      "title": "Application for Change or Reinstatement - Redirect ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "change_or_reinstate"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#forms && @formType:(application for change or reinstatement)",
      "dialog_node": "node_3_1606370407064",
      "previous_sibling": "node_2_1606370522049"
    },
    {
      "type": "standard",
      "title": "Surrender form - Redirect ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "surr_request"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "(#forms &&  @formType:(surrender request form)) || #surrender_request",
      "dialog_node": "node_3_1606370576375",
      "previous_sibling": "node_2_1606369660093"
    },
    {
      "type": "standard",
      "title": "Agent Change form ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> It sounds like you want an agent change form.  Is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "agent_change"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#forms && @formType:(agent change form)",
      "dialog_node": "node_3_1606373436509",
      "previous_sibling": "node_5_1606373299250"
    },
    {
      "type": "standard",
      "title": "Persist Data",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1606388289693",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "reason",
        "main_utterances_list": "<? $main_utterances_list.append(input.text) ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_5_1555355230304"
      },
      "conditions": "input.text != \"vgwPostResponseTimeout\"",
      "dialog_node": "node_3_1606388681350",
      "previous_sibling": "node_5_1606388653839"
    },
    {
      "type": "standard",
      "title": "Transaction Type - Change Draft Date",
      "parent": "node_7_1599848191616",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$transactionType == \"change_draft_date\"",
      "dialog_node": "node_3_1606464959811",
      "previous_sibling": "node_1_1606462549252"
    },
    {
      "type": "folder",
      "title": "Call Closure",
      "conditions": "true",
      "dialog_node": "node_3_1606729245551",
      "previous_sibling": "node_5_1556655996383"
    },
    {
      "type": "standard",
      "title": "Add call notes",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_1_1589888185679",
      "context": {
        "action": {
          "route": "CALL_NOTE"
        }
      },
      "conditions": "$pendingTransaction != null",
      "dialog_node": "node_3_1606741007443"
    },
    {
      "type": "standard",
      "title": "Call reason - Payment Intent",
      "output": {
        "generic": []
      },
      "parent": "node_1_1606746868481",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#make_payment",
      "dialog_node": "node_3_1606746868484",
      "previous_sibling": "node_2_1606746868484"
    },
    {
      "type": "standard",
      "title": "Customer Service - goto Auth check",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1606367389387",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_3_1606913265673",
      "previous_sibling": "node_6_1589445695446"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_31_1590085182962",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556050145112"
      },
      "conditions": "true",
      "dialog_node": "node_32_1590085182962"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1590693378598",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_36_1590693378598"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_32_1590693378598",
      "previous_sibling": "node_31_1590693378598"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1591009799116",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591009799116"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_32_1591009799116",
      "previous_sibling": "node_31_1591009799116"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_34_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_32_1591012613381",
      "previous_sibling": "node_31_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_23_1591015935158",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_32_1591015935168",
      "previous_sibling": "node_29_1591015935168"
    },
    {
      "type": "standard",
      "title": "Input owner Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_31_1591270116623",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_32_1591270116628"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1602663539106",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_32_1602663539117",
      "previous_sibling": "node_4_1602794890131"
    },
    {
      "type": "standard",
      "title": "Yes Agent",
      "output": {
        "generic": []
      },
      "parent": "node_22_1590085182953",
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1559266384280"
      },
      "conditions": "@yes ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_33_1590085182962",
      "previous_sibling": "node_31_1590085182962"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_24_1590693378598",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_33_1590693378598",
      "previous_sibling": "node_30_1590693378598"
    },
    {
      "type": "standard",
      "title": "Next on success - Insured SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_24_1591009799116",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591009799116"
      },
      "conditions": "false",
      "dialog_node": "node_33_1591009799116",
      "previous_sibling": "node_30_1591009799116"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Last Payment Date",
      "output": {
        "generic": []
      },
      "parent": "node_24_1591012613381",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_47_1591012628281"
      },
      "conditions": "false",
      "dialog_node": "node_33_1591012613381",
      "previous_sibling": "node_30_1591012613381"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect agent address",
      "output": {
        "generic": []
      },
      "parent": "node_23_1591015935158",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1590693378598"
      },
      "conditions": "false",
      "dialog_node": "node_33_1591015935168",
      "previous_sibling": "node_32_1591015935168"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_32_1591270116628",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_36_1591270116628"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_33_1591270116628"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_17_1590415136089",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590577589453"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_34_1590415136090",
      "previous_sibling": "node_18_1590415136090"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Insured SSN4 (alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1591009799116",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "ownerSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_119_1590581781459"
      },
      "conditions": "false",
      "dialog_node": "node_34_1591009799116",
      "previous_sibling": "node_33_1591009799116"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_24_1591012613381",
      "context": {
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_34_1591012613381",
      "previous_sibling": "node_33_1591012613381"
    },
    {
      "type": "standard",
      "title": "3.1. Agent/Assistant - Collect Agent Id (Alternative Auth)",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_34_1591016704068",
      "previous_sibling": "node_23_1591015935158"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_32_1591270116628",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_40_1591270116628"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_34_1591270116628",
      "previous_sibling": "node_33_1591270116628"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_7_1602658148590",
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_34_1602670163446"
    },
    {
      "type": "standard",
      "title": "Not Agent",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_22_1590085182953",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556050145112"
      },
      "conditions": "@no ||  (@touchtone:two && input.text == @touchtone.literal) || @role:(not agent)",
      "dialog_node": "node_35_1590085182962",
      "previous_sibling": "response_6_1606392982613"
    },
    {
      "type": "standard",
      "title": "Agent Auth Flow complete - Auth Done",
      "output": {
        "generic": []
      },
      "parent": "node_1_1559335045836",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_35_1590995309629",
      "previous_sibling": "node_2_1591026800356"
    },
    {
      "type": "standard",
      "title": "Input Agent Id",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of the agent's social security number.\"\n:\n\"May I have the Agent’s ID?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $AGENTID_VG_CONFIG ?>"
      },
      "parent": "node_34_1591016704068",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "agentId"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentId"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_35_1591016704079"
    },
    {
      "type": "standard",
      "title": "2. Only Agent Assistant - Collect Agent SSN9",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591015533769",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_35_1591023058883",
      "previous_sibling": "node_12_1591015773199"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_32_1591270116628",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_40_1591270116628"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_35_1591270116628",
      "previous_sibling": "node_34_1591270116628"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_34_1602670163446",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1562765850937"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_35_1602670163463"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_24_1590693378598",
      "context": {
        "authStatus": {
          "agentZipValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_36_1590693378598",
      "previous_sibling": "node_33_1590693378598"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_35_1591016704079",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_40_1591016704079"
      },
      "conditions": "input.text == \"VALID_AGENT_ID_FORMAT\"",
      "dialog_node": "node_36_1591016704079"
    },
    {
      "type": "standard",
      "title": "Input Agent SSN9",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the agent's social security number.\"\n:\n\"What is the Agent’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN9_VG_CONFIG ?>"
      },
      "parent": "node_35_1591023058883",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentSsn9"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_36_1591023058889"
    },
    {
      "type": "standard",
      "title": "API call to validate owner zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_31_1591270116623",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_36_1591270116628",
      "previous_sibling": "node_32_1591270116628"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_34_1602670163446",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_36_1602670163463",
      "previous_sibling": "node_35_1602670163463"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_35_1591016704079",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_44_1591016704079"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_37_1591016704079",
      "previous_sibling": "node_36_1591016704079"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_36_1591023058889",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_41_1591023058889"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_37_1591023058889"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_36_1591270116628",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_39_1591270116628"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_37_1591270116628"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_18_1602662736832",
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_37_1602670292434"
    },
    {
      "type": "standard",
      "title": "General Correspondence Overnight Delivery ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Please mail your overnight correspondence to Insurance Services. To 100, Centerview Drive. Suite 100. Nashville, TN.  \n<break time='400ms'/> 3 7 2 1 4, dash. 3 4 3 9."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_18_1555361256167",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@delivery_type:overnight ||  $delivery_type == \"overnight\"",
      "dialog_node": "node_38_1589275164768",
      "previous_sibling": "node_25_1589275033796"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_35_1591016704079",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_44_1591016704079"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_38_1591016704079",
      "previous_sibling": "node_37_1591016704079"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_36_1591023058889",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_45_1591023058889"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_38_1591023058889",
      "previous_sibling": "node_37_1591023058889"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_36_1591270116628",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_40_1591270116628"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_38_1591270116628",
      "previous_sibling": "node_37_1591270116628"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_37_1602670292434",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1577197142681"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_38_1602670292452"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_36_1591023058889",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_45_1591023058889"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_39_1591023058889",
      "previous_sibling": "node_38_1591023058889"
    },
    {
      "type": "standard",
      "title": "Next on success - ",
      "output": {
        "generic": []
      },
      "parent": "node_31_1591270116623",
      "conditions": "false",
      "dialog_node": "node_39_1591270116628",
      "previous_sibling": "node_36_1591270116628"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_37_1602670292434",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_39_1602670292452",
      "previous_sibling": "node_38_1602670292452"
    },
    {
      "type": "standard",
      "title": "API call to validate agent Id",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_AGENT_ID",
                "value": {
                  "input": {
                    "text": "VALID_AGENT_ID"
                  }
                }
              },
              {
                "label": "INVALID_AGENT_ID",
                "value": {
                  "input": {
                    "text": "INVALID_AGENT_ID"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_34_1591016704068",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentId"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_40_1591016704079",
      "previous_sibling": "node_35_1591016704079"
    },
    {
      "type": "standard",
      "title": "Next on failure - ",
      "output": {
        "generic": []
      },
      "parent": "node_31_1591270116623",
      "context": {
        "authStatus": {
          "zipCodeValid": "U"
        }
      },
      "conditions": "false",
      "dialog_node": "node_40_1591270116628",
      "previous_sibling": "node_39_1591270116628"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_26_1602663417687",
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_40_1602670586057"
    },
    {
      "type": "standard",
      "title": "Valid Agent Id - Success",
      "output": {
        "generic": []
      },
      "parent": "node_40_1591016704079",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_43_1591016704079"
      },
      "conditions": "input.text == \"VALID_AGENT_ID\"",
      "dialog_node": "node_41_1591016704079"
    },
    {
      "type": "standard",
      "title": "API call to validate agent SSN9",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_35_1591023058883",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentSsn9"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_41_1591023058889",
      "previous_sibling": "node_36_1591023058889"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_40_1602670586057",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1577197346395"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_41_1602670586075"
    },
    {
      "type": "standard",
      "title": "3. Claims - NOT USED",
      "output": {
        "generic": []
      },
      "parent": "node_1_1555354306104",
      "context": {
        "question": null,
        "callReason": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#claims || (@touchtone:three && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1555355227863",
      "previous_sibling": "node_3_1555355225070"
    },
    {
      "type": "standard",
      "title": "3. Claims",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#claims || #death_claims || #living_benefits || @deceased ||    (@touchtone:three && input.text == @touchtone.literal) || @requestType:(death claim)",
      "dialog_node": "node_4_1555355227863_1",
      "previous_sibling": "node_4_1555355227863"
    },
    {
      "type": "standard",
      "title": "Persist - Policyowner",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Owner"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "policyowner",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:policyowner || (@touchtone:one && input.text == @touchtone.literal) ||   $role == \"policyowner\"",
      "dialog_node": "node_4_1556226486649"
    },
    {
      "type": "standard",
      "title": "Check retries",
      "output": {},
      "parent": "node_24_1556230123945",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_4_1557512076608",
      "previous_sibling": "node_4_1557758786889"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_24_1556230123945",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1557758786889",
      "previous_sibling": "node_3_1604388279497"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1559319878910",
      "context": {
        "role": "agent assistant"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1559266644551"
      },
      "conditions": "@role:(agent assistant)",
      "dialog_node": "node_4_1559320329617",
      "previous_sibling": "node_3_1559320297443"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1562765850934",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1562765850937"
      },
      "conditions": "true",
      "dialog_node": "node_4_1562765850937",
      "previous_sibling": "node_3_1562765850937"
    },
    {
      "type": "standard",
      "title": "Beneficiary Change Form: Play Message ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> The change of beneficiary form is required when updating beneficiaries.   To avoid a delay in processing, please read the important instructions located on the change of beneficiary form.  To hear that again, say repeat. \n </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1589412024149",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "true",
      "dialog_node": "node_4_1589414474113",
      "previous_sibling": "node_5_1589414407829"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589391970365",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1589430461786",
      "previous_sibling": "node_9_1589560826369"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              },
              {
                "text": "Did you need that repeated?"
              },
              {
                "text": "Want me to repeat that?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_25_1589275033796",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1589445695435"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_8_1589552093861",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1589552221722"
    },
    {
      "type": "standard",
      "title": "Yes (Authenticated Further Assistance)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>  In a few words please tell me, what else can I help with on this policy.  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_8_1589477312881",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "transactionType": ""
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_8_1606388289693"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1590013713107",
      "previous_sibling": "node_6_1590013721727"
    },
    {
      "type": "standard",
      "title": "PAC form recognized",
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "bank_authorization"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1592505251721"
      },
      "conditions": "$formType.contains(\"bank_authorization\") || @formType:(pre authorization check plan form) || #pac_request",
      "dialog_node": "node_4_1590061523562",
      "previous_sibling": "node_10_1590061520518"
    },
    {
      "type": "standard",
      "title": "Values:  API call to get values",
      "parent": "node_9_1589412196928",
      "context": {
        "action": {
          "route": "API",
          "method": "values"
        },
        "question": "values"
      },
      "conditions": "true",
      "dialog_node": "node_4_1590062927463",
      "previous_sibling": "node_6_1590063383287"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Insured DOB (alternate)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1590399308639",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "ownerSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590406942380"
      },
      "conditions": "false",
      "dialog_node": "node_4_1590399501282",
      "previous_sibling": "node_1_1590578744992"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_623_1590399352302",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1590399501282"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_4_1590400551499",
      "previous_sibling": "node_624_1590399352308"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_2_1590406942385",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1590406942386"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_4_1590406942386"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_9_1590401650875",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590406908895"
      },
      "conditions": "false",
      "dialog_node": "node_4_1590578014786",
      "previous_sibling": "node_671_1590403531494"
    },
    {
      "type": "standard",
      "title": "SSN already entered",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590580251254",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_75_1590580615250"
      },
      "conditions": "$ownerSsn9Valid == true",
      "dialog_node": "node_4_1590580251263"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590585843913",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1590585843913"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_4_1590585843913"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and SSN missing",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590760175721",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_119_1590581781459"
      },
      "conditions": "anything_else",
      "dialog_node": "node_4_1590760175726",
      "previous_sibling": "node_3_1590760175726"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591009799116",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1591009799116"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_4_1591009799116"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1591012613381"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_4_1591012613381"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591015619693",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1591015619693"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_4_1591015619693",
      "previous_sibling": "node_3_1591015619693"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the insured's date of birth.\"\n:\n\"Starting with the month, please say the insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_3_1591026800363",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_4_1591026800363"
    },
    {
      "type": "standard",
      "title": "Yes / Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591102188051",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590048783906"
      },
      "conditions": "@yes || #repeat ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1591102188059",
      "previous_sibling": "node_3_1591102188059"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591268884334",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1591268884334"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_4_1591268884334",
      "previous_sibling": "node_3_1591268884334"
    },
    {
      "type": "standard",
      "title": "Invalid TIN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_114_1590581526121",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_109_1590581526121"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_4_1592225361724",
      "previous_sibling": "node_116_1590581526121"
    },
    {
      "type": "standard",
      "title": "Zip Code Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_36_1591270116628",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_32_1591270116628"
      },
      "conditions": "input.text == \"INVALID_ZIP\"",
      "dialog_node": "node_4_1592302510178",
      "previous_sibling": "node_38_1591270116628"
    },
    {
      "type": "standard",
      "title": "Repeat Menu ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " <prosody rate='8%'> Most forms can be faxed or mailed to the address of record.   Please tell me, what form is needed today. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1592510759272",
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_10_1590061520518"
      },
      "conditions": "#repeat || @repeat",
      "dialog_node": "node_4_1592510759300",
      "previous_sibling": "node_3_1592510759300"
    },
    {
      "type": "standard",
      "title": "No (Beneficiary Designations Changing)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Thank You. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_3_1592586667911",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1589412157955"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1592587122446",
      "previous_sibling": "node_1_1594691118067"
    },
    {
      "type": "standard",
      "title": "Mail Delivery Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Ok.  The request has been processed and your form will be mailed to the address we have on record within the next 7, to 15 business dais. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActForceNoInputTurn"
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_56_1601666099415",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "pendingTransaction": false
      },
      "conditions": "true",
      "dialog_node": "node_4_1592926153057"
    },
    {
      "type": "standard",
      "title": "API to Generate Call Note (Not Complete)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1590013721727",
      "context": {
        "action": {
          "route": "CALL_NOTE"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "true",
      "dialog_node": "node_4_1592937484144"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products, PTD is a future date: Jump to \"Authenticated Further Assistance\"",
      "output": {},
      "parent": "node_3_1592957857357",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1601921234550"
      },
      "conditions": "true",
      "dialog_node": "node_4_1592957857357",
      "previous_sibling": "node_7_1601311202419"
    },
    {
      "type": "standard",
      "title": "REPEAT:  Transfer of Ownership Form: Play Message",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1594691118067",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1592586667911"
      },
      "conditions": "#repeat",
      "dialog_node": "node_4_1594691118081",
      "previous_sibling": "node_3_1594691118081"
    },
    {
      "type": "standard",
      "title": "Was phone number already provided?",
      "parent": "node_7_1589412157955",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_4_1594992646094",
      "previous_sibling": "node_1_1591886910288"
    },
    {
      "type": "standard",
      "title": "Wait for reply.  Was functional request correct?",
      "parent": "node_9_1606287393915",
      "conditions": "false",
      "dialog_node": "node_4_1599847999800",
      "previous_sibling": "node_8_1606369683069"
    },
    {
      "type": "standard",
      "title": "Fund Transfer Allocation Form recognized.  Set formType to fund_transfer.",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "fund_transfer"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_5_1600370294094"
      },
      "conditions": "@formType:(fund transfer allocation form) || $formType.contains('fund_transfer')",
      "dialog_node": "node_4_1600370246633",
      "previous_sibling": "node_1_1600370039559"
    },
    {
      "type": "standard",
      "title": "Set Request for Living Benefits to Complete ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1578343808141",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "livingBenefits"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_20_1578343808141"
      },
      "conditions": "true",
      "dialog_node": "node_4_1601658808865"
    },
    {
      "type": "standard",
      "title": "Continue conversation to set flex billing to create future date noInputTurn",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_3_1592957857357",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_4_1601921234550",
      "previous_sibling": "node_4_1592957857357"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry ",
      "parent": "node_30_1602663539106",
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_4_1602794890131"
    },
    {
      "type": "standard",
      "title": "Not Misrouted Jump to SSN Question",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1603728506935",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "true",
      "dialog_node": "node_4_1603728593199",
      "previous_sibling": "node_8_1603728589682"
    },
    {
      "type": "standard",
      "title": "Repeat Digression",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1603729107875",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1603728589682"
      },
      "conditions": "#repeat",
      "dialog_node": "node_4_1603729107879",
      "previous_sibling": "node_3_1603729107879"
    },
    {
      "type": "standard",
      "title": "Repeat Digression",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Policies that start with GL are group life policies. Please confirm, does your policy start with GL? Say yes or press 1. or say no or press 2."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1603827204521",
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_7_1603826498853"
      },
      "conditions": "#repeat",
      "dialog_node": "node_4_1603827204554",
      "previous_sibling": "node_3_1603827204554"
    },
    {
      "type": "standard",
      "title": "Group Life Disambiguation - No",
      "parent": "node_7_1603826498853",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1603728593199"
      },
      "conditions": "@no:no_high || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1603828073964",
      "previous_sibling": "node_1_1603827204521"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1603870080163",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1603870080165"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1604388279497",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1604388279500"
    },
    {
      "type": "standard",
      "title": "Check for PTD of null",
      "parent": "node_1_1604681399172",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$billingNotAvailable == true",
      "dialog_node": "node_4_1604517445422"
    },
    {
      "type": "standard",
      "title": "API Call - Mail complete for Overnight Delivery",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589445623643",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "mailingAddress"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_4_1606303509068"
    },
    {
      "type": "standard",
      "title": "Premium Received Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to verify a payment was received, is thatt right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1606919627366",
      "context": {
        "callReason": true,
        "transactionType": "premium_receipt"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#premium_receipt",
      "dialog_node": "node_4_1606369776854",
      "previous_sibling": "node_4_1606370061847"
    },
    {
      "type": "standard",
      "title": "Billing Information",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to hear billing information, is thatt right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1606919627366",
      "context": {
        "callReason": true,
        "transactionType": "billing"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#billing_general",
      "dialog_node": "node_4_1606370061847"
    },
    {
      "type": "standard",
      "title": "Form Type - Beneficiary Change",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "bene_change"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"bene_change\")",
      "dialog_node": "node_4_1606465125893",
      "previous_sibling": "node_3_1606464959811"
    },
    {
      "type": "standard",
      "title": "Form Type - Bank Authorization",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "pac"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"bank_authorization\")",
      "dialog_node": "node_4_1606465401709",
      "previous_sibling": "node_10_1606465258327"
    },
    {
      "type": "standard",
      "title": "Check maxCSRTries",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Okay. You want customer service. I just need a little more information."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1589430461786",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "conditions": "$retryCSRcounter < $maxCSRTries",
      "dialog_node": "node_4_1606731574452"
    },
    {
      "type": "standard",
      "title": "Agent/Agent Assistant",
      "output": {
        "generic": []
      },
      "parent": "node_3_1606746868484",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1606746868484"
      },
      "conditions": "$role == \"agent\" ||       $role == \"agent assistant\"",
      "dialog_node": "node_4_1606746868484"
    },
    {
      "type": "standard",
      "title": "Customer Service - goto Auth check",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1606367434331",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_4_1606913351419",
      "previous_sibling": "node_9_1589447115328"
    },
    {
      "type": "standard",
      "title": "Call Reason and Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1589430461786",
      "context": {
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "true",
      "dialog_node": "node_42_1590149738501",
      "previous_sibling": "node_5_1606730582012"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_40_1591016704079",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_44_1591016704079"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_42_1591016704079",
      "previous_sibling": "node_41_1591016704079"
    },
    {
      "type": "standard",
      "title": "Valid SSN9 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_41_1591023058889",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_44_1591023058889"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_42_1591023058889"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_40_1602670586057",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_42_1602670586075",
      "previous_sibling": "node_41_1602670586075"
    },
    {
      "type": "standard",
      "title": "Next on success - collect agent address",
      "output": {
        "generic": []
      },
      "parent": "node_34_1591016704068",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1590693378598"
      },
      "conditions": "false",
      "dialog_node": "node_43_1591016704079",
      "previous_sibling": "node_40_1591016704079"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_41_1591023058889",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_45_1591023058889"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_43_1591023058889",
      "previous_sibling": "node_42_1591023058889"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_7_1556899354941",
      "conditions": "#customer_service ||   (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_43_1602670902051"
    },
    {
      "type": "standard",
      "title": "Next on Failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_34_1591016704068",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_44_1591016704079",
      "previous_sibling": "node_43_1591016704079"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_35_1591023058883",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_44_1591023058889",
      "previous_sibling": "node_41_1591023058889"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_43_1602670902051",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_19_1556669739798"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_44_1602670902065"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect agent id",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_35_1591023058883",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentSsn9Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_23_1591015935158"
      },
      "conditions": "false",
      "dialog_node": "node_45_1591023058889",
      "previous_sibling": "node_44_1591023058889"
    },
    {
      "type": "standard",
      "title": "Set Request for Billing to Complete - fixed products",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1604681399172",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "billing"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_45_1601664678539",
      "previous_sibling": "node_1_1596132848315"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_43_1602670902051",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_45_1602670902065",
      "previous_sibling": "node_44_1602670902065"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1559265693354",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "true",
      "dialog_node": "node_46_1560283191716"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1559265693354_1",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "true",
      "dialog_node": "node_46_1560283191716_1"
    },
    {
      "type": "folder",
      "title": "Customer Service - retry",
      "parent": "node_4_1557758786889",
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal) || @Customer_Service",
      "dialog_node": "node_46_1602671216918"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1559266644551",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "true",
      "dialog_node": "node_47_1560283250664"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_11_1559266644551_1",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1563500798686"
      },
      "conditions": "true",
      "dialog_node": "node_47_1560283250664_1"
    },
    {
      "type": "standard",
      "title": "3.1. Payor - Collect Last Payment Date (alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_47_1591012628281",
      "previous_sibling": "node_24_1591012613381"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_46_1602671216918",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1557512076649"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_47_1602671216931"
    },
    {
      "type": "standard",
      "title": "Input Last Payment Date",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say your last payment date.\"\n:\n\"Starting with the month, when was your last payment date?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_47_1591012628281",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "lastPaymentDate"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_48_1591012628281"
    },
    {
      "type": "standard",
      "title": "Set Request for Values to Complete - Fixed products",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1601921920439",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "values"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_48_1601665110204"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_46_1602671216918",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_48_1602671216931",
      "previous_sibling": "node_47_1602671216931"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_48_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_53_1591012628281"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_49_1591012628281"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_16_1590415136082",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_17_1590415136089"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_50_1590415338657"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_48_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_57_1591012628281"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_50_1591012628281",
      "previous_sibling": "node_49_1591012628281"
    },
    {
      "type": "standard",
      "title": "Set Request for Web Forms to Complete  Agent Website",
      "parent": "node_1_1600192545704",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$formType.contains(\"agent_change\") || $formType.contains('fund_transfer') || $formType.contains('name_change') || $formType.contains('pors')",
      "dialog_node": "node_50_1601665363085",
      "previous_sibling": "node_21_1600460689470"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_16_1590415136082",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590577589453"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_51_1590415338657",
      "previous_sibling": "node_50_1590415338657"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_48_1591012628281",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_57_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_51_1591012628281",
      "previous_sibling": "node_50_1591012628281"
    },
    {
      "type": "standard",
      "title": "Set Request for Web Forms to Complete Owner website",
      "output": {},
      "parent": "node_1_1600192949921",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_8_1600193282274"
      },
      "conditions": "$formType.contains('fund_transfer') || $formType.contains('name_change') || $formType.contains('pors')",
      "dialog_node": "node_51_1601665991924",
      "previous_sibling": "node_25_1600460747252"
    },
    {
      "type": "standard",
      "title": "1. Fax Number",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Ok. Our fax number is:8 0 3,\n<break time='150ms' /> 3 3 3,\n<break time='150ms' />4 8 8 3. Again, that's 8 0 3,\n<break time='350ms' /> 3 3 3\n<break time='350ms' />4 8 8 3. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": null,
        "callReason": true,
        "persistResponse": {
          "question": "finalState",
          "finalState": "D"
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#fax_number || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1555355230304",
      "previous_sibling": "node_8_1606388289693"
    },
    {
      "type": "standard",
      "title": "Persist - Premium Payor",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Payor"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "payor",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(premium payor) ||     (@touchtone:two && input.text == @touchtone.literal) || $role == \"payor\"",
      "dialog_node": "node_5_1556226490826",
      "previous_sibling": "node_4_1556226486649"
    },
    {
      "type": "standard",
      "title": "Call Reason & Transfer - Forced Turn",
      "output": {
        "generic": [],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "context": {},
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_5_1556655996383",
      "previous_sibling": "node_8_1589477312881"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tPlease choose one of the following.  Say Policy owner, or press 1. Payer. or 2. Prudential Employee. or 3. <break time='250ms'></break> If you are none of these, say No. or press 4.  \n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1557512076608",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_17_1556228833792"
      },
      "conditions": "true",
      "dialog_node": "node_5_1557512076649"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_17_1556228833792",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_5_1559234086421"
    },
    {
      "type": "standard",
      "title": "Check retries - Are you the BOA or GA?",
      "output": {},
      "parent": "node_8_1559265922539",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1577197346380",
      "previous_sibling": "node_26_1602663417687"
    },
    {
      "type": "standard",
      "title": "Test",
      "parent": "node_3_1561666536036",
      "context": {
        "role": "agent",
        "maxTries": 1,
        "ownerType": "company",
        "callReason": false,
        "maxCSRTries": 0,
        "ownerHasSsn": false,
        "productType": "Traditional",
        "retryCounter": 0,
        "authenticated": true,
        "ownerSsn9Valid": true,
        "retryCSRcounter": 0,
        "policyNumberValid": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1561665977180"
      },
      "conditions": "$test_lalit",
      "dialog_node": "node_5_1589198182878"
    },
    {
      "type": "standard",
      "title": "Premium Payment - overnight Delivery ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Please mail your overnight payment to Insurance Services, at 1 2 7 5, San,duskey Road,  Jacksonville, Ill-annoy,  6  2  6  5  0. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1555355836587",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "delivery_type": null
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@delivery_type:overnight ||   $delivery_type == \"overnight\"",
      "dialog_node": "node_5_1589263815170",
      "previous_sibling": "node_6_1589263755473"
    },
    {
      "type": "standard",
      "title": "Disambiguate Mailing address type",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"We have different addresses for payments and other correspondence.  To continue, please say premium payment, or press 1. Say other correspondence, or press 2.\"\n:\n\"Is this for premium payments, or other correspondence?\"\n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_3_1555355225070",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0,
        "delivery_type": "@delivery_type.value",
        "persistResponse": {
          "question": "finalState",
          "finalState": "D"
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1589292336750",
      "previous_sibling": "node_18_1555361256167"
    },
    {
      "type": "standard",
      "title": "Repeat - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_1_1589391970365",
      "conditions": "#repeat",
      "dialog_node": "node_5_1589391603288",
      "digress_out": "allow_all",
      "previous_sibling": "node_4_1589430461786"
    },
    {
      "type": "standard",
      "title": "Beneficiary Change Form Requested",
      "parent": "node_6_1589411508294",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$formType != null && $formType.contains('bene_change')",
      "dialog_node": "node_5_1589412024149",
      "previous_sibling": "node_9_1590061435498"
    },
    {
      "type": "standard",
      "title": "Bene Form Request: Check for \"Payor\" role.",
      "parent": "node_5_1589412024149",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "node_5_1589414407829"
    },
    {
      "type": "folder",
      "title": "Common Templates",
      "conditions": "false",
      "dialog_node": "node_5_1589432821868",
      "previous_sibling": "node_1_1589391970365"
    },
    {
      "type": "standard",
      "title": "Yes/No Prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"Retry prompt message\"\n:\n\"Initial prompt message\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1589432821868",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "",
      "dialog_node": "node_5_1589432841952",
      "previous_sibling": "node_8_1591155506648"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_1_1606367389387",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "true",
      "dialog_node": "node_5_1589445695446",
      "previous_sibling": "node_3_1606913265673"
    },
    {
      "type": "standard",
      "title": "Yes",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<prosody rate='8%'> Was that [PHONE_NUMBER]?</prosody>\"\n:\n\"<prosody rate='8%'> Thank you. \n </prosody>\"  \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589459289804",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1589475954222"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1589459669813",
      "previous_sibling": "node_3_1589459673680"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_4_1589552221722",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "@no ||   (@touchtone:two && input.text == @touchtone.literal) || @vgTimeOut",
      "dialog_node": "node_5_1589552221728"
    },
    {
      "type": "standard",
      "title": "Values:  Fixed Products (Play Message)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " <prosody rate='8%'> The following are values available for policy number [POLICY_NUMBER], as of </prosody>   [VALUES_AS_OF_DATE]  The Face Amount is: [DEATH_BENEFIT]  <break time='550ms'></break> <prosody rate='8%'> To hear that again say, repeat. <break time='150ms'></break> Otherwise, we'll continue. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1590062927463",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "transactionType": "",
        "pendingTransaction": false,
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$productType == \"Level term, Renewable term\" || $activeNfo || $productType == \"Traditional\"",
      "dialog_node": "node_5_1590062752127",
      "previous_sibling": "node_10_1601921920439"
    },
    {
      "type": "standard",
      "title": "Values:  Flexible Products (Play Message)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> The following are values available for policy number [POLICY_NUMBER] as of </prosody>[VALUES_AS_OF_DATE]: <break time='150ms'></break> The Face Amount is: [DEATH_BENEFIT] <break time='550ms'></break>  The Accumulated Value is: [AV]  <break time='550ms'></break>  The current years Surrender Charge is, [SURR_CHARGE]  <break time='550ms'></break> The Cash Surrender Value is: [CSV] <break time='550ms'></break> <prosody rate='8%'> To hear that again, just say repeat.  <break time='150ms'></break>  Otherwise, lets continue. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1590062927463",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "transactionType": "",
        "pendingTransaction": false,
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$productType == \"Variable Universal\" ||    $productType == \"Universal Life\" ||             $productType == \"Adaptable Life\" ||  $productType == \"Whole Life\" ||           $productType == \"Flexible Premium Benefit Life\" ||         $productType == \"Interest Sensitive Life\" ||       $productType == \"Ordinary\"",
      "dialog_node": "node_5_1590062783383",
      "previous_sibling": "node_5_1590062752127"
    },
    {
      "type": "standard",
      "title": "SSN already entered",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590414852604",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1590401650875"
      },
      "conditions": "$ownerSsn9Valid == true",
      "dialog_node": "node_5_1590408401296"
    },
    {
      "type": "folder",
      "title": "Auth flow - Common",
      "parent": "node_7_1556051821371",
      "conditions": "false",
      "dialog_node": "node_5_1590580064997",
      "previous_sibling": "node_1_1591009799109"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and Owner has SSN",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590580251254",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_108_1590581526115"
      },
      "conditions": "$policyNumberValid == true && $ownerHasSsn == true",
      "dialog_node": "node_5_1590580251263",
      "previous_sibling": "node_4_1590580251263"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590585843913",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1590585843913"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_5_1590585843913",
      "previous_sibling": "node_4_1590585843913"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591009799116",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591009799116"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_5_1591009799116",
      "previous_sibling": "node_4_1591009799116"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_3_1591012613381",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591012613381"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_5_1591012613381",
      "previous_sibling": "node_4_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1591015619693",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1591015619693"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_5_1591015619693",
      "previous_sibling": "node_4_1591015619693"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_4_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1591026800363"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_5_1591026800363"
    },
    {
      "type": "standard",
      "title": "Authenticated - Ask Call Reason - NOT USED",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "You can receive the Death Benefit, Premium Amount, or speak to customer service. What would you like to do?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1556655996383",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "persistResponse": {
          "question": "reason",
          "finalState": "TA"
        }
      },
      "conditions": "$authenticated == true && $callReason == false && false",
      "dialog_node": "node_5_1591101651947"
    },
    {
      "type": "standard",
      "title": "Call reason - How else can I help ?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Is there anything else I can help with today?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_5_1591101651947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "menu"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_5_1591102234106",
      "previous_sibling": "node_2_1591102535656"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1591268884334",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1591268884334"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_5_1591268884334",
      "previous_sibling": "node_4_1591268884334"
    },
    {
      "type": "standard",
      "title": "No - Trustee is NOT company - Authenticated Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591368370216",
      "context": {
        "authenticated": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590763174183"
      },
      "conditions": "anything_else",
      "dialog_node": "node_5_1591368501859",
      "previous_sibling": "node_1_1591368531503"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1591009799116",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1591009799116"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_5_1592225556378",
      "previous_sibling": "node_10_1591009799116"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1591012613381",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1591012613381"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_5_1592303046414",
      "previous_sibling": "node_10_1591012613381"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior:  deliveryMethod",
      "parent": "node_7_1589412157955",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat || @repeat",
      "dialog_node": "node_5_1592510933866",
      "previous_sibling": "node_1_1600191693062"
    },
    {
      "type": "standard",
      "title": "Yes (Beneficiary Designations Changing)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Thank you.  A change of beneficiary form will be included. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_3_1592586667911",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "formType": "<? $formType.append('bene_change') ?>"
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1592587030226",
      "previous_sibling": "node_4_1592587122446"
    },
    {
      "type": "standard",
      "title": "Premium Amount",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591102234106",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1590048783906"
      },
      "conditions": "@call_reason_type:(premium amount)",
      "dialog_node": "node_5_1592841145771",
      "previous_sibling": "node_1_1592841095322"
    },
    {
      "type": "standard",
      "title": "API Forms Call",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1589475954222",
      "context": {
        "action": {
          "route": "API",
          "method": "formRequest"
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1592926168683"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products:  PTD is a PAST date (Play Message)",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Flexible premium products must have sufficient value to cover the monthly deductions.  Making your planned periodic payments may not be sufficient to keep your coverage in force.  Please review the terms of your policy, as well as your Policyholder Statement each year to determine if an adjustment to your planned periodic premium is nesessary. <break time='300ms'></break>\n</prosody> We last received a premium payment on [PREMIUM_RECEIVED_DATE], in the amount of [PREMIUM_RECEIVED_AMOUNT]  <break time='200ms'></break> Your planned periodic premium is currently being billed [MODE] in the amount of  [PX_AMOUNT] <break time='200ms'></break> and was last due on  [PX_DUE_DATE] <break time='200ms'></break> <prosody rate='8%'> To hear that again, say repeat. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_2_1592957857356",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "billing",
        "transactionType": "",
        "pendingTransaction": false,
        "vgwPostResponseTimeoutCount": 5000
      },
      "conditions": "$futurePtd == false",
      "dialog_node": "node_5_1592957857357",
      "previous_sibling": "node_3_1592957857357"
    },
    {
      "type": "standard",
      "title": "Values:  Fixed Products (Play Message), Jump to Authenticated Further Assistance",
      "parent": "node_5_1590062752127",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_5_1593115326442",
      "previous_sibling": "node_1_1595345179069"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior: Values:  Flexible Products (Play Message)",
      "parent": "node_5_1590062783383",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_5_1595345327718"
    },
    {
      "type": "standard",
      "title": "No, I do not want to access the form on the website",
      "parent": "node_1_1600195364618",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "@no || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1600205055079"
    },
    {
      "type": "standard",
      "title": "Name Change Form recognized.  Set formType to name_change.",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "name_change"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_6_1600370630381"
      },
      "conditions": "@formType:(name and address change form) || #address_change || #name_change || $formType.contains('name_change')",
      "dialog_node": "node_5_1600370294094",
      "previous_sibling": "node_4_1600370246633"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_7_1556899354941",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1556288584201"
      },
      "conditions": "#repeat",
      "dialog_node": "node_5_1601481499999",
      "previous_sibling": "node_9_1556899354942"
    },
    {
      "type": "standard",
      "title": "Set variable for bene_change to created",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1601916562356",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "bene_change"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1601913687643"
    },
    {
      "type": "standard",
      "title": "Set Request for Billing to Complete - Flex products",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1592957857356",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "billing"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1601921234575",
      "previous_sibling": "node_1_1604518214858"
    },
    {
      "type": "standard",
      "title": "General Agent",
      "parent": "node_10_1559266487355_1",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1559266652039"
      },
      "conditions": "@role:(general agent)",
      "dialog_node": "node_5_1602249024934",
      "previous_sibling": "node_11_1559266644551_1"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1602794890131",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1602847903836"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_5_1602794890166"
    },
    {
      "type": "standard",
      "title": "Check special mailing, once authenticated and Self Service Eligible",
      "parent": "node_1_1589303681224",
      "context": {
        "action": {
          "route": "RULES",
          "method": "policyIntercepts"
        }
      },
      "conditions": "true",
      "dialog_node": "node_5_1603212550751"
    },
    {
      "type": "standard",
      "title": "Continue EFT Conversation",
      "parent": "node_1_1603400636387",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1603138045898"
      },
      "conditions": "true",
      "dialog_node": "node_5_1603400805130"
    },
    {
      "type": "standard",
      "title": "Agent - Persist",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Agent"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_24_1556230123945",
      "context": {
        "role": "agent",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:agent",
      "dialog_node": "node_5_1603870370483",
      "previous_sibling": "node_3_1600853900388"
    },
    {
      "type": "standard",
      "title": "No - continue",
      "parent": "node_1_1563500798686_1",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1563500958095"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1605854626898"
    },
    {
      "type": "standard",
      "title": "No - not confirmed",
      "parent": "node_4_1599847999800",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1599847143967"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_5_1605873925168"
    },
    {
      "type": "standard",
      "title": "Premium Due Date Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to hear billing information, is thatt right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1606919627366",
      "context": {
        "callReason": true,
        "transactionType": "billing",
        "billing_premium_due_date": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#premium_due_date",
      "dialog_node": "node_5_1606368702649",
      "previous_sibling": "node_5_1606369944130"
    },
    {
      "type": "standard",
      "title": "Premium Amount Due Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to hear billing information, is thatt right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1606919627366",
      "context": {
        "callReason": true,
        "transactionType": "billing",
        "billing_premium_amount_due": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#premium_amount_due",
      "dialog_node": "node_5_1606369944130",
      "previous_sibling": "node_4_1606369776854"
    },
    {
      "type": "standard",
      "title": "Bank Authorization Form",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You need to set up or change the Pre Authorized Payment, is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "bank_authorization"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "(#forms &&  @formType:(pre authorization check plan form)) || #pac_request",
      "dialog_node": "node_5_1606372433661",
      "previous_sibling": "node_3_1606370576375"
    },
    {
      "type": "standard",
      "title": "PORS form ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> The Policy Owners Request for Service form is required when requesting a duplicate policy, a withdrawal, and can also be used to request a loan.  This is the form you need, is that right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "pors"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "(#forms &&  @formType:(policyowners request for service form)) || #duplicate_policy",
      "dialog_node": "node_5_1606373299250",
      "previous_sibling": "node_2_1606373127436"
    },
    {
      "type": "standard",
      "title": "End call processing",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589391970365",
      "context": {
        "action": {
          "route": "CALL_NOTE"
        },
        "hangUp": true
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "input.text == \"vgwHangUp\"",
      "dialog_node": "node_5_1606388379258",
      "previous_sibling": "node_3_1590066122488"
    },
    {
      "type": "standard",
      "title": "vgwHangUp Redirect",
      "parent": "node_8_1606388289693",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1606388379258"
      },
      "conditions": "input.text == \"vgwHangUp\"",
      "dialog_node": "node_5_1606388653839"
    },
    {
      "type": "standard",
      "title": "Transaction Type - Billing",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "billing"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$transactionType == \"billing\"",
      "dialog_node": "node_5_1606458224102"
    },
    {
      "type": "standard",
      "title": "Direct CSR",
      "parent": "node_4_1589430461786",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$directCSR==true",
      "dialog_node": "node_5_1606730582012",
      "previous_sibling": "node_4_1606731574452"
    },
    {
      "type": "standard",
      "title": "Anything else",
      "output": {
        "generic": []
      },
      "parent": "node_3_1606746868484",
      "context": {
        "makePayment": "one-time payment"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1606746868484"
      },
      "conditions": "anything_else",
      "dialog_node": "node_5_1606746868484",
      "previous_sibling": "node_4_1606746868484"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1590415136082",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590577589453"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_52_1590415338657",
      "previous_sibling": "node_51_1590415338657"
    },
    {
      "type": "standard",
      "title": "API call to validate Last Payment Date",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_47_1591012628281",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "lastPaymentDate"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_53_1591012628281",
      "previous_sibling": "node_48_1591012628281"
    },
    {
      "type": "standard",
      "title": "3.3. Common - Collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_5_1590580064997",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_54_1590415836020",
      "previous_sibling": "node_586_1590399193955"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_53_1591012628281",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_56_1591012628281"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_54_1591012628281"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_53_1591012628281",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_57_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_55_1591012628281",
      "previous_sibling": "node_54_1591012628281"
    },
    {
      "type": "standard",
      "title": "Next on success - street number",
      "output": {
        "generic": []
      },
      "parent": "node_47_1591012628281",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_58_1591012628281"
      },
      "conditions": "false",
      "dialog_node": "node_56_1591012628281",
      "previous_sibling": "node_53_1591012628281"
    },
    {
      "type": "standard",
      "title": "Set Request for Mailed Form Request as Complete  ",
      "output": {},
      "parent": "node_6_1602862273547",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "$formType.contains('bene_change') || $formType.contains(\"bank_authorization\") || $formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "node_56_1601666099415"
    },
    {
      "type": "standard",
      "title": "Input Owner SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of the owner's social security number.\"\n:\n\"What is the last 4 digits of the owner’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_3_1590399308639",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_566_1590399193946"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_566_1590399193946",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_623_1590399352302"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_567_1590399193955"
    },
    {
      "type": "standard",
      "title": "Agent is Active - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_35_1590995309629",
      "context": {
        "authenticated": true
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "$activeAgent == true",
      "dialog_node": "node_57_1590658752905"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_47_1591012628281",
      "context": {
        "authStatus": {
          "lastPaymentDateValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_57_1591012628281",
      "previous_sibling": "node_56_1591012628281"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_30_1590386357066",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_58_1590386357076",
      "previous_sibling": "node_31_1590386357076"
    },
    {
      "type": "standard",
      "title": "Agent Inactive - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_35_1590995309629",
      "context": {
        "authenticated": false
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "anything_else",
      "dialog_node": "node_58_1590658752905",
      "previous_sibling": "node_57_1590658752905"
    },
    {
      "type": "standard",
      "title": "3.2. Payor - Collect Street Number",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_58_1591012628281",
      "previous_sibling": "node_47_1591012628281"
    },
    {
      "type": "standard",
      "title": "3.2. Common - Collect Street Number",
      "output": {
        "generic": []
      },
      "parent": "node_5_1590580064997",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_586_1590399193955",
      "previous_sibling": "node_1_1590406942380"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1590386357066",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_59_1590386357076",
      "previous_sibling": "node_58_1590386357076"
    },
    {
      "type": "standard",
      "title": "Input street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of your street address. \"\n:\n\"What is the numerical portion of the owner's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_58_1591012628281",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_59_1591012628281"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_59_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_64_1591012628281"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_60_1591012628281"
    },
    {
      "type": "standard",
      "title": "1.2. Servicing Agent - Collect Agent Street Number",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_60_1591026800363",
      "previous_sibling": "node_3_1591026800363"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_59_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_68_1591012628281"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_61_1591012628281",
      "previous_sibling": "node_60_1591012628281"
    },
    {
      "type": "standard",
      "title": "Input agent street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of Agent’s street address. \"\n:\n\"What is the numerical portion of the Agent's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_60_1591026800363",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_61_1591026800363"
    },
    {
      "type": "standard",
      "title": "Premium Payment Mailing Address",
      "output": {
        "generic": []
      },
      "parent": "node_3_1555355225070",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@mailing_address_type:premium",
      "dialog_node": "node_6_1555355836587"
    },
    {
      "type": "standard",
      "title": "Persist - Prudential Employee",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Prudential Employee"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556288584201",
      "context": {
        "role": "clientEmployee",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(prudential employee) || (@touchtone:three && input.text == @touchtone.literal) ||   $role == \"clientEmployee\"",
      "dialog_node": "node_6_1556226493314",
      "previous_sibling": "node_5_1556226490826"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1557512076608",
      "metadata": {},
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_6_1557512076649",
      "previous_sibling": "node_5_1557512076649"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1556226486649",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_6_1559234267378"
    },
    {
      "type": "standard",
      "title": "Reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tIf you are a General Agent, or calling from the back office, say yes or press 1.  Otherwise, say no, or press two. \n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1577197346380",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_13_1559266652039"
      },
      "conditions": "true",
      "dialog_node": "node_6_1577197346395"
    },
    {
      "type": "standard",
      "title": "Wait for Hangup",
      "output": {
        "generic": []
      },
      "parent": "node_10_1556742815467",
      "conditions": "true",
      "dialog_node": "node_6_1579124434296"
    },
    {
      "type": "standard",
      "title": "Premium Payment - Standard Delivery",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Please mail your payment to. Wilton Reassurance Life Company of New York,  PO Box 1 0 5, 3 8 3,  Atlanta, GA, \n<break time='400ms'/>  3 0 3, 4 8, dash. 5 3 8 3."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1555355836587",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "delivery_type": null
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@delivery_type:standard ||   $delivery_type == \"standard\"",
      "dialog_node": "node_6_1589263755473"
    },
    {
      "type": "folder",
      "title": "Functional Fulfilment ",
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_6_1589411508294",
      "previous_sibling": "node_1_1589303681224"
    },
    {
      "type": "standard",
      "title": "No ",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589432841952",
      "context": {},
      "metadata": {},
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1589432841958"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_1_1606367389387",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_25_1589275033796"
      },
      "conditions": "@yes ||   (@touchtone:one && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_6_1589445695446"
    },
    {
      "type": "standard",
      "title": "Mailing Address - Digression",
      "output": {
        "generic": []
      },
      "parent": "node_9_1589560826369",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1555355225070"
      },
      "conditions": "#mailing_address",
      "dialog_node": "node_6_1589454843556",
      "previous_sibling": "node_2_1589391558135"
    },
    {
      "type": "standard",
      "title": " May I have your day time phone number?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<prosody rate='8%'>  One digit at a time, starting with the area code, please say or enter your day time phone number. </prosody>\"\n:\n\"<prosody rate='8%'>  Starting with the area code, please tell me your day time phone number. </prosody>\"  \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $PHONENO_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "10",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_4_1594992646094",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "daytimePhone",
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "node_6_1589459152125",
      "previous_sibling": "node_2_1594992515150"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_4_1589552221722",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589550998900"
      },
      "conditions": "@yes ||   (@touchtone:one && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_6_1589552221728",
      "previous_sibling": "node_5_1589552221728"
    },
    {
      "type": "standard",
      "title": "Persist Authenticated Status",
      "output": {
        "generic": []
      },
      "parent": "node_5_1556655996383",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "authenticated"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_6_1589813093107",
      "previous_sibling": "node_7_1589890850012"
    },
    {
      "type": "standard",
      "title": "No (Authenticated Further Assistance)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_8_1589477312881",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "newPolicy": true,
        "productType": ""
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1590013721727"
    },
    {
      "type": "standard",
      "title": "Premium Amount",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Your premium is ($ -Premium Amount) and your policy is paid to (MMDDYYYY –Due Date). Your policy anniversary date is (MMDD -Anniversary Date)."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1591101651947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@call_reason_type:(premium amount) ||  (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1590048783906",
      "previous_sibling": "node_2_1590048783906"
    },
    {
      "type": "standard",
      "title": "Values:  Check for \"Payor\" role. ",
      "output": {},
      "parent": "node_9_1589412196928",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "node_6_1590063383287"
    },
    {
      "type": "standard",
      "title": "Owner Flow complete - Auth Done",
      "output": {
        "generic": []
      },
      "parent": "node_7_1556051821371",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_6_1590406908895",
      "previous_sibling": "node_5_1590580064997"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and SSN missing",
      "output": {
        "generic": []
      },
      "parent": "node_3_1590580251254",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_119_1590581781459"
      },
      "conditions": "anything_else",
      "dialog_node": "node_6_1590580251263",
      "previous_sibling": "node_5_1590580251263"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1590585843913",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1590585843913"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_6_1590585843913",
      "previous_sibling": "node_5_1590585843913"
    },
    {
      "type": "standard",
      "title": "Jump to call for reason / Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_6_1590406908895",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_6_1590763174183",
      "previous_sibling": "node_20_1590584381970"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1591009799116",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591009799116"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_6_1591009799116",
      "previous_sibling": "node_5_1591009799116"
    },
    {
      "type": "standard",
      "title": "Start Payor Auth",
      "output": {
        "generic": []
      },
      "parent": "node_2_1557320487159",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_6_1591012278264"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1591012613381",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1591012613381"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_6_1591012613381",
      "previous_sibling": "node_5_1591012613381"
    },
    {
      "type": "standard",
      "title": "Start Agent Auth",
      "output": {
        "generic": []
      },
      "parent": "node_1_1559335045836",
      "context": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "true",
      "dialog_node": "node_6_1591015308628"
    },
    {
      "type": "standard",
      "title": "Agent Auth Flow",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591015308628",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1591015619687"
      },
      "conditions": "false",
      "dialog_node": "node_6_1591015369081"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_4_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_15_1591026800363"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_6_1591026800363",
      "previous_sibling": "node_5_1591026800363"
    },
    {
      "type": "standard",
      "title": "Next on success - Route to auth",
      "output": {
        "generic": []
      },
      "parent": "node_2_1556050145112",
      "context": {
        "authStatus": {
          "ownerSsn9Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1590394093339"
      },
      "conditions": "false",
      "dialog_node": "node_6_1591100045154",
      "previous_sibling": "node_9_1603728506935"
    },
    {
      "type": "standard",
      "title": "No - Good bye",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591102234106",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1556742815467"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1591102234116"
    },
    {
      "type": "standard",
      "title": "API call to validate owner SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_1_1591268884327",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_6_1591268884334",
      "previous_sibling": "node_2_1591268884334"
    },
    {
      "type": "standard",
      "title": "If Trustee is Company?",
      "output": {
        "generic": []
      },
      "parent": "node_6_1590406908895",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ownerType == \"trust\"",
      "dialog_node": "node_6_1591368370216"
    },
    {
      "type": "standard",
      "title": "Invalid TIN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1591009799116",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_25_1591009799116"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_6_1592225626397",
      "previous_sibling": "node_32_1591009799116"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1591012613381",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_14_1591012613381"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_6_1592303068296",
      "previous_sibling": "node_21_1591012613381"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1592510933866",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1592510933886"
    },
    {
      "type": "standard",
      "title": "API Call Complete, Continue Conversation.",
      "parent": "node_5_1592926168683",
      "context": {
        "vgwConversationResponseTimeout": 5000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_6_1602862273547"
      },
      "conditions": "true",
      "dialog_node": "node_6_1592926449567",
      "previous_sibling": "node_8_1593205517267"
    },
    {
      "type": "standard",
      "title": "Billing ",
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$transactionType == \"billing\" || $transactionType == \"premium_receipt\"",
      "dialog_node": "node_6_1592935820993",
      "previous_sibling": "node_1_1592505251721"
    },
    {
      "type": "standard",
      "title": "Billing, Fixed Products: API to check the paid to date.",
      "parent": "node_3_1592935915169",
      "context": {
        "action": {
          "route": "API",
          "method": "billing"
        }
      },
      "conditions": "true",
      "dialog_node": "node_6_1592951391954"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products, PTD is a PAST date: Jump to \"Authenticated Further Assistance\"",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1592957857357",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_7_1601921794919"
      },
      "conditions": "true",
      "dialog_node": "node_6_1592957857357",
      "previous_sibling": "node_11_1601311357604"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1595345327718",
      "context": {
        "optOut": true,
        "finalState": "O",
        "vgwPostResponseTimeoutCount": 7000
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "#customer_service ||  (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1595345327738"
    },
    {
      "type": "standard",
      "title": "Set pendingTransaction to true",
      "parent": "node_6_1589411508294",
      "context": {
        "pendingTransaction": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_6_1603978874732"
      },
      "conditions": "true",
      "dialog_node": "node_6_1595448860582"
    },
    {
      "type": "standard",
      "title": "Functional Request recognized in error.  ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'> Sorry. </prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1599847999800",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1606390065834"
      },
      "conditions": "true",
      "dialog_node": "node_6_1599847143967",
      "previous_sibling": "node_7_1599848191616"
    },
    {
      "type": "standard",
      "title": "PORS Form recognized.  Set formType to pors.",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "pors"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_8_1600198455475"
      },
      "conditions": "@formType:(policyowners request for service form) || #duplicate_policy || $formType.contains(\"pors\")",
      "dialog_node": "node_6_1600370630381",
      "previous_sibling": "node_5_1600370294094"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_4_1557758786889",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1556230123945"
      },
      "conditions": "#repeat",
      "dialog_node": "node_6_1601481685912",
      "previous_sibling": "node_7_1557758786895"
    },
    {
      "type": "standard",
      "title": "Continue Conversation to Delivery Options",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1601921234575",
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_3_1592957857357"
      },
      "conditions": "true",
      "dialog_node": "node_6_1601921234575"
    },
    {
      "type": "standard",
      "title": "2nd customer service - transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1602794890131",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "conditions": "anything_else",
      "dialog_node": "node_6_1602794890166",
      "previous_sibling": "node_5_1602794890166"
    },
    {
      "type": "standard",
      "title": "Mail Delivery ",
      "parent": "node_2_1589475954222",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$deliveryMethod == \"mail\"",
      "dialog_node": "node_6_1602862273547",
      "previous_sibling": "node_5_1592926168683"
    },
    {
      "type": "standard",
      "title": "Option 1 (Change draft date)",
      "parent": "node_1_1603138045898",
      "context": {
        "input_prompt": "<prosody rate='8%'> You're interested in changing the draft date.  Is thatt right?  </prosody>",
        "sm_eft_option": "one",
        "reasonOverride": "Time Union Special EFT Mailing call.  Caller wants to change draft date"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_12_1604314464251"
      },
      "conditions": "@options:(option 1) || (@touchtone:one && input.text == @touchtone.literal) || #change_draft_date",
      "dialog_node": "node_6_1603138140019",
      "previous_sibling": "node_3_1603138142995"
    },
    {
      "type": "standard",
      "title": "EFT Letter",
      "output": {
        "generic": []
      },
      "parent": "node_2_1603793715648",
      "context": {
        "letter_type": "EFT"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1603975739025"
      },
      "conditions": "@letter_type:EFT",
      "dialog_node": "node_6_1603793744902"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1603870370483",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_6_1603870370485"
    },
    {
      "type": "standard",
      "title": "Check if letter type is not mentioned",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> We recently mailed a letter about the automatic payment for this policy.  Are you calling about this letter? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1603978874732",
      "context": {
        "retryCounter": 0
      },
      "conditions": "$letter_type == \"none\" || !$letter_type",
      "dialog_node": "node_6_1603978325492"
    },
    {
      "type": "standard",
      "title": "Yes - EFT continue",
      "parent": "node_6_1603978325492",
      "context": {
        "letter_type": "EFT"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1604315845982"
      },
      "conditions": "@yes ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1603978613296",
      "previous_sibling": "node_6_1603978672066"
    },
    {
      "type": "standard",
      "title": "No - Transfer",
      "parent": "node_6_1603978325492",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "@no ||  (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_6_1603978672066"
    },
    {
      "type": "standard",
      "title": "Special EFT Mailing",
      "output": {
        "generic": []
      },
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "($dialogPath == \"tuEftMailing\" &&    ($role == \"policyowner\" ||  $role == \"payor\") &&  ($transactionType == \"letter\" || $transactionType == \"change_draft_date\" || $transactionType == \"billing\"))",
      "dialog_node": "node_6_1603978874732",
      "previous_sibling": "node_6_1595448860582"
    },
    {
      "type": "standard",
      "title": "Final State = Functional Hang-up",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1606388379258",
      "context": {
        "finalState": "FH"
      },
      "conditions": "$pendingTransaction != null && $pendingTransaction == true",
      "dialog_node": "node_6_1606388462386"
    },
    {
      "type": "standard",
      "title": "Form Type - PORS",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "pors"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"pors\")",
      "dialog_node": "node_6_1606465541218",
      "previous_sibling": "node_9_1606465465118"
    },
    {
      "type": "standard",
      "title": "Persist call reason",
      "output": {
        "generic": []
      },
      "parent": "node_1_1606746868481",
      "context": {
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "reason"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_6_1606746868484",
      "previous_sibling": "node_3_1606746868484"
    },
    {
      "type": "standard",
      "title": "Next on Failure - ask SSN with message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1556050145112",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "policyNumberValid": "U"
        }
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1556228833790"
      },
      "conditions": "false",
      "dialog_node": "node_62_1590387967777",
      "previous_sibling": "node_6_1591100045154"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_59_1591012628281",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_68_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_62_1591012628281",
      "previous_sibling": "node_61_1591012628281"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_61_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_66_1591026800363"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_62_1591026800363"
    },
    {
      "type": "standard",
      "title": "API call to validate owner SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_3_1590399308639",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_623_1590399352302",
      "previous_sibling": "node_566_1590399193946"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_623_1590399352302",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590578744992"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_624_1590399352308"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_566_1590399193946",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1590399501282"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_625_1590399877418",
      "previous_sibling": "node_659_1590400266791"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_61_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_70_1591026800363"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_63_1591026800363",
      "previous_sibling": "node_62_1591026800363"
    },
    {
      "type": "standard",
      "title": "Confirm Policy Number",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<speak version='1.0'> Was that [POLICY_NUMBER] ? <break time='250ms'/> If correct, say yes. or press one.  If incorrect, say no. or press 2.</speak>\"\n:\n\"<speak version='1.0'> Was that [POLICY_NUMBER] ? </speak>\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_30_1590386357066",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "policyNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_64_1590388169702",
      "previous_sibling": "node_59_1590386357076"
    },
    {
      "type": "standard",
      "title": "API call to validate address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_58_1591012628281",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_64_1591012628281",
      "previous_sibling": "node_59_1591012628281"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_61_1591026800363",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_70_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_64_1591026800363",
      "previous_sibling": "node_63_1591026800363"
    },
    {
      "type": "standard",
      "title": "Input Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say the Insured's date of birth.\"\n:\n\"Starting with the month, please say the Insured’s date of birth.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_9_1590401650875",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "dob"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_644_1590400220532"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_644_1590400220532",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_670_1590403512286"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_645_1590400220539",
      "previous_sibling": "node_648_1590400220539"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_644_1590400220532",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_671_1590403531494"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_648_1590400220539"
    },
    {
      "type": "standard",
      "title": "Yes Valid policy - Api call - Forced Turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you, one moment. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_64_1590388169702",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_65_1590388169708"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_64_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_67_1591012628281"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_65_1591012628281"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_566_1590399193946",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1590399501282"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_659_1590400266791",
      "previous_sibling": "node_567_1590399193955"
    },
    {
      "type": "standard",
      "title": "Continue - API to Validate policy number",
      "output": {
        "generic": []
      },
      "parent": "node_65_1590388169708",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_67_1590388169708"
      },
      "conditions": "true",
      "dialog_node": "node_66_1590388169708"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_64_1591012628281",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_68_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_66_1591012628281",
      "previous_sibling": "node_65_1591012628281"
    },
    {
      "type": "standard",
      "title": "API call to validate agent address",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "VALID_ADDRESS"
                  }
                }
              },
              {
                "label": "INVALID_ADDRESS",
                "value": {
                  "input": {
                    "text": "INVALID_ADDRESS"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_60_1591026800363",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "agentStreetNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_66_1591026800363",
      "previous_sibling": "node_61_1591026800363"
    },
    {
      "type": "standard",
      "title": "Set Request for Faxed Form Request as Complete   ",
      "output": {},
      "parent": "node_1_1593193068105",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_2_1597348409486"
      },
      "conditions": "$formType.contains('bene_change') || $formType.contains(\"bank_authorization\") || $formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "node_66_1601666883784"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect owner address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1590401650875",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "dobValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_586_1590399193955"
      },
      "conditions": "false",
      "dialog_node": "node_670_1590403512286",
      "previous_sibling": "node_4_1590578014786"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_9_1590401650875",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_671_1590403531494",
      "previous_sibling": "node_644_1590400220532"
    },
    {
      "type": "standard",
      "title": "API to Validate policy number",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_POLICYNUMBER",
                "value": {
                  "input": {
                    "text": "VALID_POLICYNUMBER"
                  }
                }
              },
              {
                "label": "INVALID_POLICYNUMBER",
                "value": {
                  "input": {
                    "text": "INVALID_POLICYNUMBER"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_2_1556050145112",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "policyNumber"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_67_1590388169708",
      "previous_sibling": "node_30_1590386357066"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_58_1591012628281",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_69_1591012628281"
      },
      "conditions": "false",
      "dialog_node": "node_67_1591012628281",
      "previous_sibling": "node_64_1591012628281"
    },
    {
      "type": "standard",
      "title": "Street Address Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_66_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_69_1591026800363"
      },
      "conditions": "input.text == \"VALID_ADDRESS\"",
      "dialog_node": "node_67_1591026800363"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_671_1590403531494",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1590578014786"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_672_1590403531500"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_671_1590403531494",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_670_1590403512286"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_673_1590403531500",
      "previous_sibling": "node_672_1590403531500"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_644_1590400220532",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_670_1590403512286"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_674_1590403715462",
      "previous_sibling": "node_645_1590400220539"
    },
    {
      "type": "standard",
      "title": "RPS - Direct Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_67_1590388169708",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$rpsPolicy == true",
      "dialog_node": "node_68_1590388169708"
    },
    {
      "type": "standard",
      "title": "SSN already entered",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591012278264",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1591012613381"
      },
      "conditions": "$ownerSsn9Valid == true",
      "dialog_node": "node_68_1591012339811"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_58_1591012628281",
      "context": {
        "authStatus": {
          "streetAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_68_1591012628281",
      "previous_sibling": "node_67_1591012628281"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_66_1591026800363",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_70_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_68_1591026800363",
      "previous_sibling": "node_67_1591026800363"
    },
    {
      "type": "standard",
      "title": "Policy Found - Success",
      "output": {
        "generic": []
      },
      "parent": "node_67_1590388169708",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1591100045154"
      },
      "conditions": "input.text == \"VALID_POLICYNUMBER\"",
      "dialog_node": "node_69_1590388169708",
      "previous_sibling": "node_68_1590388169708"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and Owner has SSN",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591012278264",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_13_1591012613381"
      },
      "conditions": "$policyNumberValid == true && $ownerHasSsn == true",
      "dialog_node": "node_69_1591012339811",
      "previous_sibling": "node_68_1591012339811"
    },
    {
      "type": "standard",
      "title": "3.3. Payor - Collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591012613372",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_69_1591012628281",
      "previous_sibling": "node_58_1591012628281"
    },
    {
      "type": "standard",
      "title": "Next on success - collect Zip code",
      "output": {
        "generic": []
      },
      "parent": "node_60_1591026800363",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_105_1591027824941"
      },
      "conditions": "false",
      "dialog_node": "node_69_1591026800363",
      "previous_sibling": "node_66_1591026800363"
    },
    {
      "type": "standard",
      "title": "Input Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_54_1590415836020",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_70_1590415973915"
    },
    {
      "type": "standard",
      "title": "Policy Number entered and SSN missing",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591012278264",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_24_1591012613381"
      },
      "conditions": "anything_else",
      "dialog_node": "node_70_1591012339811",
      "previous_sibling": "node_69_1591012339811"
    },
    {
      "type": "standard",
      "title": "Input Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_69_1591012628281",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_70_1591012628281"
    },
    {
      "type": "standard",
      "title": "Next on failure - last payment date",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_60_1591026800363",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "agentAddressValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_83_1591027451458"
      },
      "conditions": "false",
      "dialog_node": "node_70_1591026800363",
      "previous_sibling": "node_69_1591026800363"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_70_1590415973915",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_86_1590416125193"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_71_1590415973921"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_70_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_75_1591012628281"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_71_1591012628281"
    },
    {
      "type": "standard",
      "title": "2.5. Servicing Agent - Collect Owner Zip code (Alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_71_1591026800363",
      "previous_sibling": "node_94_1591027550083"
    },
    {
      "type": "standard",
      "title": "Yes",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1555357693947"
      },
      "conditions": "@yes ||  (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1555355882808",
      "digress_out": "allow_all",
      "previous_sibling": "response_1_1580925189636"
    },
    {
      "type": "folder",
      "title": "Policyowner Authentication",
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_7_1556051821371",
      "previous_sibling": "node_1_1556050074520"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_2_1556288584201",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_7_1556899354941",
      "previous_sibling": "node_1_1604388150181"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1557512076608",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1557512076649"
      },
      "conditions": "true",
      "dialog_node": "node_7_1557512076649",
      "previous_sibling": "node_6_1557512076649"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1557758786889",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_7_1557758786895",
      "previous_sibling": "node_46_1602671216918"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1556226493314",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_7_1559234384391"
    },
    {
      "type": "standard",
      "title": "No response - Ghost Script",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm still not detecting a response.  If you can hear me, please give us a call back at 800-243-5433 between the hours of 7:30 am and 6:00 pm CENTRAL TIME. I will now be releasing the call. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1576786662607",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1556742815467"
      },
      "conditions": "true",
      "dialog_node": "node_7_1576787025351",
      "previous_sibling": "node_3_1578420993906"
    },
    {
      "type": "standard",
      "title": "Correspondence address",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589292336750",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_18_1555361256167"
      },
      "conditions": "@mailing_address_type:correspondence || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1589292447809",
      "previous_sibling": "node_3_1589292416511"
    },
    {
      "type": "standard",
      "title": "Disambiguate standard/overnight",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"Please say standard delivery, or press 1. Overnight delivery, or press 2.\"\n:\n\"Is this for standard. or overnight delivery?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_6_1555355836587",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0,
        "persistResponse": {
          "question": "finalState",
          "finalState": "D"
        }
      },
      "conditions": "true",
      "dialog_node": "node_7_1589363543131",
      "previous_sibling": "node_5_1589263815170"
    },
    {
      "type": "standard",
      "title": "Delivery Options",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1589411508294",
      "context": {
        "retryCounter": 0
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_7_1589412157955",
      "previous_sibling": "node_9_1589412196928"
    },
    {
      "type": "standard",
      "title": "Yes",
      "output": {
        "generic": []
      },
      "parent": "node_5_1589432841952",
      "context": {},
      "metadata": {},
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1589432841958",
      "previous_sibling": "node_6_1589432841958"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              },
              {
                "text": "Want me to repeat that?"
              },
              {
                "text": "Did you need that repeated?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_38_1589275164768",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_7_1589447115313"
    },
    {
      "type": "standard",
      "title": "2nd attempt",
      "output": {
        "generic": []
      },
      "parent": "node_3_1589550998900",
      "context": {
        "callReason": false
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "anything_else",
      "dialog_node": "node_7_1589552262291",
      "previous_sibling": "node_8_1589552093861"
    },
    {
      "type": "standard",
      "title": "Call reason known",
      "output": {
        "generic": []
      },
      "parent": "node_5_1556655996383",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1589813093107"
      },
      "conditions": "$callReason == true",
      "dialog_node": "node_7_1589890850012",
      "previous_sibling": "node_1_1606746868481"
    },
    {
      "type": "standard",
      "title": "Values:  When all values are 0",
      "parent": "node_4_1590062927463",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "$valuesNotAvailable == true || $excludeValues == true",
      "dialog_node": "node_7_1590080187557"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_1_1591015619687",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_7_1591015619693",
      "previous_sibling": "node_2_1591015619693"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1591026800363",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_15_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_7_1591026800363",
      "previous_sibling": "node_6_1591026800363"
    },
    {
      "type": "standard",
      "title": "Yes - ask again",
      "output": {
        "generic": []
      },
      "parent": "node_5_1591102234106",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1591101651947"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1591102234116",
      "previous_sibling": "node_6_1591102234116"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_6_1591268884334",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1591268884334"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_7_1591268884334"
    },
    {
      "type": "standard",
      "title": "Invalid SSN4 - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_125_1590581781466",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_120_1590581781466"
      },
      "conditions": "input.text == \"INVALID_SSN\"",
      "dialog_node": "node_7_1592225724872",
      "previous_sibling": "node_127_1590581781466"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_30_1591012613381",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_25_1591012613381"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_7_1592303110274",
      "previous_sibling": "node_32_1591012613381"
    },
    {
      "type": "standard",
      "title": "Call Drools Rules (Is caller eligible for self service?)",
      "parent": "node_1_1589303681224",
      "context": {
        "action": {
          "route": "RULES",
          "method": "selfServiceEligible"
        }
      },
      "conditions": "false",
      "dialog_node": "node_7_1592497465455",
      "previous_sibling": "node_5_1603212550751"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1592510933866",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_7_1592510933886",
      "previous_sibling": "node_6_1592510933886"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products: PTD is more than 425 days past due",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1604675096141",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$ptdCurrent == false",
      "dialog_node": "node_7_1592957857357",
      "previous_sibling": "node_2_1592957857356"
    },
    {
      "type": "standard",
      "title": "Main Menu Rerout -(Play Values, Flexible Products)",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1595345327718",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#main_menu",
      "dialog_node": "node_7_1595345327738",
      "previous_sibling": "node_6_1595345327738"
    },
    {
      "type": "standard",
      "title": "Yes, functional request was recognized correct.  ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1599847999800",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@yes || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1599848191616",
      "previous_sibling": "node_5_1605873925168"
    },
    {
      "type": "standard",
      "title": "Form not available for callers role (Transfer to a Live CSR)",
      "parent": "node_1_1600712889887",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$role == \"payor\" ||        $role == \"generalAgentOrBackOffice\" || ($role == \"clientEmployee\" && ($formType.contains(\"agent_change\")))",
      "dialog_node": "node_7_1600713003797"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior - Billing, Flexible Products, Future PTD",
      "parent": "node_3_1592957857357",
      "metadata": {},
      "conditions": "@Customer_Service || #customer_service || @main_menu || #main_menu || (@touchtone:zero && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_7_1601311202419"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_18_1602662736832",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1559266487355"
      },
      "conditions": "#repeat",
      "dialog_node": "node_7_1601473077084",
      "previous_sibling": "node_20_1602662736850"
    },
    {
      "type": "standard",
      "title": "Continue conversation to set flex billing to create PAST date noInputTurn ",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_5_1592957857357",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_7_1601921794919",
      "previous_sibling": "node_6_1592957857357"
    },
    {
      "type": "folder",
      "title": "Default Menu Behavior",
      "parent": "node_9_1559266384280_1",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_7_1602658148590",
      "previous_sibling": "node_2_1559265700600_1"
    },
    {
      "type": "standard",
      "title": "Any other letter",
      "output": {
        "generic": []
      },
      "parent": "node_2_1603793715648",
      "context": {
        "letter_type": "none"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1603975739025"
      },
      "conditions": "anything_else",
      "dialog_node": "node_7_1603793882728",
      "previous_sibling": "node_6_1603793744902"
    },
    {
      "type": "standard",
      "title": "Group Life Disambiguation",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Policies with a prefix of, G. L., are typically handled by Hartford's Group Department. Please confirm, does your policy start with, G. as in George, L. as in London? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_10_1603828318032",
      "context": {
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "node_7_1603826498853"
    },
    {
      "type": "standard",
      "title": "Group Life Disambiguation - Yes",
      "parent": "node_7_1603826498853",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1603728589682"
      },
      "conditions": "@yes:yes_high || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_7_1603827217310",
      "previous_sibling": "node_4_1603828073964"
    },
    {
      "type": "standard",
      "title": "Some other Letter - Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1603978874732",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "anything_else",
      "dialog_node": "node_7_1604313978438",
      "previous_sibling": "node_10_1604315845982"
    },
    {
      "type": "standard",
      "title": "$transactionType == \"forms\"",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$transactionType == \"forms\"",
      "dialog_node": "node_7_1605029835358",
      "previous_sibling": "node_7_1606465723323"
    },
    {
      "type": "standard",
      "title": "API call - Fax complete",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_13_1589546773572",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "faxNumber"
          }
        }
      },
      "conditions": "true",
      "dialog_node": "node_7_1606303758827"
    },
    {
      "type": "standard",
      "title": "Form 712 - Redirect ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "form_712"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1589893073742"
      },
      "conditions": "#forms && @formType:(form 712)",
      "dialog_node": "node_7_1606372741713",
      "previous_sibling": "node_5_1606372433661"
    },
    {
      "type": "standard",
      "title": "Form Type - Fund Transfer",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "fundTransfer"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains('fund_transfer')",
      "dialog_node": "node_7_1606465723323",
      "previous_sibling": "node_9_1606465641547"
    },
    {
      "type": "standard",
      "title": "continue - forced turn",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " Thank you. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_6_1606746868484",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "conditions": "true",
      "dialog_node": "node_7_1606746868484"
    },
    {
      "type": "standard",
      "title": "Authenticated - ask call reason",
      "parent": "node_3_1589893073742",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "$authenticated == true",
      "dialog_node": "node_7_1606747871421",
      "previous_sibling": "node_9_1606747663784"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_70_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_79_1591012628281"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_72_1591012628281",
      "previous_sibling": "node_71_1591012628281"
    },
    {
      "type": "standard",
      "title": "Input Zip code",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak your answer or enter it on the phone key pad.  What is the ZIP code?\"\n:\n\"And the ZIP code?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $ZIPCODE_VG_CONFIG ?>"
      },
      "parent": "node_71_1591026800363",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ownerZip"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_72_1591026800363"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_70_1591012628281",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_79_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_73_1591012628281",
      "previous_sibling": "node_72_1591012628281"
    },
    {
      "type": "standard",
      "title": "Valid ZIP format - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_72_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_77_1591026800363"
      },
      "conditions": "input.text == \"VALID_ZIP_FORMAT\"",
      "dialog_node": "node_73_1591026800363"
    },
    {
      "type": "folder",
      "title": "Auth flow - Company",
      "parent": "node_7_1556051821371",
      "conditions": "false",
      "dialog_node": "node_74_1590580615244",
      "previous_sibling": "node_10_1590414646214"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_72_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_81_1591026800363"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_74_1591026800363",
      "previous_sibling": "node_73_1591026800363"
    },
    {
      "type": "standard",
      "title": "Unkmown - Ask - Are you Owner/Payor ?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"Please choose one of the following. Say Policy owner, or press 1. Premium Payer. or 2.\"\n:\n\"Please say if you are the owner or premium payor?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_10_1590394093339",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_75_1590388169708",
      "previous_sibling": "node_92_1590389167232"
    },
    {
      "type": "standard",
      "title": "1.1. Company - Collect Insured SSN4",
      "output": {
        "generic": []
      },
      "parent": "node_74_1590580615244",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_75_1590580615250"
    },
    {
      "type": "standard",
      "title": "API call to validate zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_69_1591012628281",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_75_1591012628281",
      "previous_sibling": "node_70_1591012628281"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_72_1591026800363",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_81_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_75_1591026800363",
      "previous_sibling": "node_74_1591026800363"
    },
    {
      "type": "standard",
      "title": "Persist - Policyowner",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Owner"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_75_1590388169708",
      "context": {
        "role": "policyowner",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:policyowner ||    (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_76_1590388169708"
    },
    {
      "type": "standard",
      "title": "Input Insured SSN4",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad.  May I have the last four digits of Insured's social security number.\"\n:\n\"What is the last 4 digits of the Insured’s social security number?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN4_VG_CONFIG ?>"
      },
      "parent": "node_75_1590580615250",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_76_1590580615250"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_75_1591012628281",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_78_1591012628281"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_76_1591012628281"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": []
      },
      "parent": "node_76_1590388169708",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_92_1590389167232"
      },
      "conditions": "true",
      "dialog_node": "node_77_1590388169708"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_76_1590580615250",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_81_1590580615250"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_77_1590580615250"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_75_1591012628281",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_79_1591012628281"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_77_1591012628281",
      "previous_sibling": "node_76_1591012628281"
    },
    {
      "type": "standard",
      "title": "API call to validate zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_71_1591026800363",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_77_1591026800363",
      "previous_sibling": "node_72_1591026800363"
    },
    {
      "type": "standard",
      "title": "Persist - Premium Payor",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Payor"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_75_1590388169708",
      "context": {
        "role": "payor",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:(premium payor) ||    (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_78_1590388169708",
      "previous_sibling": "node_76_1590388169708"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_70_1590415973915",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590577459548"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_78_1590415973921",
      "previous_sibling": "node_71_1590415973921"
    },
    {
      "type": "standard",
      "title": "Do not have - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_76_1590580615250",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_85_1590580615250"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_78_1590580615250",
      "previous_sibling": "node_77_1590580615250"
    },
    {
      "type": "standard",
      "title": "Next on success - payor flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_69_1591012628281",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_80_1591012670881"
      },
      "conditions": "false",
      "dialog_node": "node_78_1591012628281",
      "previous_sibling": "node_75_1591012628281"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_77_1591026800363",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_80_1591026800363"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_78_1591026800363"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": []
      },
      "parent": "node_78_1590388169708",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_92_1590389167232"
      },
      "conditions": "true",
      "dialog_node": "node_79_1590388169708"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_76_1590580615250",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_85_1590580615250"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_79_1590580615250",
      "previous_sibling": "node_78_1590580615250"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_69_1591012628281",
      "context": {
        "authStatus": {
          "zipCodeValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_79_1591012628281",
      "previous_sibling": "node_78_1591012628281"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_77_1591026800363",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_81_1591026800363"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_79_1591026800363",
      "previous_sibling": "node_78_1591026800363"
    },
    {
      "type": "standard",
      "title": "Caller is not Owner/Payor - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_75_1590388169708",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_80_1590388169708",
      "previous_sibling": "node_78_1590388169708"
    },
    {
      "type": "standard",
      "title": "Payor Flow complete - Auth Done",
      "output": {
        "generic": []
      },
      "parent": "node_2_1557320487159",
      "context": {
        "authenticated": true
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_80_1591012670881",
      "previous_sibling": "node_1_1591012613372"
    },
    {
      "type": "standard",
      "title": "Next on success - flow complete",
      "output": {
        "generic": []
      },
      "parent": "node_71_1591026800363",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_35_1590995309629"
      },
      "conditions": "false",
      "dialog_node": "node_80_1591026800363",
      "previous_sibling": "node_77_1591026800363"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_75_1590580615250",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_81_1590580615250",
      "previous_sibling": "node_76_1590580615250"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_71_1591026800363",
      "context": {
        "authStatus": {
          "zipCodeValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_81_1591026800363",
      "previous_sibling": "node_80_1591026800363"
    },
    {
      "type": "standard",
      "title": "No_Agent",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "metadata": {},
      "conditions": "(@no || @role:(not agent) || @role:trustee || (@touchtone:two && input.text == @touchtone.literal)) && !#customer_service",
      "dialog_node": "node_8_1555356438487",
      "previous_sibling": "node_2_1602228945623"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1556226490826",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_8_1559234478140"
    },
    {
      "type": "standard",
      "title": "Are you the GA or BOA?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Are you a General Agent or calling from the <phoneme alphabet='ibm' ph='.0bAk.0c.0fxs'>Back Office</phoneme>?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1555357693947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_8_1559265922539",
      "previous_sibling": "node_10_1559266487355_1"
    },
    {
      "type": "standard",
      "title": "Persist - Policyowner after Agent prompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Owner"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "role": "policyowner",
        "action": {
          "route": "API",
          "method": "persist"
        },
        "question": "role"
      },
      "metadata": {},
      "conditions": "@role:policyowner",
      "dialog_node": "node_8_1574456243857",
      "previous_sibling": "node_2_1559319878910"
    },
    {
      "type": "standard",
      "title": "2nd try - Transfer",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry.  I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1589391843650",
      "context": {
        "_dummy": "<? clearDialogStack() ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "anything_else",
      "dialog_node": "node_8_1589391912559",
      "previous_sibling": "node_2_1589391843658"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_2_1606367434331",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589428576947"
      },
      "conditions": "true",
      "dialog_node": "node_8_1589447115328",
      "previous_sibling": "node_4_1606913351419"
    },
    {
      "type": "standard",
      "title": "Authenticated Further Assistance",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"<prosody rate='8%'> Do you need further assistance with this policy?  Please say yes, or press 1.  Say no, or press 2. </prosody>\"\n:\n\"<prosody rate='8%'> Do you need further assistance with this policy? </prosody>\"\n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "context": {
        "forms": "",
        "action": {
          "route": "TTS",
          "method": ""
        },
        "formType": "",
        "retryCounter": 0,
        "deliveryMethod": "",
        "transactionType": "",
        "selfServiceEligible": ""
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "false",
      "digress_in": "does_not_return",
      "dialog_node": "node_8_1589477312881",
      "previous_sibling": "node_6_1589411508294"
    },
    {
      "type": "standard",
      "title": "1st attempt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<voice-transformation type=\"Custom\" rate=\"20%\">Agent’s are not able to make a one-time payment. You can get our fax number, or mailing address, start a claim, make a one-time payment, or request customer service. What would you like to do?   </voice-transformation>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1589550998900",
      "context": {
        "payment_counter": "<? $payment_counter+1 ?>"
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$payment_counter == 0",
      "dialog_node": "node_8_1589552093861"
    },
    {
      "type": "standard",
      "title": "Transfer to CSR",
      "parent": "node_4_1555355227863",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_8_1589561352976"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_1_1606387038107",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "#repeat",
      "dialog_node": "node_8_1590083939879"
    },
    {
      "type": "folder",
      "title": "Agent Identification",
      "conditions": "false",
      "dialog_node": "node_8_1590383688936",
      "previous_sibling": "node_22_1590085182953"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1590406942385",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_3_1590577867834"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_8_1590406942386",
      "previous_sibling": "node_3_1590406942385"
    },
    {
      "type": "standard",
      "title": "Next on success - street number",
      "output": {
        "generic": []
      },
      "parent": "node_1_1590406942380",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_586_1590399193955"
      },
      "conditions": "false",
      "dialog_node": "node_8_1590576676094",
      "previous_sibling": "node_10_1590406942386"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_2_1590585843907",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_8_1590585843913",
      "previous_sibling": "node_3_1590585843913"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured SSN4",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_SSN",
                "value": {
                  "input": {
                    "text": "VALID_SSN"
                  }
                }
              },
              {
                "label": "INVALID_SSN",
                "value": {
                  "input": {
                    "text": "INVALID_SSN"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_2_1591009799116",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "insuredSsn4"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_8_1591009799116",
      "previous_sibling": "node_3_1591009799116"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_2_1591012613381",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_8_1591012613381",
      "previous_sibling": "node_3_1591012613381"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_7_1591015619693",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1591015619693"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_8_1591015619693"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Would you like to hear that again?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_6_1590048783906",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_8_1591102327648"
    },
    {
      "type": "folder",
      "title": "Data Collection Templates",
      "parent": "node_5_1589432821868",
      "dialog_node": "node_8_1591155506648"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_6_1591268884334",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_10_1591268884334"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_8_1591268884334",
      "previous_sibling": "node_7_1591268884334"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1590406942386",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590406942385"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_8_1592226770098",
      "previous_sibling": "node_12_1590406942386"
    },
    {
      "type": "standard",
      "title": "Invalid DOB - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_53_1591012628281",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_48_1591012628281"
      },
      "conditions": "input.text == \"INVALID_DOB\"",
      "dialog_node": "node_8_1592303136714",
      "previous_sibling": "node_55_1591012628281"
    },
    {
      "type": "standard",
      "title": "Repeat Menu ",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I can fax or mail the form to the address we have on record.  Which do you prefer?  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1592510933866",
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "#repeat || @repeat",
      "dialog_node": "node_8_1592510933886",
      "previous_sibling": "node_7_1592510933886"
    },
    {
      "type": "standard",
      "title": "Billing, Flexible Products:  Jump to \"Transfer to live CSR\"",
      "output": {},
      "parent": "node_7_1592957857357",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "true",
      "dialog_node": "node_8_1592957857357"
    },
    {
      "type": "standard",
      "title": "API Error - JUMP TO API ERROR (DIGRESSION)",
      "parent": "node_5_1592926168683",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1558377837377"
      },
      "conditions": "input.text == \"API_ERROR\"",
      "dialog_node": "node_8_1593205517267"
    },
    {
      "type": "standard",
      "title": "Jump to Authenticated Further Assistance",
      "parent": "node_1_1600192949921",
      "context": {
        "vgwPostResponseTimeoutCount": 7000
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1589477312881"
      },
      "conditions": "true",
      "dialog_node": "node_8_1600193282274",
      "previous_sibling": "node_51_1601665991924"
    },
    {
      "type": "standard",
      "title": "Forms not available via DigiCSR or the webs",
      "parent": "node_9_1590061435498",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1603800629022"
      },
      "conditions": "$formType.contains(\"form_712\") || $formType.contains(\"change_or_reinstate\") || $formType.contains(\"w9\") || ($formType.contains(\"agent_change\") && $role == \"payor\") ||  ($formType.contains(\"agent_change\") && $role == \"policyowner\")",
      "dialog_node": "node_8_1600198455475",
      "previous_sibling": "node_6_1600370630381"
    },
    {
      "type": "standard",
      "title": "Direct Customer Service Path  - Billing, Flexible Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1601311202419",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "optOut": true,
        "finalState": "O"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "@Customer_Service || #customer_service || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "node_8_1601311202439"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_1_1560536717615",
      "conditions": "#repeat",
      "dialog_node": "node_8_1601465978908",
      "previous_sibling": "node_3_1560536717618"
    },
    {
      "type": "standard",
      "title": "Repeat",
      "parent": "node_7_1602658148590",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_9_1559266384280"
      },
      "conditions": "#repeat",
      "dialog_node": "node_8_1601472744542",
      "previous_sibling": "node_9_1602658148602"
    },
    {
      "type": "standard",
      "title": "1st customer service - reprompt",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>\n\tOkay. You want customer service. I just need a little more information.\n</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_3_1602664776461",
      "context": {
        "retryCSRcounter": "<? $retryCSRcounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1556666448970"
      },
      "conditions": "$retryCSRcounter <$maxTries",
      "dialog_node": "node_8_1602664841087"
    },
    {
      "type": "standard",
      "title": "Check for Misrouted Call Variable",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "It appears that we do not service this policy, I can get you to the correct area, for future reference, please call. [MISDIRECTED_PHONE] <break time='350ms'/> to hear this again say Repeat. Otherwise remain on the line and I’ll transfer you. "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1603728506935",
      "conditions": "$dialogPath == \"groupLife\" ||   $dialogPath == \"prudential\" ||  $dialogPath == \"add\" || $dialogPath == \"annuities\"",
      "dialog_node": "node_8_1603728589682",
      "previous_sibling": "node_10_1603828318032"
    },
    {
      "type": "standard",
      "title": "Beneficiary Change Form",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>It sounds like you want a beneficiary change form.  Is thatt right?  </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1606917781041",
      "context": {
        "formType": [
          "bene_change"
        ],
        "callReason": true,
        "transactionType": "forms"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "(#forms &&  @formType:(beneficiary change form)) || #beneficiary_change",
      "dialog_node": "node_8_1606313710328"
    },
    {
      "type": "standard",
      "title": "Change Draft Date Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> You want to change the day the payment is drafted, is thatt right?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1606287393915",
      "context": {
        "transactionType": "change_draft_date"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#change_draft_date",
      "dialog_node": "node_8_1606369683069",
      "previous_sibling": "node_8_1606919627366"
    },
    {
      "type": "standard",
      "title": "Values Confirmation Message",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>You need to hear values, is thatt right? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_9_1606287393915",
      "context": {
        "callReason": true,
        "transactionType": "values"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_4_1599847999800"
      },
      "conditions": "#Values",
      "dialog_node": "node_8_1606370237468",
      "previous_sibling": "node_10_1606917781041"
    },
    {
      "type": "standard",
      "title": "Persist main menu response",
      "parent": "node_1_1555354306104",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "input.text != \"vgwPostResponseTimeout\"",
      "dialog_node": "node_8_1606388289693",
      "previous_sibling": "response_1_1606742667311"
    },
    {
      "type": "standard",
      "title": "continue",
      "output": {
        "generic": []
      },
      "parent": "node_7_1606746868484",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1589813093107"
      },
      "conditions": "true",
      "dialog_node": "node_8_1606746868484"
    },
    {
      "type": "folder",
      "title": "Billing",
      "parent": "node_9_1606287393915",
      "conditions": "true",
      "dialog_node": "node_8_1606919627366",
      "previous_sibling": "node_8_1606370237468"
    },
    {
      "type": "standard",
      "title": "Policy Not Found - ask SSN",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_67_1590388169708",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "input.text == \"INVALID_POLICYNUMBER\"",
      "dialog_node": "node_82_1590388169708",
      "previous_sibling": "node_69_1590388169708"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_81_1590580615250",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_84_1590580615250"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_82_1590580615250"
    },
    {
      "type": "standard",
      "title": "Role - Agent Assistant",
      "output": {
        "generic": []
      },
      "parent": "node_92_1590389167232",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1591015398084"
      },
      "conditions": "$role == \"agent assistant\"",
      "dialog_node": "node_82_1591026911198",
      "previous_sibling": "node_93_1590389167237"
    },
    {
      "type": "standard",
      "title": "No Invalid Policy",
      "output": {
        "generic": []
      },
      "parent": "node_64_1590388169702",
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "@no || (@touchtone:two && input.text == @touchtone.literal)",
      "dialog_node": "node_83_1590388169708",
      "previous_sibling": "node_65_1590388169708"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_81_1590580615250",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_85_1590580615250"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_83_1590580615250",
      "previous_sibling": "node_82_1590580615250"
    },
    {
      "type": "standard",
      "title": "2.3. Servicing Agent - Collect Last Payment Date",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_83_1591027451458",
      "previous_sibling": "node_127_1591027994393"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_83_1590388169708",
      "context": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_84_1590388169708"
    },
    {
      "type": "standard",
      "title": "Next on success - Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_75_1590580615250",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590585843907"
      },
      "conditions": "false",
      "dialog_node": "node_84_1590580615250",
      "previous_sibling": "node_81_1590580615250"
    },
    {
      "type": "standard",
      "title": "Input Last Payment Date",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Starting with the month, please say your last payment date.\"\n:\n\"Starting with the month, when was your last payment date?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $DATE_VG_CONFIG ?>"
      },
      "parent": "node_83_1591027451458",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "dob"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "lastPaymentDate"
      },
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "conditions": "true",
      "dialog_node": "node_84_1591027451464"
    },
    {
      "type": "standard",
      "title": "Reprompt policy number",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_83_1590388169708",
      "context": {
        "input_prompt": "I'm sorry. One digit at a time, please say the policy number.",
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_30_1590386357066"
      },
      "conditions": "anything_else",
      "dialog_node": "node_85_1590388169708",
      "previous_sibling": "node_84_1590388169708"
    },
    {
      "type": "standard",
      "title": "Next on Failure - collect Insured DOB",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Let's try <phoneme alphabet=\"ibm\" ph=\".1DIs.0In.2stEd\">this instead</phoneme><break time='500ms'/>,"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_75_1590580615250",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "authStatus": {
          "insuredSsn4Valid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590406942380"
      },
      "conditions": "false",
      "dialog_node": "node_85_1590580615250",
      "previous_sibling": "node_84_1590580615250"
    },
    {
      "type": "standard",
      "title": "Valid DOB - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_84_1591027451464",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_89_1591027451464"
      },
      "conditions": "input.text == \"VALID_DOB_FORMAT\"",
      "dialog_node": "node_85_1591027451464"
    },
    {
      "type": "standard",
      "title": "API call to validate zip code",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_ZIP",
                "value": {
                  "input": {
                    "text": "VALID_ZIP"
                  }
                }
              },
              {
                "label": "INVALID_ZIP",
                "value": {
                  "input": {
                    "text": "INVALID_ZIP"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_54_1590415836020",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "ownerZip"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_86_1590416125193",
      "previous_sibling": "node_70_1590415973915"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_84_1591027451464",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_93_1591027451464"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_86_1591027451464",
      "previous_sibling": "node_85_1591027451464"
    },
    {
      "type": "standard",
      "title": "Zip code Valid - Success",
      "output": {
        "generic": []
      },
      "parent": "node_86_1590416125193",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590579307983"
      },
      "conditions": "input.text == \"VALID_ZIP\"",
      "dialog_node": "node_87_1590416125197"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_84_1591027451464",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_93_1591027451464"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_87_1591027451464",
      "previous_sibling": "node_86_1591027451464"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_86_1590416125193",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590577459548"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_88_1590416125197",
      "previous_sibling": "node_87_1590416125197"
    },
    {
      "type": "standard",
      "title": "API call to validate Last Payment Date",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_83_1591027451458",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "lastPaymentDate"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_89_1591027451464",
      "previous_sibling": "node_84_1591027451464"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_64_1590388169702",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_62_1590387967777"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_90_1590388169708",
      "previous_sibling": "node_83_1590388169708"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_89_1591027451464",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_92_1591027451464"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_90_1591027451464"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_89_1591027451464",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_93_1591027451464"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_91_1591027451464",
      "previous_sibling": "node_90_1591027451464"
    },
    {
      "type": "standard",
      "title": "Agent Identification Menu - NEW",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1590383688936",
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_9_1555357693947",
      "previous_sibling": "node_1_1563500798686"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1556899354941",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_9_1556899354942",
      "previous_sibling": "node_43_1602670902051"
    },
    {
      "type": "standard",
      "title": "Are you the Agent?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"If you are the agent say yes or press 1. Otherwise, say no, or press two.\"\n:\n\"Are you the Agent?\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_8_1590383688936",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_9_1559266384280"
    },
    {
      "type": "standard",
      "title": "Are you the Agent?",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Are you the Agent?</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_9_1555357693947",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "role",
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_9_1559266384280_1"
    },
    {
      "type": "standard",
      "title": "Continue",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1574456243857",
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_9_1574456243871"
    },
    {
      "type": "standard",
      "title": "Digression Timeout Warning",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I didn't sense a response.  Are we still connected?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_1_1589391970365",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "conditions": "$timeoutWarning == true",
      "dialog_node": "node_9_1576786662607"
    },
    {
      "type": "standard",
      "title": "Values",
      "parent": "node_6_1589411508294",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$transactionType == \"values\"",
      "dialog_node": "node_9_1589412196928",
      "previous_sibling": "node_6_1592935820993"
    },
    {
      "type": "standard",
      "title": "Yes - Repeat",
      "output": {
        "generic": []
      },
      "parent": "node_2_1606367434331",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_38_1589275164768"
      },
      "conditions": "@yes ||   (@touchtone:one && input.text == @touchtone.literal) || #repeat",
      "dialog_node": "node_9_1589447115328"
    },
    {
      "type": "standard",
      "title": "Fax Option Recognized: What fax number would you like that sent to?",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $PHONENO_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_7_1589412157955",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "fax",
        "retryCounter": 0,
        "deliveryMethod": "fax"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1589475954222"
      },
      "conditions": "$deliveryMethod == \"fax\" || @delivery_method:fax || (@touchtone:one && input.text == @touchtone.literal)",
      "dialog_node": "node_9_1589457357742",
      "previous_sibling": "response_7_1589415715327"
    },
    {
      "type": "folder",
      "title": "Main Menu Digressions",
      "parent": "node_1_1589391970365",
      "conditions": "true",
      "dialog_node": "node_9_1589560826369",
      "previous_sibling": "node_5_1606388379258"
    },
    {
      "type": "standard",
      "title": "Form Request.  Is form type known?",
      "parent": "node_6_1589411508294",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$transactionType == \"forms\"",
      "dialog_node": "node_9_1590061435498",
      "previous_sibling": "node_6_1603978874732"
    },
    {
      "type": "standard",
      "title": "Transfer of ownership form recognized",
      "parent": "node_9_1590061435498",
      "context": {
        "formType": [
          "transfer_of_ownership"
        ]
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1592586667901"
      },
      "conditions": "$formType.contains(\"transfer_of_ownership\") ||   @formType:(transfer of ownership form) || #ownership_change",
      "dialog_node": "node_9_1590061525510",
      "previous_sibling": "node_4_1590061523562"
    },
    {
      "type": "standard",
      "title": "1. Individual - Collect Insured DOB",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590414646214",
      "context": {
        "retryCounter": 0
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_9_1590401650875"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_8_1590585843913",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1590585843913"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_9_1590585843913"
    },
    {
      "type": "standard",
      "title": "Valid SSN4 - Success",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591009799116",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1591009799116"
      },
      "conditions": "input.text == \"VALID_SSN\"",
      "dialog_node": "node_9_1591009799116"
    },
    {
      "type": "standard",
      "title": "Valid DOB - Success",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591012613381",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1591012613381"
      },
      "conditions": "input.text == \"VALID_DOB\"",
      "dialog_node": "node_9_1591012613381"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1591015619693",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1591015619693"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_9_1591015619693",
      "previous_sibling": "node_8_1591015619693"
    },
    {
      "type": "standard",
      "title": "API call to validate Insured DOB",
      "output": {
        "generic": [
          {
            "title": "API call to validate",
            "options": [
              {
                "label": "VALID_DOB",
                "value": {
                  "input": {
                    "text": "VALID_DOB"
                  }
                }
              },
              {
                "label": "INVALID_DOB",
                "value": {
                  "input": {
                    "text": "INVALID_DOB"
                  }
                }
              }
            ],
            "response_type": "option"
          }
        ]
      },
      "parent": "node_3_1591026800363",
      "context": {
        "action": {
          "route": "API",
          "method": "validate"
        },
        "question": "dob"
      },
      "metadata": {},
      "conditions": "false",
      "dialog_node": "node_9_1591026800363",
      "previous_sibling": "node_4_1591026800363"
    },
    {
      "type": "standard",
      "title": "No - any other help ?",
      "output": {
        "generic": []
      },
      "parent": "node_8_1591102327648",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1591102234106"
      },
      "conditions": "@no ||  (@touchtone:two && input.text == @touchtone.literal) || @vgTimeOut",
      "dialog_node": "node_9_1591102327656"
    },
    {
      "type": "standard",
      "title": "Next on success - ",
      "output": {
        "generic": []
      },
      "parent": "node_1_1591268884327",
      "conditions": "false",
      "dialog_node": "node_9_1591268884334",
      "previous_sibling": "node_6_1591268884334"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_17_1590415136089",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_16_1590415136082"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_9_1592226863760",
      "previous_sibling": "node_34_1590415136090"
    },
    {
      "type": "standard",
      "title": "Street Address Invalid - Retry",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I didn't find that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_64_1591012628281",
      "context": {
        "retryCounter": "<? $retryCounter+1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_59_1591012628281"
      },
      "conditions": "input.text == \"INVALID_ADDRESS\"",
      "dialog_node": "node_9_1592303163472",
      "previous_sibling": "node_66_1591012628281"
    },
    {
      "type": "standard",
      "title": "Main Menu Rerout  - Billing, Flexible Products, Future PTD",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1601311202419",
      "context": {
        "_dummy": "<? clearDialogStack() ?>",
        "yesNoResponseNeeded": false
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1555354306104"
      },
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_9_1601311202439",
      "previous_sibling": "node_8_1601311202439"
    },
    {
      "type": "standard",
      "title": "Continue conversation to set bene_change to create ForceNoInputTurn",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          },
          {
            "command": "vgwActForceNoInputTurn"
          }
        ]
      },
      "parent": "node_5_1592587030226",
      "context": {},
      "conditions": "true",
      "dialog_node": "node_9_1601916562356"
    },
    {
      "type": "standard",
      "title": "Family member",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "role": "otherRole"
      },
      "conditions": "@role:(family member)",
      "dialog_node": "node_9_1602227439656",
      "previous_sibling": "node_10_1602228468110"
    },
    {
      "type": "standard",
      "title": "Agent Assistant",
      "parent": "node_9_1559266384280_1",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_11_1559266644551"
      },
      "conditions": " @role:(agent assistant)",
      "dialog_node": "node_9_1602230786854",
      "previous_sibling": "node_1_1559265693354_1"
    },
    {
      "type": "standard",
      "title": "Main Menu",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1602658148590",
      "metadata": {},
      "conditions": "@main_menu || #main_menu",
      "dialog_node": "node_9_1602658148602",
      "previous_sibling": "node_34_1602670163446"
    },
    {
      "type": "standard",
      "title": "Misrouted Call Check - NOT USED",
      "parent": "node_2_1556050145112",
      "context": {
        "action": {
          "route": "RULES",
          "method": "policyIntercepts"
        }
      },
      "conditions": "false",
      "dialog_node": "node_9_1603728506935",
      "previous_sibling": "node_67_1590388169708"
    },
    {
      "type": "folder",
      "title": "Functional Service Request Detected - Migrated",
      "parent": "node_1_1555354306104",
      "conditions": "true",
      "dialog_node": "node_9_1606287393915",
      "previous_sibling": "node_2_1589219067678"
    },
    {
      "type": "standard",
      "title": "Form Type - Name Change",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "nameChange"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"name_change\")",
      "dialog_node": "node_9_1606465465118",
      "previous_sibling": "node_4_1606465401709"
    },
    {
      "type": "standard",
      "title": "Form Type - Agent Change",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1599848191616",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "create",
          "parameters": {
            "type": "agentChange"
          }
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_22_1590085182953"
      },
      "conditions": "$formType.contains(\"agent_change\")",
      "dialog_node": "node_9_1606465641547",
      "previous_sibling": "node_6_1606465541218"
    },
    {
      "type": "standard",
      "title": "Authenticated & Customer Service - direct transfer",
      "parent": "node_3_1589893073742",
      "context": {
        "optOut": true,
        "finalState": "O"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$authenticated == true && (#customer_service ||   (@touchtone:zero && input.text == @touchtone.literal))",
      "dialog_node": "node_9_1606747663784"
    },
    {
      "type": "standard",
      "title": "Role Known - Route to Auth",
      "output": {
        "generic": []
      },
      "parent": "node_10_1590394093339",
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "$role",
      "dialog_node": "node_92_1590389167232"
    },
    {
      "type": "standard",
      "title": "Next on success - owner address",
      "output": {
        "generic": []
      },
      "parent": "node_83_1591027451458",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_94_1591027550083"
      },
      "conditions": "false",
      "dialog_node": "node_92_1591027451464",
      "previous_sibling": "node_89_1591027451464"
    },
    {
      "type": "standard",
      "title": "Role - Agent",
      "output": {
        "generic": []
      },
      "parent": "node_92_1590389167232",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1591015369081"
      },
      "conditions": "$role == \"agent\"",
      "dialog_node": "node_93_1590389167237"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_70_1590415973915",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590577459548"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_93_1590416439034",
      "previous_sibling": "node_78_1590415973921"
    },
    {
      "type": "standard",
      "title": "Next on failure - Transfer",
      "output": {
        "generic": []
      },
      "parent": "node_83_1591027451458",
      "context": {
        "authStatus": {
          "lastPaymentDateValid": "U"
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_5_1556655996383"
      },
      "conditions": "false",
      "dialog_node": "node_93_1591027451464",
      "previous_sibling": "node_92_1591027451464"
    },
    {
      "type": "standard",
      "title": "2.4. Servicing Agent - Collect Owner Street Number (Alternate)",
      "output": {
        "generic": []
      },
      "parent": "node_2_1591026800356",
      "context": {
        "retryCounter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "false",
      "dialog_node": "node_94_1591027550083",
      "previous_sibling": "node_83_1591027451458"
    },
    {
      "type": "standard",
      "title": "Role - Policyowner",
      "output": {
        "generic": []
      },
      "parent": "node_92_1590389167232",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1590396609855"
      },
      "conditions": "$role == \"policyowner\"",
      "dialog_node": "node_95_1590389167237",
      "previous_sibling": "node_82_1591026911198"
    },
    {
      "type": "standard",
      "title": "Input owner street address",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<? (returning_from_digression)? \n\"You can speak the answer or use the phone key pad. Can I have the numerical portion of your street address. \"\n:\n\"What is the numerical portion of the owner's street address.\" \n?>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $STREETNO_VG_CONFIG ?>"
      },
      "parent": "node_94_1591027550083",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "streetAddress"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerStreetNumber"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_95_1591027550092"
    },
    {
      "type": "standard",
      "title": "Role -Payor",
      "output": {
        "generic": []
      },
      "parent": "node_92_1590389167232",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1591012278264"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "node_96_1590389167237",
      "previous_sibling": "node_95_1590389167237"
    },
    {
      "type": "standard",
      "title": "Valid address - api call to validate",
      "output": {
        "generic": []
      },
      "parent": "node_95_1591027550092",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_100_1591027550092"
      },
      "conditions": "input.text == \"VALID_ADDRESS_FORMAT\"",
      "dialog_node": "node_96_1591027550092"
    },
    {
      "type": "standard",
      "title": "Input full SSN9",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "$input_prompt "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $SSN9_VG_CONFIG ?>"
      },
      "parent": "node_13_1556228833790",
      "context": {
        "action": {
          "info": {
            "PII": {
              "type": "ssn"
            }
          },
          "route": "TTS",
          "method": ""
        },
        "question": "ownerSsn9"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_97_1590389564144"
    },
    {
      "type": "standard",
      "title": "I don't have it - Failure",
      "output": {
        "generic": []
      },
      "parent": "node_95_1591027550092",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_104_1591027550093"
      },
      "conditions": "@no || #wont_provide",
      "dialog_node": "node_97_1591027550092",
      "previous_sibling": "node_96_1591027550092"
    },
    {
      "type": "standard",
      "title": "Valid SSN Format",
      "output": {
        "generic": []
      },
      "parent": "node_97_1590389564144",
      "context": {},
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_138_1590389936838"
      },
      "conditions": "input.text == \"VALID_SSN_FORMAT\"",
      "dialog_node": "node_98_1590389564151"
    },
    {
      "type": "standard",
      "title": "Retry exceeded - Failure",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I'm sorry, I still didn't get that."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_95_1591027550092",
      "context": {},
      "metadata": {
        "_customization": {
          "mcr": false
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_104_1591027550093"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "node_98_1591027550092",
      "previous_sibling": "node_97_1591027550092"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " <prosody rate='8%'>  I'm sorry.  I still didn't get that.  Let's try this a different way. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1590061394509",
      "conditions": "$retryCounter >= ($maxTries +1)",
      "dialog_node": "response_10_1590062144979",
      "previous_sibling": "node_2_1590061394526"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_50_1601665363085",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "agentChange"
          }
        }
      },
      "conditions": "$formType.contains(\"agent_change\")",
      "dialog_node": "response_10_1601665423991",
      "previous_sibling": "node_1_1600193223687"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_50_1601665363085",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "nameChange"
          }
        }
      },
      "conditions": "$formType.contains('name_change')",
      "dialog_node": "response_10_1601665846031",
      "previous_sibling": "response_2_1601665837413"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_56_1601666099415",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": [
            {
              "type": "transfer_owner"
            },
            {
              "type": "bene_change"
            }
          ]
        }
      },
      "conditions": "($formType.contains('bene_change') && $formType.contains('transfer_of_ownership'))",
      "dialog_node": "response_10_1601913865424",
      "previous_sibling": "node_4_1592926153057"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Thank you.  To assist you better, I will need to confirm some information. <break time='500ms'></break>Are you <sub alias='anaygent'>an agent</sub>, <break time='350ms'></break> Agent Assistant, <break time='350ms'></break> or calling on behalf of <sub alias='anaygent'>an agent</sub>? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              },
              "jitterBufferDelay": 30
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "",
        "callReason": true,
        "retryCounter": 0,
        "retryCSRcounter": 0
      },
      "conditions": "true",
      "dialog_node": "response_1_1580925189636",
      "previous_sibling": "response_7_1580925202554"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<speak version='1.0'><prosody rate='8%'> <break time='250ms'></break> In most cases, I can mail oar fax fOHRMS, provide policy valyooz, confirm if a payment was received, or check when a payment is due. In a few words, please tell me why you're calling today.  </prosody></speak>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "deleted_variable1": "<? context.remove('role') ?>",
        "deleted_variable2": "<? context.remove('policyNumberValid') ?>",
        "vgwActionSequence": [
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": 1.5
              }
            }
          },
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "menu",
        "callReason": false,
        "hitMainMenu": true,
        "retryCounter": 0,
        "authenticated": false
      },
      "conditions": "true",
      "dialog_node": "response_1_1606742667311",
      "previous_sibling": "response_9_1606742675891"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry, I still didn't get that. Let's try <phoneme alphabet='ibm' ph='.1DIs.0In.2stEd'>this instead</phoneme><break time='500ms'></break>,</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1601928952420",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "$retryCounter >= ($maxTries +1)",
      "dialog_node": "response_18_1601928952445",
      "previous_sibling": "node_17_1601928952445"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that.  Let's try this a different way. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1605698832101",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_18_1605698832103"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1601928952420",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_17_1601928952445"
      },
      "conditions": "true",
      "dialog_node": "response_19_1601928952445",
      "previous_sibling": "response_18_1601928952445"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1605698832101",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "response_19_1605698832103",
      "previous_sibling": "response_18_1605698832103"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1559319878910",
      "context": {
        "role": "generalAgentOrBackOffice"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_13_1559266652039"
      },
      "conditions": "@role:(general agent)",
      "dialog_node": "response_2_1573690530997",
      "previous_sibling": "node_4_1559320329617"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1580493738428",
      "disabled": true,
      "metadata": {},
      "conditions": "@no",
      "dialog_node": "response_2_1580493738458"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>  Do you need further assistance with this policy?  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_8_1589477312881",
      "context": {
        "forms": "",
        "formType": "",
        "deliveryMethod": ""
      },
      "disabled": true,
      "conditions": "$authenticated == true",
      "dialog_node": "response_2_1589477359611",
      "previous_sibling": "node_4_1590013713107"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": " <prosody rate='8%'> Most forms can be faxed or mailed to the address of record.  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1590061394509",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590061394526"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "response_2_1600129640357",
      "previous_sibling": "response_3_1590061394526"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1600852604163",
      "disabled": true,
      "metadata": {},
      "conditions": "@no",
      "dialog_node": "response_2_1600852604169"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_50_1601665363085",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "fundTransfer"
          }
        }
      },
      "conditions": "$formType.contains('fund_transfer')",
      "dialog_node": "response_2_1601665837413",
      "previous_sibling": "response_10_1601665423991"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1602506150894",
      "disabled": true,
      "metadata": {},
      "dialog_node": "response_2_1602506150912"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1577197142669",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_8_1559265922539"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_3_1577197142681",
      "previous_sibling": "node_2_1577197142681"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry, I didn't get that. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1579015294774",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_15_1578343769350"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_3_1579015294790"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1589219067678",
      "context": {
        "deliveryMethod": "mail"
      },
      "conditions": "@delivery_method:mail",
      "dialog_node": "response_3_1589298550673"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1590061394509",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590061394526"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_3_1590061394526",
      "previous_sibling": "response_10_1590062144979"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1589304475474",
      "conditions": "true",
      "dialog_node": "response_3_1590075721596",
      "previous_sibling": "response_9_1590075693386"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that.  Let's try this a different way. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1591886910288",
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$retryCounter >= ($maxTries +1)",
      "dialog_node": "response_3_1591886910306"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry, I still didn't get that.  Let's try <phoneme alphabet='ibm' ph='.1DIs.0In.2stEd'>this instead</phoneme><break time='500ms'></break>,</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1595013277068",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_1_1589888185679"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_3_1595013277088"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you.  To assist you better, I will need to confirm some information. Are you  <sub alias='anaygent'>an agent</sub>, <break time='350ms'/> or Agent Assistant?\n"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_22_1590085182953",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": null,
        "callReason": false,
        "retryCounter": 0
      },
      "conditions": "#customer_service ||    (@touchtone:five && input.text == @touchtone.literal) || (@touchtone:zero && input.text == @touchtone.literal)",
      "dialog_node": "response_3_1606392974186"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1577197142669",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1577197142681"
      },
      "conditions": "true",
      "dialog_node": "response_4_1577197142681",
      "previous_sibling": "response_3_1577197142681"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>Is yur call regarding a death claim? or a living benefit,</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1579015294774",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_14_1578343769338"
      },
      "conditions": "true",
      "dialog_node": "response_4_1579015294790",
      "previous_sibling": "response_3_1579015294790"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1589219067678",
      "context": {
        "deliveryMethod": "fax"
      },
      "conditions": "@delivery_method:fax",
      "dialog_node": "response_4_1589298578546",
      "previous_sibling": "response_3_1589298550673"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Most forms can be faxed, mailed, or are available on our website.  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1590061394509",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_2_1590061394526"
      },
      "conditions": "true",
      "dialog_node": "response_4_1590061394526",
      "previous_sibling": "response_2_1600129640357"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry, I didn't get that.  I can fax or mail the form to the address we have on record or provide you with instruction to print the form from our website.  Which do you prefer? Please say fax or, press 1.  Mail, or press 2.  Website, or press 3.</prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1591886910288",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_4_1591886910306",
      "previous_sibling": "response_7_1600189726747"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry, try telling me again, or you can use the phone keypad.  Starting with the area code, please tell me your day time phone number.</prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "grammar_name": "<? $PHONENO_GRAMMAR ?>",
                "word_confidence": true,
                "customization_id": "<? $SSNTIN_MODEL ?>",
                "smart_formatting": true,
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "10",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1595013277068",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_1_1589459289804"
      },
      "conditions": "true",
      "dialog_node": "response_4_1595013277088",
      "previous_sibling": "response_3_1595013277088"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I can fax or mail the form to the address we have on record or provide you with instructions to print the form from our website.  Which do you prefer?  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1591886910288",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "true",
      "dialog_node": "response_5_1591886910306",
      "previous_sibling": "response_4_1591886910306"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_51_1601665991924",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "fundTransfer"
          }
        }
      },
      "conditions": "$formType.contains('fund_transfer')",
      "dialog_node": "response_53_1601665991933"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_51_1601665991924",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "nameChange"
          }
        }
      },
      "conditions": "$formType.contains('name_change')",
      "dialog_node": "response_54_1601665991933",
      "previous_sibling": "response_53_1601665991933"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_51_1601665991924",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "pors"
          }
        }
      },
      "conditions": "$formType.contains('pors')",
      "dialog_node": "response_55_1601665991933",
      "previous_sibling": "response_54_1601665991933"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_56_1601666099415",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "bene_change"
          }
        }
      },
      "conditions": "$formType.contains('bene_change')",
      "dialog_node": "response_57_1601666099423",
      "previous_sibling": "response_10_1601913865424"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_56_1601666099415",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "pac"
          }
        }
      },
      "conditions": "$formType.contains(\"bank_authorization\")",
      "dialog_node": "response_58_1601666099423",
      "previous_sibling": "response_57_1601666099423"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_56_1601666099415",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "transfer_owner"
          }
        }
      },
      "conditions": "$formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "response_59_1601666099423",
      "previous_sibling": "response_58_1601666099423"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry, I didn't get that.  I can fax or mail the form to the address we have on record.  Which do you prefer? Please say fax or, press 1.  Say mail, or press 2. </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1591886910288",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "$role == \"payor\" && $retryCounter >= $maxTries",
      "dialog_node": "response_6_1600190370763",
      "previous_sibling": "response_3_1591886910306"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_50_1601665363085",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "pors"
          }
        }
      },
      "conditions": "$formType.contains('pors')",
      "dialog_node": "response_6_1601665856504",
      "previous_sibling": "response_10_1601665846031"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Thank you.  To assist you better, I will need to confirm some information. Are you  <sub alias='anaygent'>an agent</sub>, <break time='350ms'/> or Agent Assistant?\n"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": "<? $GENERAL_VG_CONFIG ?>"
      },
      "parent": "node_22_1590085182953",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": null,
        "callReason": true,
        "retryCounter": 0
      },
      "conditions": "true",
      "dialog_node": "response_6_1606392982613",
      "previous_sibling": "response_3_1606392974186"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_66_1601666883784",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "bene_change"
          }
        }
      },
      "conditions": "$formType.contains('bene_change')",
      "dialog_node": "response_67_1601666883791"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_66_1601666883784",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "pac"
          }
        }
      },
      "conditions": "$formType.contains(\"bank_authorization\")",
      "dialog_node": "response_68_1601666883791",
      "previous_sibling": "response_67_1601666883791"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": ""
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_66_1601666883784",
      "context": {
        "action": {
          "route": "REQUEST",
          "method": "complete",
          "parameters": {
            "type": "transfer_owner"
          }
        }
      },
      "conditions": "$formType.contains(\"transfer_of_ownership\")",
      "dialog_node": "response_69_1601666883791",
      "previous_sibling": "response_68_1601666883791"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I'm sorry.  I still didn't get that. </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1577197346380",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        }
      },
      "metadata": {},
      "conditions": "$retryCounter >= $maxTries",
      "dialog_node": "response_7_1577197346395",
      "previous_sibling": "node_6_1577197346395"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> Thank you.  To assist you better, I will need to confirm some information. <break time='500ms'></break>Are you <sub alias='anaygent'>an agent</sub>, <break time='350ms'></break> Agent Assistant, <break time='350ms'></break> or calling on behalf of <sub alias='anaygent'>an agent</sub>? </prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              },
              "jitterBufferDelay": 30
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_2_1555355201520_1",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "",
        "callReason": false,
        "retryCounter": 0,
        "retryCSRcounter": 0,
        "customerServiceCounter": "<? $customerServiceCounter + 1 ?>"
      },
      "conditions": "#customer_service ||  (@touchtone:five && input.text == @touchtone.literal)",
      "dialog_node": "response_7_1580925202554"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_7_1589412157955",
      "disabled": true,
      "conditions": "$deliveryMethod == \"mail\"",
      "dialog_node": "response_7_1589415715327"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> I can fax or mail the form to the address we have on record.  Which do you prefer?  </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_1_1591886910288",
      "context": {
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_9_1589457357742"
      },
      "conditions": "$role == \"payor\"",
      "dialog_node": "response_7_1600189726747",
      "previous_sibling": "response_6_1600190370763"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'>I'm sorry. I didn't get that.</prosody>"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "vgwActionSequence": [
          {
            "command": "vgwActDisableSpeechBargeIn"
          },
          {
            "command": "vgwActDisableDTMFBargeIn"
          },
          {
            "command": "vgwActSetSTTConfig",
            "parameters": {
              "config": {
                "model": "en-US_NarrowbandModel",
                "timestamps": true,
                "word_confidence": true,
                "customization_id": "<? $GEN_MODEL ?>",
                "smart_formatting": false,
                "acoustic_customization_id": "<? $ACOUSTIC_GEN_MODEL ?>",
                "x-watson-learning-opt-out": true,
                "end_of_phrase_silence_time": "<? $eof_silence_time ?>"
              }
            }
          },
          {
            "command": "vgwActCollectDtmf",
            "parameters": {
              "dtmfCount": "1",
              "dtmfIgnoreSpeech": true
            }
          },
          {
            "command": "vgwActPlayText"
          }
        ]
      },
      "parent": "node_5_1577197346380",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "retryCounter": "<? $retryCounter + 1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "body",
        "dialog_node": "node_6_1577197346395"
      },
      "conditions": "true",
      "dialog_node": "response_8_1577197346395",
      "previous_sibling": "response_7_1577197346395"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_10_1589304475474",
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_6_1595448860582"
      },
      "conditions": "$selfServiceEligible == true",
      "dialog_node": "response_9_1590075693386",
      "previous_sibling": "node_2_1606720544810"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "<prosody rate='8%'> If nothing further is needed, you may hang</prosody> <prosody rate='-40%' pitch='+30%'> up.</prosody> <prosody rate='8%'> Otherwise, In a few words, please tell me why you're calling today.  You can say things like. I need to update my beneficiary!  Ore, I need updated values! </prosody> "
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1555354306104",
      "context": {
        "action": {
          "route": "TTS",
          "method": ""
        },
        "question": "menu"
      },
      "conditions": "$hitMainMenu==true",
      "dialog_node": "response_9_1606742675891"
    }
  ],
  "counterexamples": [
    {
      "text": "about a collateral assignment"
    },
    {
      "text": "account"
    },
    {
      "text": "adaptable life adjustment"
    },
    {
      "text": "agent"
    },
    {
      "text": "agent assist"
    },
    {
      "text": "agent assistance"
    },
    {
      "text": "agent assistant"
    },
    {
      "text": "agent contract number"
    },
    {
      "text": "a number"
    },
    {
      "text": "assistance"
    },
    {
      "text": "Attorney for premium payor"
    },
    {
      "text": "back"
    },
    {
      "text": "because I'm the trustee"
    },
    {
      "text": "beneficiary"
    },
    {
      "text": "but she called me twice changes in policy"
    },
    {
      "text": "calling on behalf of a client"
    },
    {
      "text": "calling on behalf of client"
    },
    {
      "text": "calling on behalf of my mother"
    },
    {
      "text": "calling on behalf of myself"
    },
    {
      "text": "calling on behalf of the customer"
    },
    {
      "text": "cancel"
    },
    {
      "text": "Can I access a 1035 exchange form on the website"
    },
    {
      "text": "Can I get"
    },
    {
      "text": "can you send me a payor change change"
    },
    {
      "text": "cash 3 different payment I need questions on my a policy"
    },
    {
      "text": "change"
    },
    {
      "text": "change billing information"
    },
    {
      "text": "check on benefits trees of my policy"
    },
    {
      "text": "confirm policy owner"
    },
    {
      "text": "correspondence number 01179787"
    },
    {
      "text": "customer"
    },
    {
      "text": "file"
    },
    {
      "text": "get amount thank you for asking account went off yes a person yes I would get you automatically I need to send address uhhuh"
    },
    {
      "text": "%HESITATION"
    },
    {
      "text": "how do I add more beneficiaries than the line allows"
    },
    {
      "text": "how do I add more beneficiaries than the lines allow"
    },
    {
      "text": "I am"
    },
    {
      "text": "i am an insured"
    },
    {
      "text": "I am calling to get information for 2 of my children's policies"
    },
    {
      "text": "i am insured"
    },
    {
      "text": "I am looking for a representative to help me change in detail main web my lash check cash payor shows payor book account"
    },
    {
      "text": "I am one of those"
    },
    {
      "text": "I am the attorney for the payor"
    },
    {
      "text": "i am the client"
    },
    {
      "text": "I am the lawyer for the payor"
    },
    {
      "text": "i am the trust"
    },
    {
      "text": "I and I'm calling to get some information for 2 of my clients and their policies"
    },
    {
      "text": "I don't have it"
    },
    {
      "text": "I don't know"
    },
    {
      "text": "I have a question on the bene change form"
    },
    {
      "text": "I have questions on my values"
    },
    {
      "text": "I like to know how much tax I should put down that will be taken"
    },
    {
      "text": "I'm afraid I've missed the payment and %HESITATION I had we surgery so I'm trying to.."
    },
    {
      "text": "I'm calling in regards to a payment"
    },
    {
      "text": "im calling on behalf of myself"
    },
    {
      "text": "I'm calling on behalf of our client that purchase this Hartford policy through a different agent.."
    },
    {
      "text": "i'm calling on my policy"
    },
    {
      "text": "I'm checking to see if the home is X. gonna play"
    },
    {
      "text": "i'm in insured"
    },
    {
      "text": "I'm in trouble"
    },
    {
      "text": "I'm not sure"
    },
    {
      "text": "I'm representing my mother"
    },
    {
      "text": "I'm the insured"
    },
    {
      "text": "I'm the insured."
    },
    {
      "text": "I'm the policy holder"
    },
    {
      "text": "I need"
    },
    {
      "text": "I need 1035 exchange"
    },
    {
      "text": "I need 1035 exchange forms"
    },
    {
      "text": "I need a class basis letter"
    },
    {
      "text": "I need an address for overnight delivery to you"
    },
    {
      "text": "I need blue birds"
    },
    {
      "text": "I need forms for a 1035 exchange"
    },
    {
      "text": "I need help with values"
    },
    {
      "text": "I need information on 1035 exchanges"
    },
    {
      "text": "I need one of those"
    },
    {
      "text": "I need riders"
    },
    {
      "text": "I need to check on my automatic draft"
    },
    {
      "text": "I need to correct a balance"
    },
    {
      "text": "I need to find out how to do a withdrawal"
    },
    {
      "text": "I need to get"
    },
    {
      "text": "I need to get to the"
    },
    {
      "text": "I need to have a letter sent telling me ask if this is term or whole lives and how much it's worth benefit can be cash stand my husband is now in a nursing home and I'm needing to get papers taken"
    },
    {
      "text": "I need to know what I to continue the policy"
    },
    {
      "text": "I need to know what my policy covers"
    },
    {
      "text": "I need to update"
    },
    {
      "text": "I need to update my"
    },
    {
      "text": "I need to update payment method"
    },
    {
      "text": "I need to update the"
    },
    {
      "text": "I need to update the payor"
    },
    {
      "text": "I need vlog"
    },
    {
      "text": "i need you"
    },
    {
      "text": "I sent a check in for my payment all the life insurance oh one six seven and it's not and now it.."
    },
    {
      "text": "I want the status on my change of owner form"
    },
    {
      "text": "I want to know if you calling premium is hard for agent"
    },
    {
      "text": "I want to see the notes"
    },
    {
      "text": "I want to see what it counts and yeah life insurance on myself"
    },
    {
      "text": "I work for the payor"
    },
    {
      "text": "I would like to take a partial surrender"
    },
    {
      "text": "late billing payment"
    },
    {
      "text": "live in check"
    },
    {
      "text": "loan pay off"
    },
    {
      "text": "mailing address issue"
    },
    {
      "text": "my beneficiary"
    },
    {
      "text": "nah"
    },
    {
      "text": "need to update payment"
    },
    {
      "text": "no"
    },
    {
      "text": "no im calling on behalf of myself"
    },
    {
      "text": "no it's my husband's account but I'm calling form"
    },
    {
      "text": "notice three C. %HESITATION late premium"
    },
    {
      "text": "now"
    },
    {
      "text": "owner"
    },
    {
      "text": "payment didn't post"
    },
    {
      "text": "policy owner"
    },
    {
      "text": "Premium"
    },
    {
      "text": "question about a monthly premium loan interest that's due"
    },
    {
      "text": "Screen pop test again"
    },
    {
      "text": "surrender"
    },
    {
      "text": "thank you"
    },
    {
      "text": "that's correct"
    },
    {
      "text": "to check on a fax that I sent last week"
    },
    {
      "text": "to see when this policy was paid up"
    },
    {
      "text": "update"
    },
    {
      "text": "VALID_PHONE_FORMAT"
    },
    {
      "text": "variable annuities policy"
    },
    {
      "text": "we are the signing"
    },
    {
      "text": "We need to check on the automatic draft"
    },
    {
      "text": "what about my transfer of ownership"
    },
    {
      "text": "What is the"
    },
    {
      "text": "what's the cost of insurance"
    },
    {
      "text": "what was the original purchase"
    },
    {
      "text": "Where are the notes today"
    },
    {
      "text": "Where do I add more beneficiaries than fits on the lines?"
    },
    {
      "text": "Where do I add more beneficiaries than the lines allow"
    },
    {
      "text": "Where is the"
    },
    {
      "text": "Where is the 1035 form located"
    },
    {
      "text": "who"
    },
    {
      "text": "XXXX"
    },
    {
      "text": "yep"
    },
    {
      "text": "you're not employee see"
    }
  ],
  "system_settings": {
    "tooling": {
      "store_generic_responses": true
    },
    "off_topic": {
      "enabled": true
    },
    "system_entities": {
      "enabled": true
    },
    "intent_classification": {
      "training_backend_version": "v1"
    }
  },
  "learning_opt_out": true,
  "name": "Client2 - Self Service Dev Master - copy Manoj",
  "language": "en",
  "description": ""
}